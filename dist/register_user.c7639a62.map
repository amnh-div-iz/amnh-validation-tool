{"version":3,"sources":["amnh-validation-tool/static/js/errors.js","amnh-validation-tool/static/js/helpers.js","amnh-validation-tool/static/js/register_user.js"],"names":["errors","introIvalidUsername","longFormNoUserName","addPersonNoVerbatim","noPlacesFound","googleMapsError","noTaxnomoniesFound","htmlTextToElement","template","document","createElement","html","trim","innerHTML","content","firstChild","showError","elementId","text","center","centerClass","errorTemplate","nameInput","getElementById","insertAdjacentElement","classList","add","cleanErrors","labelId","inputId","errorLabel","remove","kebabToCamel","str","replace","m","toUpperCase","validateName","cleanValue","value","length","removeStyleNodes","parentId","parent","styleNodes","querySelectorAll","forEach","element","removeChild","resetForm","formId","elements","addUser","sessionStorage","setItem","userName","nextPage","nextLink","href","window","location","validateAndRegisterUser","removeItem","nameValue","querySelector","registerButton","addEventListener","longFormError","getItem"],"mappings":"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","file":"register_user.c7639a62.map","sourcesContent":["const errors = {\n  introIvalidUsername: \"Remember to fill in a valid username\",\n  longFormNoUserName: \"You have to enter your Name before entering data\",\n  addPersonNoVerbatim: \"You must enter a Verbatim Name before adding a Person\",\n  noPlacesFound: \"No details about the place you searched for\",\n  googleMapsError: \"Error Status in Google Maps search: \",\n  noTaxnomoniesFound:\n    \"Worms couldn't find that taxonomy, try searching it by hand \"\n};\n\n/**\n * Converts a valid html string representation into an html element\n * @param {html string representation} html\n */\nconst htmlTextToElement = html => {\n  const template = document.createElement(\"template\");\n  html = html.trim();\n  template.innerHTML = html;\n  return template.content.firstChild;\n};\n\n/**\n * Displays an error message and adds the error class to the input field\n */\nexport const showError = (elementId, text, center=true) => {\n  var centerClass = center ? 'u-align-center' : ''\n  const errorTemplate = `<div id=\"Error\" class='c-form__error-label ${centerClass}' >${text}</div>`;\n  const nameInput = document.getElementById(elementId);\n\n  nameInput.insertAdjacentElement(\"afterend\", htmlTextToElement(errorTemplate));\n  nameInput.classList.add(\"c-input--error\");\n};\n\n/**\n * Removes the error classes and html elements\n */\nexport const cleanErrors = (labelId, inputId) => {\n  const errorLabel = document.getElementById(labelId);\n  const nameInput = document.getElementById(inputId);\n\n  if (errorLabel) {\n    errorLabel.remove();\n    nameInput.classList.remove(\"c-input--error\");\n  }\n};\n\nexport default errors;\n","export function kebabToCamel(str) {\n    return str.replace(/(\\-[A-Za-z])/g, function (m) {\n        return m.toUpperCase().replace('-','')\n    })\n}\n\n/**\n * Checks if the input is filled in\n * @param {string} value\n */\nexport const validateName = value => {\n  const cleanValue = value.replace(/\\s+/g, \"\");\n  if (cleanValue.length === 0) {\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Removes any children style elements of a given parent node\n * @param {parentId string}\n */\nexport const removeStyleNodes = (parentId) => {\n  var parent = document.getElementById(parentId)\n  var styleNodes = document.querySelectorAll(`#${parentId} style`);\n  styleNodes.forEach( (element) => {\n    parent.removeChild(element);\n  })\n}\n\n/**\n * Reset all the input and select elements to default and remove styles of the given form\n * @param {formId}\n */\nexport const resetForm = (formId) => {\n  var elements = document.querySelectorAll(`#${formId} input, #${formId} select`);\n  elements.forEach((element) => {\n    element.value = ''\n  })\n  removeStyleNodes(formId);\n}","import errorsList from \"./errors\";\nimport { showError, cleanErrors } from \"./errors\";\nimport { validateName } from \"./helpers\";\n\n\n/**\n * Adds the user tring to session storage\n * @param {string} userName\n */\nconst addUser = userName => {\n  sessionStorage.setItem(\"userName\", userName);\n};\n\n/**\n * changes the window location to the long form\n */\nconst nextPage = () => {\n  const nextLink = document.getElementById(\"next\").href;\n  window.location = nextLink;\n};\n\n/**\n * Validates that the user has entered something valid, if so\n * it adds the user to sessionStorage unser the \"userName\" key and\n * transports the user to the next form\n */\nconst validateAndRegisterUser = () => {\n  cleanErrors(\"Error\", \"name\");\n  sessionStorage.removeItem(\"longFormNoUserError\");\n  const nameValue = document.querySelector(\"#name\").value;\n  if (validateName(nameValue)) {\n    addUser(nameValue);\n    nextPage();\n  } else {\n    showError(\"name\", errorsList.introIvalidUsername);\n  }\n};\nconst registerButton = document.querySelector(\"#registerUser\");\n\nregisterButton.addEventListener(\"click\", validateAndRegisterUser);\n\n// check if an error from longform exists in the sessionStorage and display it\nconst longFormError = sessionStorage.getItem(\"longFormNoUserError\");\nif (longFormError) {\n  showError(\"name\", longFormError);\n}\n"]}