{"version":3,"sources":["static/js/errors.js","static/js/helpers.js","static/js/register_user.js"],"names":["errors","introIvalidUsername","longFormNoUserName","addPersonNoVerbatim","noPlacesFound","googleMapsError","noTaxnomoniesFound","htmlTextToElement","template","document","createElement","html","trim","innerHTML","content","firstChild","showError","elementId","text","center","centerClass","errorTemplate","nameInput","getElementById","insertAdjacentElement","classList","add","cleanErrors","labelId","inputId","errorLabel","remove","kebabToCamel","str","replace","m","toUpperCase","validateName","cleanValue","value","length","removeStyleNodes","parentId","parent","styleNodes","querySelectorAll","forEach","element","removeChild","resetForm","formId","elements","addUser","sessionStorage","setItem","userName","nextPage","nextLink","href","window","location","validateAndRegisterUser","removeItem","nameValue","querySelector","registerButton","addEventListener","longFormError","getItem"],"mappings":"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","file":"register_user.9e238954.map","sourcesContent":["const errors = {\n  introIvalidUsername: \"Remember to fill in a valid username\",\n  longFormNoUserName: \"You have to enter your Name before entering data\",\n  addPersonNoVerbatim: \"You must enter a Verbatim Name before adding a Person\",\n  noPlacesFound: \"No details about the place you searched for\",\n  googleMapsError: \"Error Status in Google Maps search: \",\n  noTaxnomoniesFound:\n    \"Worms couldn't find that taxonomy, try searching it by hand \"\n};\n\n/**\n * Converts a valid html string representation into an html element\n * @param {html string representation} html\n */\nconst htmlTextToElement = html => {\n  const template = document.createElement(\"template\");\n  html = html.trim();\n  template.innerHTML = html;\n  return template.content.firstChild;\n};\n\n/**\n * Displays an error message and adds the error class to the input field\n */\nexport const showError = (elementId, text, center=true) => {\n  var centerClass = center ? 'u-align-center' : ''\n  const errorTemplate = `<div id=\"Error\" class='c-form__error-label ${centerClass}' >${text}</div>`;\n  const nameInput = document.getElementById(elementId);\n\n  nameInput.insertAdjacentElement(\"afterend\", htmlTextToElement(errorTemplate));\n  nameInput.classList.add(\"c-input--error\");\n};\n\n/**\n * Removes the error classes and html elements\n */\nexport const cleanErrors = (labelId, inputId) => {\n  const errorLabel = document.getElementById(labelId);\n  const nameInput = document.getElementById(inputId);\n\n  if (errorLabel) {\n    errorLabel.remove();\n    nameInput.classList.remove(\"c-input--error\");\n  }\n};\n\nexport default errors;\n","export function kebabToCamel(str) {\n    return str.replace(/(\\-[A-Za-z])/g, function (m) {\n        return m.toUpperCase().replace('-','')\n    })\n}\n\n/**\n * Checks if the input is filled in\n * @param {string} value\n */\nexport const validateName = value => {\n  const cleanValue = value.replace(/\\s+/g, \"\");\n  if (cleanValue.length === 0) {\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Removes any children style elements of a given parent node\n * @param {parentId string}\n */\nexport const removeStyleNodes = (parentId) => {\n  var parent = document.getElementById(parentId)\n  var styleNodes = document.querySelectorAll(`#${parentId} style`);\n  styleNodes.forEach( (element) => {\n    parent.removeChild(element);\n  })\n}\n\n/**\n * Reset all the input and select elements to default and remove styles of the given form\n * @param {formId}\n */\nexport const resetForm = (formId) => {\n  var elements = document.querySelectorAll(`#${formId} input, #${formId} select`);\n  elements.forEach((element) => {\n    element.value = ''\n  })\n  removeStyleNodes(formId);\n}","import errorsList from \"./errors\";\nimport { showError, cleanErrors } from \"./errors\";\nimport { validateName } from \"./helpers\";\n\n\n/**\n * Adds the user tring to session storage\n * @param {string} userName\n */\nconst addUser = userName => {\n  sessionStorage.setItem(\"userName\", userName);\n};\n\n/**\n * changes the window location to the long form\n */\nconst nextPage = () => {\n  const nextLink = document.getElementById(\"next\").href;\n  window.location = nextLink;\n};\n\n/**\n * Validates that the user has entered something valid, if so\n * it adds the user to sessionStorage unser the \"userName\" key and\n * transports the user to the next form\n */\nconst validateAndRegisterUser = () => {\n  cleanErrors(\"Error\", \"name\");\n  sessionStorage.removeItem(\"longFormNoUserError\");\n  const nameValue = document.querySelector(\"#name\").value;\n  if (validateName(nameValue)) {\n    addUser(nameValue);\n    nextPage();\n  } else {\n    showError(\"name\", errorsList.introIvalidUsername);\n  }\n};\nconst registerButton = document.querySelector(\"#registerUser\");\n\nregisterButton.addEventListener(\"click\", validateAndRegisterUser);\n\n// check if an error from longform exists in the sessionStorage and display it\nconst longFormError = sessionStorage.getItem(\"longFormNoUserError\");\nif (longFormError) {\n  showError(\"name\", longFormError);\n}\n"]}