{"version":3,"sources":["static/js/errors.js","static/js/css_injector.js","static/js/helpers.js","static/js/location.js"],"names":["errors","introIvalidUsername","longFormNoUserName","addPersonNoVerbatim","noPlacesFound","googleMapsError","noTaxnomoniesFound","htmlTextToElement","template","document","createElement","html","trim","innerHTML","content","firstChild","showError","elementId","text","center","centerClass","errorTemplate","nameInput","getElementById","insertAdjacentElement","classList","add","cleanErrors","labelId","inputId","errorLabel","remove","addStyleString","parentId","rule","parent","node","appendChild","addPlaceHolderBorders","formId","kebabToCamel","str","replace","m","toUpperCase","validateName","cleanValue","value","length","removeStyleNodes","styleNodes","querySelectorAll","forEach","element","removeChild","resetForm","elements","politicalOptions","city","county","dept","country","continent","naturalOptions","ocean","sea","lake","bay","river","stream","island","mtn","initListeners","$","click","hide","children","i","option","val","dataset","shortName","longName","initAutoCompleteDialog","removeClass","initMap","map","google","maps","Map","zoom","lat","lng","marker","Marker","anchorPoint","Point","textInput","searchBox","places","SearchBox","searchButton","addListener","e","resetLocationsSection","placeMarkerAndPanTo","latLng","updateLatLong","updateLocationSection","getPlaces","addEventListener","placesService","PlacesService","searchTerm","request","query","Promise","textSearch","results","status","PlacesServiceStatus","OK","ZERO_RESULTS","console","log","updateMap","place","setVisible","geometry","viewport","fitBounds","setCenter","location","setZoom","setPosition","panTo","window","alert","types","displayAutocompleteDialog","long","toFixed","addressComponents","address_components","placeAttributes","long_name","name","short_name","push","dialog","empty","createDropdowns","fadeIn","item","type","itemHtml","dropdown","options","addOptions","selectOption","append","select","find","keys","Object","optionType","selected"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS;AACbC,uBAAqB,sCADR;AAEbC,sBAAoB,kDAFP;AAGbC,uBAAqB,uDAHR;AAIbC,iBAAe,6CAJF;AAKbC,mBAAiB,sCALJ;AAMbC,sBACE;AAPW,CAAf;;AAUA;;;;AAIA,IAAMC,oBAAoB,SAApBA,iBAAoB,OAAQ;AAChC,MAAMC,WAAWC,SAASC,aAAT,CAAuB,UAAvB,CAAjB;AACAC,SAAOA,KAAKC,IAAL,EAAP;AACAJ,WAASK,SAAT,GAAqBF,IAArB;AACA,SAAOH,SAASM,OAAT,CAAiBC,UAAxB;AACD,CALD;;AAOA;;;AAGO,IAAMC,gCAAY,SAAZA,SAAY,CAACC,SAAD,EAAYC,IAAZ,EAAkC;AAAA,MAAhBC,MAAgB,uEAAT,IAAS;;AACzD,MAAIC,cAAcD,SAAS,gBAAT,GAA4B,EAA9C;AACA,MAAME,kEAA8DD,WAA9D,WAA+EF,IAA/E,WAAN;AACA,MAAMI,YAAYb,SAASc,cAAT,CAAwBN,SAAxB,CAAlB;;AAEAK,YAAUE,qBAAV,CAAgC,UAAhC,EAA4CjB,kBAAkBc,aAAlB,CAA5C;AACAC,YAAUG,SAAV,CAAoBC,GAApB,CAAwB,gBAAxB;AACD,CAPM;;AASP;;;AAGO,IAAMC,oCAAc,SAAdA,WAAc,CAACC,OAAD,EAAUC,OAAV,EAAsB;AAC/C,MAAMC,aAAarB,SAASc,cAAT,CAAwBK,OAAxB,CAAnB;AACA,MAAMN,YAAYb,SAASc,cAAT,CAAwBM,OAAxB,CAAlB;;AAEA,MAAIC,UAAJ,EAAgB;AACdA,eAAWC,MAAX;AACAT,cAAUG,SAAV,CAAoBM,MAApB,CAA2B,gBAA3B;AACD;AACF,CARM;;kBAUQ/B;;;;;;;AC9Cf;;;;;AAKO,IAAMgC,0CAAiB,SAAjBA,cAAiB,CAACC,QAAD,EAAWC,IAAX,EAAoB;AAChD,MAAIC,SAAS1B,SAASc,cAAT,CAAwBU,QAAxB,CAAb;AACA,MAAIG,OAAO3B,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACA0B,OAAKvB,SAAL,GAAiBqB,IAAjB;AACAC,SAAOE,WAAP,CAAmBD,IAAnB;AACD,CALM;;AAOP;;;;AAIO,IAAME,wDAAwB,SAAxBA,qBAAwB,CAACC,MAAD,EAAY;AAC/CP,iBAAeO,MAAf,QAA2BA,MAA3B;AAID,CALM;;;;;;;QChBSC,eAAAA;AAAT,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AAC9B,SAAOA,IAAIC,OAAJ,CAAY,eAAZ,EAA6B,UAAUC,CAAV,EAAa;AAC7C,WAAOA,EAAEC,WAAF,GAAgBF,OAAhB,CAAwB,GAAxB,EAA4B,EAA5B,CAAP;AACH,GAFM,CAAP;AAGH;;AAED;;;;AAIO,IAAMG,sCAAe,SAAfA,YAAe,QAAS;AACnC,MAAMC,aAAaC,MAAML,OAAN,CAAc,MAAd,EAAsB,EAAtB,CAAnB;AACA,MAAII,WAAWE,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,WAAO,KAAP;AACD;AACD,SAAO,IAAP;AACD,CANM;;AASP;;;;AAIO,IAAMC,8CAAmB,SAAnBA,gBAAmB,CAAChB,QAAD,EAAc;AAC5C,MAAIE,SAAS1B,SAASc,cAAT,CAAwBU,QAAxB,CAAb;AACA,MAAIiB,aAAazC,SAAS0C,gBAAT,OAA8BlB,QAA9B,YAAjB;AACAiB,aAAWE,OAAX,CAAoB,UAACC,OAAD,EAAa;AAC/BlB,WAAOmB,WAAP,CAAmBD,OAAnB;AACD,GAFD;AAGD,CANM;;AAQP;;;;AAIO,IAAME,gCAAY,SAAZA,SAAY,CAAChB,MAAD,EAAY;AACnC,MAAIiB,WAAW/C,SAAS0C,gBAAT,OAA8BZ,MAA9B,iBAAgDA,MAAhD,aAAf;AACAiB,WAASJ,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC5BA,YAAQN,KAAR,GAAgB,EAAhB;AACD,GAFD;AAGAE,mBAAiBV,MAAjB;AACD,CANM;;;;ACnCP;;;;AAEA;;AACA;;;;AAEA,IAAIkB,mBAAmB;AACrB,OAAK,GADgB;AAErB,qBAAmB,iBAFE;AAGrBC,QAAM,sBAHe;AAIrBC,UAAQ,QAJa;AAKrBC,QAAM,oBALe;AAMrBC,WAAS,SANY;AAOrBC,aAAW;AAPU,CAAvB;AASA,IAAIC,iBAAiB;AACnB,OAAK,GADc;AAEnBC,SAAO,OAFY;AAGnBC,OAAK,qBAHc;AAInBC,QAAM,yBAJa;AAKnBC,OAAK,cALc;AAMnBC,SAAO,eANY;AAOnBC,UAAQ,QAPW;AAQnB,kBAAgB,cARG;AASnBC,UAAQ,QATW;AAUnB,eAAa,gBAVM;AAWnBC,OAAK;AAXc,CAArB;;AAcA,IAAMC,gBAAgB,SAAhBA,aAAgB,GAAM;AAC1B;AACAC,IAAE,sBAAF,EAA0BC,KAA1B,CAAgC,YAAW;AACzCD,MAAE,+BAAF,EAAmCE,IAAnC;AACD,GAFD;;AAIAF,IAAE,kBAAF,EAAsBC,KAAtB,CAA4B,YAAW;AACrC;;AAEA,QAAIE,WAAWnE,SAAS0C,gBAAT,CAA0B,2BAA1B,CAAf;AACA,SAAK,IAAI0B,IAAI,CAAb,EAAgBA,IAAID,SAAS5B,MAA7B,EAAqC6B,GAArC,EAA0C;AACxC,UAAIC,SAASF,SAASC,CAAT,EAAY9B,KAAzB;AACA,UAAI+B,UAAU,GAAd,EAAmB;AACjB,YAAIA,UAAU,SAAd,EAAyB;AACvBL,YAAE,UAAF,EAAcM,GAAd,CAAkBH,SAASC,CAAT,EAAYG,OAAZ,CAAoBC,SAAtC;AACD,SAFD,MAEO;AACLR,kBAAMK,MAAN,EAAgBC,GAAhB,CAAoBH,SAASC,CAAT,EAAYG,OAAZ,CAAoBE,QAAxC;AACD;AACF;AACF;;AAEDT,MAAE,+BAAF,EAAmCE,IAAnC;AACD,GAhBD;AAiBD,CAvBD;;AAyBA,IAAMQ,yBAAyB,SAAzBA,sBAAyB,GAAM;AACnCV,IAAE,+BAAF,EAAmCW,WAAnC,CAA+C,UAA/C;AACAX,IAAE,+BAAF,EAAmCE,IAAnC;AACD,CAHD;;AAKA,IAAMU,UAAU,SAAVA,OAAU,GAAM;AACpB,MAAIC,MAAM,IAAIC,OAAOC,IAAP,CAAYC,GAAhB,CAAoBhF,SAASc,cAAT,CAAwB,cAAxB,CAApB,EAA6D;AACrEmE,UAAM,CAD+D;AAErEvE,YAAQ,EAAEwE,KAAK,QAAP,EAAiBC,KAAK,QAAtB;AAF6D,GAA7D,CAAV;;AAKA,MAAIC,SAAS,IAAIN,OAAOC,IAAP,CAAYM,MAAhB,CAAuB;AAClCR,SAAKA,GAD6B;AAElCS,iBAAa,IAAIR,OAAOC,IAAP,CAAYQ,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,EAA1B;AAFqB,GAAvB,CAAb;;AAKA,MAAIC,YAAYxF,SAASc,cAAT,CAAwB,uBAAxB,CAAhB;AACA,MAAI2E,YAAY,IAAIX,OAAOC,IAAP,CAAYW,MAAZ,CAAmBC,SAAvB,CAAiCH,SAAjC,CAAhB;AACA,MAAII,eAAe5F,SAASc,cAAT,CAAwB,aAAxB,CAAnB;;AAEA+D,MAAIgB,WAAJ,CAAgB,OAAhB,EAAyB,UAASC,CAAT,EAAY;AACnCC;AACAC,wBAAoBF,EAAEG,MAAtB,EAA8BpB,GAA9B;AACAqB,kBAAcJ,EAAEG,MAAF,CAASf,GAAT,EAAd,EAA8BY,EAAEG,MAAF,CAASd,GAAT,EAA9B;AACD,GAJD;;AAMA;AACAM,YAAUI,WAAV,CAAsB,gBAAtB,EAAwC,YAAW;AACjDE;AACAI,0BAAsBV,UAAUW,SAAV,EAAtB;AACD,GAHD;;AAKA;AACAR,eAAaS,gBAAb,CAA8B,OAA9B,EAAuC,YAAW;AAChDN;AACA,QAAMO,gBAAgB,IAAIxB,OAAOC,IAAP,CAAYW,MAAZ,CAAmBa,aAAvB,CAAqC1B,GAArC,CAAtB;AACA,QAAI2B,aAAahB,UAAUlD,KAA3B;AACA,QAAImE,UAAU,EAAEC,OAAOF,UAAT,EAAd;;AAEA,6BAAY,OAAZ,EAAqB,yBAArB;;AAEA,WAAO,IAAIG,OAAJ,CAAY,YAAW;AAC5BL,oBAAcM,UAAd,CAAyBH,OAAzB,EAAkC,UAASI,OAAT,EAAkBC,MAAlB,EAA0B;AAC1D,YAAIA,UAAUhC,OAAOC,IAAP,CAAYW,MAAZ,CAAmBqB,mBAAnB,CAAuCC,EAArD,EAAyD;AACvDb,gCAAsBU,OAAtB;AACD,SAFD,MAEO,IACLC,UAAUhC,OAAOC,IAAP,CAAYW,MAAZ,CAAmBqB,mBAAnB,CAAuCE,YAD5C,EAEL;AACA;AACA,iCAAU,yBAAV,EAAqC,iBAAWtH,aAAhD,EAA+D,KAA/D;AACD,SALM,MAKA;AACLuH,kBAAQC,GAAR,CAAY,iBAAWvH,eAAX,GAA6BkH,MAAzC;AACD;AACF,OAXD;AAYD,KAbM,CAAP;AAcD,GAtBD;;AAwBA;;;;AAIA,WAASM,SAAT,CAAmBC,KAAnB,EAA0B;AACxBjC,WAAOkC,UAAP,CAAkB,KAAlB;AACA;AACA,QAAID,MAAME,QAAN,CAAeC,QAAnB,EAA6B;AAC3B3C,UAAI4C,SAAJ,CAAcJ,MAAME,QAAN,CAAeC,QAA7B;AACD,KAFD,MAEO;AACL3C,UAAI6C,SAAJ,CAAcL,MAAME,QAAN,CAAeI,QAA7B;AACA9C,UAAI+C,OAAJ,CAAY,EAAZ,EAFK,CAEY;AAClB;AACDxC,WAAOyC,WAAP,CAAmBR,MAAME,QAAN,CAAeI,QAAlC;AACAvC,WAAOkC,UAAP,CAAkB,IAAlB;AACD;;AAED,WAAStB,mBAAT,CAA6BC,MAA7B,EAAqCpB,GAArC,EAA0C;AACxCO,WAAOyC,WAAP,CAAmB5B,MAAnB;AACApB,QAAIiD,KAAJ,CAAU7B,MAAV;AACD;;AAED;;;;;AAKA,WAASE,qBAAT,CAA+BT,MAA/B,EAAuC;AACrC,QAAIA,OAAOnD,MAAP,IAAiB,CAArB,EAAwB;AACtBwF,aAAOC,KAAP,CAAa,iBAAWrI,aAAxB;AACA;AACD;AACDyH,cAAU1B,OAAO,CAAP,CAAV;AACAQ,kBACER,OAAO,CAAP,EAAU6B,QAAV,CAAmBI,QAAnB,CAA4BzC,GAA5B,EADF,EAEEQ,OAAO,CAAP,EAAU6B,QAAV,CAAmBI,QAAnB,CAA4BxC,GAA5B,EAFF;;AAKA,QAAIO,OAAO,CAAP,EAAUuC,KAAV,CAAgB,CAAhB,KAAsB,iBAA1B,EAA6C;AAC3C,+CAAsB,oBAAtB;AACD,KAFD,MAEO,IAAIvC,OAAO,CAAP,EAAUuC,KAAV,CAAgB,CAAhB,KAAsB,UAA1B,EAAsC;AAC3C,+CAAsB,cAAtB;AACD,KAFM,MAEA;AACL,+CAAsB,oBAAtB;AACA,+CAAsB,cAAtB;AACD;AACDC,8BAA0BxC,OAAO,CAAP,CAA1B;AACD;AACF,CApGD;;AAsGA;;;AAGA,IAAMK,wBAAwB,SAAxBA,qBAAwB,GAAM;AAClC,0BAAU,cAAV;AACA,0BAAU,oBAAV;AACA,0BAAU,eAAV;AACA/B,IAAE,+BAAF,EAAmCE,IAAnC;AACD,CALD;;AAOA;;;;;AAKA,IAAMgC,gBAAgB,SAAhBA,aAAgB,CAAChB,GAAD,EAAMiD,IAAN,EAAe;AACnCnI,WAASc,cAAT,CAAwB,UAAxB,EAAoCwB,KAApC,GAA4C4C,IAAIkD,OAAJ,CAAY,CAAZ,CAA5C;AACApI,WAASc,cAAT,CAAwB,QAAxB,EAAkCwB,KAAlC,GAA0C4C,IAAIkD,OAAJ,CAAY,CAAZ,CAA1C;AACApI,WAASc,cAAT,CAAwB,QAAxB,EAAkCwB,KAAlC,GAA0C6F,KAAKC,OAAL,CAAa,CAAb,CAA1C;AACApI,WAASc,cAAT,CAAwB,UAAxB,EAAoCwB,KAApC,GAA4C6F,KAAKC,OAAL,CAAa,CAAb,CAA5C;AACD,CALD;;AAOA;;;;;AAKA,IAAMF,4BAA4B,SAA5BA,yBAA4B,QAAS;AACzC,MAAIG,oBAAoB,EAAxB;;AAEA;;;AAGA,MAAIhB,MAAMiB,kBAAV,EAA8B;AAC5BD,wBAAoBhB,MAAMiB,kBAA1B;AACD,GAFD,MAEO;AACL,QAAIC,kBAAkB;AACpBC,iBAAWnB,MAAMoB,IADG;AAEpBC,kBAAYrB,MAAMoB,IAFE;AAGpBR,aAAOZ,MAAMY;AAHO,KAAtB;;AAMAI,sBAAkBM,IAAlB,CAAuBJ,eAAvB;AACD;AACD,MAAMK,SAAS5E,EAAE,oBAAF,CAAf;AACA4E,SAAOC,KAAP,GAlByC,CAkBzB;;AAEhB;AACAC,kBAAgBF,MAAhB,EAAwBP,iBAAxB;;AAEArE,IAAE,+BAAF,EAAmC+E,MAAnC,CAA0C,IAA1C;AACD,CAxBD;;AA0BA;;;;;;AAMA,IAAMD,kBAAkB,SAAlBA,eAAkB,CAACF,MAAD,EAASP,iBAAT,EAA+B;AACrD,OAAK,IAAIjE,IAAI,CAAb,EAAgBA,IAAIiE,kBAAkB9F,MAAtC,EAA8C6B,GAA9C,EAAmD;AACjD,QAAI4E,OAAOX,kBAAkBjE,CAAlB,CAAX;AACA,QAAI6E,OAAOD,KAAKf,KAAL,CAAW,CAAX,CAAX;AACA,QAAIiB,+GAC+BF,KAAKR,SADpC,sDAEwBQ,KAAKR,SAF7B,6BAGFQ,KAAKN,UAHH,yHAAJ;;AAQA,QAAIS,WAAWnF,EAAEkF,QAAF,CAAf;AACA,QAAIE,UAAUH,QAAQ,iBAAR,GAA4B3F,cAA5B,GAA6CN,gBAA3D;;AAEAqG,eAAWF,QAAX,EAAqBC,OAArB;AACAE,iBAAaH,QAAb,EAAuBC,OAAvB,EAAgCH,IAAhC;;AAEAL,WAAOW,MAAP,CAAcJ,QAAd;AACD;AACF,CApBD;;AAsBA;;;;;AAKA,IAAME,aAAa,SAAbA,UAAa,CAACF,QAAD,EAAWC,OAAX,EAAuB;AACxC,MAAII,SAASL,SAASM,IAAT,CAAc,cAAd,EAA8B,CAA9B,CAAb;;AAEA,MAAIC,OAAOC,OAAOD,IAAP,CAAYN,OAAZ,CAAX;AACA,OAAK,IAAIhF,IAAI,CAAb,EAAgBA,IAAIsF,KAAKnH,MAAzB,EAAiC6B,GAAjC,EAAsC;AACpC,QAAIC,SAASrE,SAASC,aAAT,CAAuB,QAAvB,CAAb;AACAoE,WAAO/B,KAAP,GAAeoH,KAAKtF,CAAL,CAAf;AACAC,WAAO5D,IAAP,GAAc2I,QAAQM,KAAKtF,CAAL,CAAR,CAAd;AACAoF,WAAO5H,WAAP,CAAmByC,MAAnB;AACD;AACF,CAVD;;AAYA;;;;;;AAMA,IAAMiF,eAAe,SAAfA,YAAe,CAACH,QAAD,EAAWC,OAAX,EAAoBH,IAApB,EAA6B;AAChD,MAAIW,aAAaT,SAASM,IAAT,eAAyBR,IAAzB,UAAmC,CAAnC,CAAjB;AACA,MAAIW,cAAc,IAAlB,EAAwB;AACtBA,eAAWC,QAAX,GAAsB,IAAtB;AACD;AACF,CALD;;AAOAnF;AACAX;AACAa","file":"location.f399f30d.map","sourcesContent":["const errors = {\n  introIvalidUsername: \"Remember to fill in a valid username\",\n  longFormNoUserName: \"You have to enter your Name before entering data\",\n  addPersonNoVerbatim: \"You must enter a Verbatim Name before adding a Person\",\n  noPlacesFound: \"No details about the place you searched for\",\n  googleMapsError: \"Error Status in Google Maps search: \",\n  noTaxnomoniesFound:\n    \"Worms couldn't find that taxonomy, try searching it by hand \"\n};\n\n/**\n * Converts a valid html string representation into an html element\n * @param {html string representation} html\n */\nconst htmlTextToElement = html => {\n  const template = document.createElement(\"template\");\n  html = html.trim();\n  template.innerHTML = html;\n  return template.content.firstChild;\n};\n\n/**\n * Displays an error message and adds the error class to the input field\n */\nexport const showError = (elementId, text, center=true) => {\n  var centerClass = center ? 'u-align-center' : ''\n  const errorTemplate = `<div id=\"Error\" class='c-form__error-label ${centerClass}' >${text}</div>`;\n  const nameInput = document.getElementById(elementId);\n\n  nameInput.insertAdjacentElement(\"afterend\", htmlTextToElement(errorTemplate));\n  nameInput.classList.add(\"c-input--error\");\n};\n\n/**\n * Removes the error classes and html elements\n */\nexport const cleanErrors = (labelId, inputId) => {\n  const errorLabel = document.getElementById(labelId);\n  const nameInput = document.getElementById(inputId);\n\n  if (errorLabel) {\n    errorLabel.remove();\n    nameInput.classList.remove(\"c-input--error\");\n  }\n};\n\nexport default errors;\n","/**\n * Adds a style element with the given rule as a child of the given parent element\n * @param {parentId string}\n * @param {rule string}\n */\nexport const addStyleString = (parentId, rule) => {\n  var parent = document.getElementById(parentId);\n  var node = document.createElement(\"style\");\n  node.innerHTML = rule;\n  parent.appendChild(node);\n};\n\n/**\n * Gives a border to all the input fields of the given form\n * @param {formId string}\n */\nexport const addPlaceHolderBorders = (formId) => {\n  addStyleString(formId, `#${formId} input:placeholder-shown {\n                    border: 3px solid #ffa500 !important;\n                  }`\n  );\n}","export function kebabToCamel(str) {\n    return str.replace(/(\\-[A-Za-z])/g, function (m) {\n        return m.toUpperCase().replace('-','')\n    })\n}\n\n/**\n * Checks if the input is filled in\n * @param {string} value\n */\nexport const validateName = value => {\n  const cleanValue = value.replace(/\\s+/g, \"\");\n  if (cleanValue.length === 0) {\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Removes any children style elements of a given parent node\n * @param {parentId string}\n */\nexport const removeStyleNodes = (parentId) => {\n  var parent = document.getElementById(parentId)\n  var styleNodes = document.querySelectorAll(`#${parentId} style`);\n  styleNodes.forEach( (element) => {\n    parent.removeChild(element);\n  })\n}\n\n/**\n * Reset all the input and select elements to default and remove styles of the given form\n * @param {formId}\n */\nexport const resetForm = (formId) => {\n  var elements = document.querySelectorAll(`#${formId} input, #${formId} select`);\n  elements.forEach((element) => {\n    element.value = ''\n  })\n  removeStyleNodes(formId);\n}","import errorsList from \"./errors\";\nimport { showError, cleanErrors } from \"./errors\";\nimport { addPlaceHolderBorders } from \"./css_injector\";\nimport { resetForm } from \"./helpers.js\";\n\nvar politicalOptions = {\n  \" \": \" \",\n  \"specific-locale\": \"Specific Locale\",\n  city: \"City / Town / Hamlet\",\n  county: \"County\",\n  dept: \"Department / State\",\n  country: \"Country\",\n  continent: \"Continent\"\n};\nvar naturalOptions = {\n  \" \": \" \",\n  ocean: \"Ocean\",\n  sea: \"Sea / Gulf / Strait\",\n  lake: \"Lake / Pond / Reservoir\",\n  bay: \"Bay / Harbor\",\n  river: \"River / Creek\",\n  stream: \"Stream\",\n  \"island-group\": \"Island Group\",\n  island: \"Island\",\n  \"mtn-range\": \"Mountain Range\",\n  mtn: \"Mountain\"\n};\n\nconst initListeners = () => {\n  // on cancel, hide dialog\n  $(\"#autopopulate_cancel\").click(function() {\n    $(\"#location_autocomplete_dialog\").hide();\n  });\n\n  $(\"#autopopulate_ok\").click(function() {\n    // for each dialog autoselect box\n\n    var children = document.querySelectorAll(\"#autocomplete_list select\");\n    for (var i = 0; i < children.length; i++) {\n      var option = children[i].value;\n      if (option != \" \") {\n        if (option == \"country\") {\n          $(\"#country\").val(children[i].dataset.shortName);\n        } else {\n          $(`#${option}`).val(children[i].dataset.longName);\n        }\n      }\n    }\n\n    $(\"#location_autocomplete_dialog\").hide();\n  });\n};\n\nconst initAutoCompleteDialog = () => {\n  $(\"#location_autocomplete_dialog\").removeClass(\"u-hidden\");\n  $(\"#location_autocomplete_dialog\").hide();\n};\n\nconst initMap = () => {\n  var map = new google.maps.Map(document.getElementById(\"location-map\"), {\n    zoom: 3,\n    center: { lat: 0.433014, lng: 0.752724 }\n  });\n\n  var marker = new google.maps.Marker({\n    map: map,\n    anchorPoint: new google.maps.Point(0, -29)\n  });\n\n  var textInput = document.getElementById(\"location-autocomplete\");\n  var searchBox = new google.maps.places.SearchBox(textInput);\n  var searchButton = document.getElementById(\"location-go\");\n\n  map.addListener(\"click\", function(e) {\n    resetLocationsSection();\n    placeMarkerAndPanTo(e.latLng, map);\n    updateLatLong(e.latLng.lat(), e.latLng.lng());\n  });\n\n  // Called when user picks one of the autocomplete options\n  searchBox.addListener(\"places_changed\", function() {\n    resetLocationsSection();\n    updateLocationSection(searchBox.getPlaces());\n  });\n\n  // Called when user clicks on Go! button or presses enter in the searchbox\n  searchButton.addEventListener(\"click\", function() {\n    resetLocationsSection();\n    const placesService = new google.maps.places.PlacesService(map);\n    var searchTerm = textInput.value;\n    var request = { query: searchTerm };\n\n    cleanErrors(\"Error\", \"searchLocationContainer\");\n\n    return new Promise(function() {\n      placesService.textSearch(request, function(results, status) {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          updateLocationSection(results);\n        } else if (\n          status == google.maps.places.PlacesServiceStatus.ZERO_RESULTS\n        ) {\n          //window.alert(errorsList.noPlacesFound);\n          showError(\"searchLocationContainer\", errorsList.noPlacesFound, false);\n        } else {\n          console.log(errorsList.googleMapsError + status);\n        }\n      });\n    });\n  });\n\n  /**\n   * Redraw the map with it centered on the given place\n   * @param {google.maps.places.Place} place\n   */\n  function updateMap(place) {\n    marker.setVisible(false);\n    // If the place has a geometry, then present it on a map.\n    if (place.geometry.viewport) {\n      map.fitBounds(place.geometry.viewport);\n    } else {\n      map.setCenter(place.geometry.location);\n      map.setZoom(17); // Why 17? Because it looks good.\n    }\n    marker.setPosition(place.geometry.location);\n    marker.setVisible(true);\n  }\n\n  function placeMarkerAndPanTo(latLng, map) {\n    marker.setPosition(latLng);\n    map.panTo(latLng);\n  }\n\n  /**\n   * Take the results returned by Google Maps and update the components of the\n   * Locations section that we now have information about\n   * @param {google.maps.places.Place} places\n   */\n  function updateLocationSection(places) {\n    if (places.length == 0) {\n      window.alert(errorsList.noPlacesFound);\n      return;\n    }\n    updateMap(places[0]);\n    updateLatLong(\n      places[0].geometry.location.lat(),\n      places[0].geometry.location.lng()\n    );\n\n    if (places[0].types[0] == \"natural_feature\") {\n      addPlaceHolderBorders(\"natural-place-form\");\n    } else if (places[0].types[0] == \"locality\") {\n      addPlaceHolderBorders(\"address-form\");\n    } else {\n      addPlaceHolderBorders(\"natural-place-form\");\n      addPlaceHolderBorders(\"address-form\");\n    }\n    displayAutocompleteDialog(places[0]);\n  }\n};\n\n/**\n * Reset all the forms in the Location section to their defaults\n */\nconst resetLocationsSection = () => {\n  resetForm(\"address-form\");\n  resetForm(\"natural-place-form\");\n  resetForm(\"lat-long-form\");\n  $(\"#location_autocomplete_dialog\").hide();\n};\n\n/**\n * Given a latitude and a longitude update the relevant lat/long inputs in the Locations form\n * @param {float} lat\n * @param {float} long\n */\nconst updateLatLong = (lat, long) => {\n  document.getElementById(\"lat-from\").value = lat.toFixed(3);\n  document.getElementById(\"lat-to\").value = lat.toFixed(3);\n  document.getElementById(\"lon-to\").value = long.toFixed(3);\n  document.getElementById(\"lon-from\").value = long.toFixed(3);\n};\n\n/**\n * Given the different address components (country, state, city, etc) of a place or a natural\n * place, create a dialog for the user to designate which component is which\n * @param {google.maps.places.Place} place\n */\nconst displayAutocompleteDialog = place => {\n  var addressComponents = [];\n\n  /* If the user uses autocomplete to input a place, Google will return a more detailed\n    address_components attribute on the place object. If a place is returned by a\n    text search, there is no address_components so we will make our own.*/\n  if (place.address_components) {\n    addressComponents = place.address_components;\n  } else {\n    let placeAttributes = {\n      long_name: place.name,\n      short_name: place.name,\n      types: place.types\n    };\n\n    addressComponents.push(placeAttributes);\n  }\n  const dialog = $(\"#autocomplete_list\");\n  dialog.empty(); // clear out dialog of old dropdowns\n\n  // populate dialog\n  createDropdowns(dialog, addressComponents);\n\n  $(\"#location_autocomplete_dialog\").fadeIn(1000);\n};\n\n/**\n * Create a dropdown for each of the given address components and add it to the\n * give dialog box\n * @param {Object} dialog\n * @param {Object} addressComponents\n */\nconst createDropdowns = (dialog, addressComponents) => {\n  for (var i = 0; i < addressComponents.length; i++) {\n    var item = addressComponents[i];\n    var type = item.types[0];\n    var itemHtml = `<fieldset class=\"c-form__fieldset u-separator-xs\">\n      <label class=\"c-label \" for=\"\">${item.long_name} is a</label>\n      <select data-long-name=\"${item.long_name}\" data-short-name=\"${\n      item.short_name\n    }\"\n      placeholder=\"Select input\" class=\"c-input c-input--square c-input--select \"></select>\n    </fieldset>`;\n\n    var dropdown = $(itemHtml);\n    var options = type == \"natural_feature\" ? naturalOptions : politicalOptions;\n\n    addOptions(dropdown, options);\n    selectOption(dropdown, options, type);\n\n    dialog.append(dropdown);\n  }\n};\n\n/**\n * Based on whether the given place component is an address or natural landmark,\n * populate the dropdown with the appropriate options\n * @param {google.maps.places.Place} place\n */\nconst addOptions = (dropdown, options) => {\n  var select = dropdown.find(\"select:first\")[0];\n\n  var keys = Object.keys(options);\n  for (var i = 0; i < keys.length; i++) {\n    var option = document.createElement(\"option\");\n    option.value = keys[i];\n    option.text = options[keys[i]];\n    select.appendChild(option);\n  }\n};\n\n/**\n * If type is one of the options of the dropdown, select that option\n * @param {Object} dropdown\n * @param {Object} options\n * @param {string} type\n */\nconst selectOption = (dropdown, options, type) => {\n  var optionType = dropdown.find(`[value=\"${type}\"]`)[0];\n  if (optionType != null) {\n    optionType.selected = true;\n  }\n};\n\ninitAutoCompleteDialog();\ninitListeners();\ninitMap();\n"]}