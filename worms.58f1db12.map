{"version":3,"sources":["static/js/errors.js","static/js/css_injector.js","static/js/worms.js"],"names":["errors","introIvalidUsername","longFormNoUserName","addPersonNoVerbatim","noPlacesFound","googleMapsError","noTaxnomoniesFound","htmlTextToElement","template","document","createElement","html","trim","innerHTML","content","firstChild","showError","elementId","text","center","centerClass","errorTemplate","nameInput","getElementById","insertAdjacentElement","classList","add","cleanErrors","labelId","inputId","errorLabel","remove","addStyleString","parentId","rule","parent","node","appendChild","addPlaceHolderBorders","formId","button","addEventListener","getSearchInfo","getFormInfo","elSpecies","elGenus","species","value","genus","getWorms","cleanFields","fields","querySelectorAll","i","length","searchBox","split","spinner","url","fetch","then","response","json","displayResponse","catch","console","error","updateiFrameDisplay","map","prop","item","field","iframe","src"],"mappings":"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","file":"worms.58f1db12.map","sourcesContent":["const errors = {\n  introIvalidUsername: \"Remember to fill in a valid username\",\n  longFormNoUserName: \"You have to enter your Name before entering data\",\n  addPersonNoVerbatim: \"You must enter a Verbatim Name before adding a Person\",\n  noPlacesFound: \"No details about the place you searched for\",\n  googleMapsError: \"Error Status in Google Maps search: \",\n  noTaxnomoniesFound:\n    \"Worms couldn't find that taxonomy, try searching it by hand \"\n};\n\n/**\n * Converts a valid html string representation into an html element\n * @param {html string representation} html\n */\nconst htmlTextToElement = html => {\n  const template = document.createElement(\"template\");\n  html = html.trim();\n  template.innerHTML = html;\n  return template.content.firstChild;\n};\n\n/**\n * Displays an error message and adds the error class to the input field\n */\nexport const showError = (elementId, text, center=true) => {\n  var centerClass = center ? 'u-align-center' : ''\n  const errorTemplate = `<div id=\"Error\" class='c-form__error-label ${centerClass}' >${text}</div>`;\n  const nameInput = document.getElementById(elementId);\n\n  nameInput.insertAdjacentElement(\"afterend\", htmlTextToElement(errorTemplate));\n  nameInput.classList.add(\"c-input--error\");\n};\n\n/**\n * Removes the error classes and html elements\n */\nexport const cleanErrors = (labelId, inputId) => {\n  const errorLabel = document.getElementById(labelId);\n  const nameInput = document.getElementById(inputId);\n\n  if (errorLabel) {\n    errorLabel.remove();\n    nameInput.classList.remove(\"c-input--error\");\n  }\n};\n\nexport default errors;\n","/**\n * Adds a style element with the given rule as a child of the given parent element\n * @param {parentId string}\n * @param {rule string}\n */\nexport const addStyleString = (parentId, rule) => {\n  var parent = document.getElementById(parentId);\n  var node = document.createElement(\"style\");\n  node.innerHTML = rule;\n  parent.appendChild(node);\n};\n\n/**\n * Gives a border to all the input fields of the given form\n * @param {formId string}\n */\nexport const addPlaceHolderBorders = (formId) => {\n  addStyleString(formId, `#${formId} input:placeholder-shown {\n                    border: 3px solid #ffa500 !important;\n                  }`\n  );\n}","import errors from \"./errors\";\nimport { showError, cleanErrors } from \"./errors\";\nimport { addPlaceHolderBorders } from \"./css_injector\";\n\nconst button = document.getElementById(\"worms\");\nbutton.addEventListener(\"click\", getSearchInfo);\n\nfunction getFormInfo() {\n  const elSpecies = document.getElementById(\"species\");\n  const elGenus = document.getElementById(\"genus\");\n  const species = elSpecies.value;\n  const genus = elGenus.value;\n  getWorms(genus, species);\n  document.getElementById(\"loading-state\").classList.add(\"active\");\n}\n\nfunction cleanFields() {\n  const fields = document.querySelectorAll(\n    \"#taxForm input:not([type='search'])\"\n  );\n  for (let i = 0; i < fields.length; i++) {\n    fields[i].value = \"\";\n  }\n}\n\nfunction getSearchInfo() {\n  const searchBox = document.getElementById(\"taxonomy-search\").value.split(\" \");\n\n  const genus = searchBox[0];\n  const species = searchBox[1];\n  const spinner = document.getElementById(\"whales-spinner\");\n  spinner.classList.remove(\"u-hidden\");\n  document.getElementById(\"taxForm\").classList.add(\"u-hidden\");\n  getWorms(genus, species);\n}\n\nfunction getWorms(genus, species) {\n  const url = species\n    ? `http://www.marinespecies.org/rest/AphiaRecordsByMatchNames?scientificnames%5B%5D=${genus}%20${species}&marine_only=true`\n    : `http://www.marinespecies.org/rest/AphiaRecordsByMatchNames?scientificnames%5B%5D=${genus}&marine_only=true`;\n\n  cleanErrors(\"Error\", \"searchTaxContainer\");\n  cleanFields();\n  fetch(url)\n    .then(response => {\n      document.getElementById(\"whales-spinner\").classList.add(\"u-hidden\");\n      document.getElementById(\"taxForm\").classList.remove(\"u-hidden\");\n      return response.json();\n    })\n    .then(json => {\n      displayResponse(json);\n      addPlaceHolderBorders(\"taxonomy-data\");\n    })\n    .catch(error => {\n      // when there aren't results,it just returns an empty response\n      // and triggers an error\n      console.error(error);\n\n      // clean just inc ase, there was a double error issue # 88\n      cleanErrors(\"Error\", \"searchTaxContainer\");\n      showError(\"searchTaxContainer\", errors.noTaxnomoniesFound, false);\n      updateiFrameDisplay(\"http://www.marinespecies.org/aphia.php?p=search\");\n    });\n}\n\nfunction displayResponse(response) {\n  response[0].map(item => {\n    for (const prop in item) {\n      // if form field exists, fill in with data from API\n      const field = document.getElementById(prop);\n      if (field) {\n        field.value = item[prop];\n        field.classList.add(\"dynamic\");\n      }\n      if (prop == \"url\") {\n        updateiFrameDisplay(item[prop]);\n      }\n    }\n  });\n}\n\nfunction updateiFrameDisplay(url) {\n  const iframe = document.getElementById(\"worms-iframe\");\n  iframe.src = url;\n}\n"]}