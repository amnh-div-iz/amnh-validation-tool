{"version":3,"sources":["amnh-validation-tool/static/js/helpers.js","amnh-validation-tool/static/js/errors.js","amnh-validation-tool/static/js/add_person.js","amnh-validation-tool/node_modules/uri-js/dist/esnext/util.js","amnh-validation-tool/node_modules/uri-js/dist/esnext/regexps-uri.js","amnh-validation-tool/node_modules/uri-js/dist/esnext/regexps-iri.js","../../../usr/lib/node_modules/parcel-bundler/node_modules/punycode/punycode.js","amnh-validation-tool/node_modules/uri-js/dist/esnext/uri.js","amnh-validation-tool/node_modules/uri-js/dist/esnext/schemes/http.js","amnh-validation-tool/node_modules/uri-js/dist/esnext/schemes/https.js","amnh-validation-tool/node_modules/uri-js/dist/esnext/schemes/mailto.js","amnh-validation-tool/node_modules/uri-js/dist/esnext/schemes/urn.js","amnh-validation-tool/node_modules/uri-js/dist/esnext/schemes/urn-uuid.js","amnh-validation-tool/node_modules/uri-js/dist/esnext/index.js","amnh-validation-tool/node_modules/fast-deep-equal/index.js","amnh-validation-tool/node_modules/ajv/lib/compile/ucs2length.js","amnh-validation-tool/node_modules/ajv/lib/compile/util.js","amnh-validation-tool/node_modules/ajv/lib/compile/schema_obj.js","amnh-validation-tool/node_modules/json-schema-traverse/index.js","amnh-validation-tool/node_modules/ajv/lib/compile/resolve.js","amnh-validation-tool/node_modules/ajv/lib/compile/error_classes.js","amnh-validation-tool/node_modules/fast-json-stable-stringify/index.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/validate.js","amnh-validation-tool/node_modules/ajv/lib/compile/index.js","amnh-validation-tool/node_modules/ajv/lib/cache.js","amnh-validation-tool/node_modules/ajv/lib/compile/formats.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/ref.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/allOf.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/anyOf.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/comment.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/const.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/contains.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/dependencies.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/enum.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/format.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/if.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/items.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/_limit.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/_limitItems.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/_limitLength.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/_limitProperties.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/multipleOf.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/not.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/oneOf.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/pattern.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/properties.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/propertyNames.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/required.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/uniqueItems.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/index.js","amnh-validation-tool/node_modules/ajv/lib/compile/rules.js","amnh-validation-tool/node_modules/ajv/lib/data.js","amnh-validation-tool/node_modules/ajv/lib/compile/async.js","amnh-validation-tool/node_modules/ajv/lib/dotjs/custom.js","amnh-validation-tool/node_modules/ajv/lib/keyword.js","amnh-validation-tool/node_modules/ajv/lib/ajv.js","amnh-validation-tool/node_modules/idb/lib/idb.js","amnh-validation-tool/static/js/database.js","amnh-validation-tool/static/js/records.js","amnh-validation-tool/static/js/csv.js","amnh-validation-tool/static/js/triggers.js"],"names":["kebabToCamel","str","replace","m","toUpperCase","validateName","cleanValue","value","length","removeStyleNodes","parentId","parent","document","getElementById","styleNodes","querySelectorAll","forEach","element","removeChild","resetForm","formId","elements","errors","introIvalidUsername","longFormNoUserName","addPersonNoVerbatim","noPlacesFound","googleMapsError","noTaxnomoniesFound","htmlTextToElement","template","createElement","html","trim","innerHTML","content","firstChild","showError","elementId","text","center","centerClass","errorTemplate","nameInput","insertAdjacentElement","classList","add","cleanErrors","labelId","inputId","errorLabel","remove","PeopleList","idPrefix","people","button","form","verbatimField","list","addEventListener","addToList","bind","createPerson","getPeople","person","dataset","key","listItem","span","i","appendChild","push","determinedByPeople","collectors","donors","merge","subexp","typeOf","toArray","sets","slice","xl","x","join","o","undefined","Object","prototype","toString","call","split","pop","shift","toLowerCase","obj","Array","setInterval","buildExps","isIRI","ALPHA$$","CR$","DIGIT$$","DQUOTE$$","HEXDIG$$","LF$$","SP$$","PCT_ENCODED$","GEN_DELIMS$$","SUB_DELIMS$$","RESERVED$$","UCSCHAR$$","IPRIVATE$$","UNRESERVED$$","SCHEME$","USERINFO$","DEC_OCTET$","IPV4ADDRESS$","H16$","LS32$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","IPV6ADDRESS$","IPVFUTURE$","IP_LITERAL$","REG_NAME$","HOST$","PORT$","AUTHORITY$","PCHAR$","SEGMENT$","SEGMENT_NZ$","SEGMENT_NZ_NC$","PATH_ABEMPTY$","PATH_ABSOLUTE$","PATH_NOSCHEME$","PATH_ROOTLESS$","PATH_EMPTY$","PATH$","QUERY$","FRAGMENT$","HIER_PART$","URI$","RELATIVE_PART$","RELATIVE$","URI_REFERENCE$","ABSOLUTE_URI$","GENERIC_REF$","RELATIVE_REF$","ABSOLUTE_REF$","SAMEDOC_REF$","AUTHORITY_REF$","NOT_SCHEME","RegExp","NOT_USERINFO","NOT_HOST","NOT_PATH","NOT_PATH_NOSCHEME","NOT_QUERY","NOT_FRAGMENT","ESCAPE","UNRESERVED","OTHER_CHARS","PCT_ENCODED","IPV6ADDRESS","pctEncChar","pctDecChars","parse","removeDotSegments","serialize","resolveComponents","resolve","normalize","equal","escapeComponent","unescapeComponent","SCHEMES","chr","c","charCodeAt","e","newStr","il","parseInt","substr","String","fromCharCode","c2","c3","_normalizeComponentEncoding","components","protocol","decodeUnreserved","decStr","match","scheme","userinfo","host","path","query","fragment","URI_PARSE","NO_MATCH_IS_UNDEFINED","uriString","options","iri","reference","matches","port","isNaN","indexOf","error","schemeHandler","unicodeSupport","domainHost","toASCII","_recomposeAuthority","uriTokens","RDS1","RDS2","RDS3","RDS4","RDS5","input","output","im","s","Error","test","toUnicode","authority","charAt","absolutePath","base","relative","skipNormalization","target","tolerant","lastIndexOf","baseURI","relativeURI","uri","uriA","uriB","O","ATEXT$$","QTEXT$$","VCHAR$$","DOT_ATOM_TEXT$","QUOTED_PAIR$","QCONTENT$","QUOTED_STRING$","DTEXT_NO_OBS$$","SOME_DELIMS$$","QCHAR$","DOMAIN$","LOCAL_PART$","ADDR_SPEC$","TO$","HFNAME$","HFVALUE$","HFIELD$","HFIELDS2$","HFIELDS$","MAILTO_URI","NOT_LOCAL_PART","NOT_DOMAIN","NOT_HFNAME","NOT_HFVALUE","TO","HFIELDS","to","unknownHeaders","headers","hfields","hfield","toAddrs","subject","body","addr","toAddr","atIdx","localPart","domain","fields","name","NID$","TRANS$$","NSS$","URN_SCHEME","URN_PATH","URN_PARSE","URN_EXCLUDED","UUID","putRecord","getAllRecords","clearDatabase","getRecord","deleteRecord","currentRecordId","ajv","jsonValidator","compile","upgradeCallback","upgradeDb","console","log","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","dbPromise","open","record","then","tx","db","transaction","objectStore","id","put","complete","Promise","reject","getAll","data","clear","recordId","get","delete","clearRecords","saveRecord","newRecord","recordTally","countRecords","records","getUser","sessionStorage","getItem","generateTrackingNumber","date","Date","now","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getSection","sectionId","sectionData","inputs","type","checked","collectFormData","recordData","taxonomy","determinedBy","specimenData","hostData","collectionData","locationData","donationData","peopleFields","Set","missingPerson","field","has","alert","hasHost","trackingNumber","clearConfirm","confirm","location","reload","exportCSV","writeCSV","columnDelimiter","lineDelimiter","result","firstElement","attribute","keys","eval","header","filename","link","csvString","encodeURI","setAttribute","click","hostYesRadio","hostNoRadio","newRecordButton","saveButton","exportCSVButton","clearRecordsButton","hostSection"],"mappings":";;;;;;;;;;;;ACAA,IAAMsB,IEAUqD,KFAD,GEACA;AFCdpD,QEacqD,SAAAA,MFbO,sCADR;ACAf,ADEEpD,QGDcyE,ADgBApB,AHjBA7E,SGiBA6E,GChBAoB,EHCM,CDFNjG,iDCAD;AKAf,ALGEyB,ADHK,QGoBSrB,CHpBAJ,YAAT,CGoBSI,AHpBaH,CCGN,EDHhB,EAA2B,mDCAnB;AKCf,AFDA,AHIEyB,ADHE,QGsBYoD,CHtBL7E,IAAIC,ICGE,CEmBD4E,EHtBL,CAAY,eAAZ,EAA6B,UAAU3E,CAAV,EAAa,WCDtC;AKEf,ADFA,AFAO,AFKLwB,ADHM,SGFQgD,EHEDxE,EAAEC,CGFV,CAAe,GAAG2E,CFKN,GELZ,EAAwB,AHEhB,GAAgB7E,OAAhB,CAAwB,GAAxB,EAA4B,EAA5B,CAAP,cCFO;AKGf,AFFO,ADAH,ADCJ,ADIE0B,ADHG,GAFM,CAAP,IGAImD,CCAQkB,IDAHzF,KCAN,CAAmB0F,ADAlB,GAAc,AFMlB,CENA,CCAG,CDAkB,CCAQ;AEGjC,AFFI,ADAInB,AFFO,ADId,CCJD,SGEUoB,GDAG,CAAL,IEDO,AFCGpB,ECAE,GDAG,CAAL,EAAQC,ICAtB,CDAc,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAV,OEDiB,IAAV;ACIf,ADHA,ADAI,ADCI,UCDwBoB,IDClBnB,ECDwB,GDCnBF,KAAKvE,CCDpB,KDCe,GAAc,CAAzB;AGGR,AFJI,ADEI,AFMR,ADJA,UIJiD6F,GDEpC,IAAInB,GCF0C,CDEtC,CAAb,EAAgBA,GCFpB,CDEwBD,EAApB,EAAwB,EAAEC,CAA1B,EAA6B;AGGrC,AFLI,ADGQH,UCHwDuB,ODGnDpB,CAAL,GCHmE,CDGzDH,KAAKG,CAAL,ECHlB,ADG0BF,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAV;AGGZ,AFNI,ADIK,UCJiFuB,WAAW,iBAAMF,OAAN,EAAe,UAAf,CAAjG;AEOJ,AFPI,ADKItB,IDHF3B,MEF2H,GDKpH6B,EAAL,IAAWF,KAAKE,EAAL,EAASD,KAAT,CAAe,CAAf,CAAX;AGGR,AFPIwB,ADKI,ADHJ,ADSJ,ADJO,ICID3E,ADJOxB,OIPF,IDKI0E,KCNX,ADMgBI,IAAL,ADHC9B,ADSU,CEND,EAAV,CAAP,IDHJ,CDSExB,CCToB,QFKE,QCIF,CDJbxB,MCIqB,MDJN,QAAS;AMCrC,AFTI,ADOC,ADJqB,ADUxB,ADJA,KGVE,CFcIyB,ADJAxB,IIRcmG,CDOb,MCPoB,AHYV7F,EDJEL,MAAML,CITvB,AHawB6B,MDJP,CAAc,MCIhB,ADJE,CCIqB,CDJC,EAAtB,CAAnB,MCIiB,CAAjB;AKHF,AFVI,ADSI,AFKNC,ADJA,MAAI1B,GCIG0B,CGb+B0E,IHa1BzE,CELC8C,EHCEvE,CCIR,EELW,AFKlB,CELa,CAAP,CHCF,EITiD,GJS3B,CAA1B,EAA6B,YIT+B,kBAAO,YAAY+F,QAAZ,GAAuB,GAAvB,GAA6BA,QAA7B,GAAwCA,QAAxC,GAAmD,GAAnD,GAAyDA,QAAzD,GAAoEA,QAA3E,IAAuF,GAAvF,GAA6F,kBAAO,gBAAgBA,QAAhB,GAA2B,GAA3B,GAAiCA,QAAjC,GAA4CA,QAAnD,CAA7F,GAA4J,GAA5J,GAAkK,kBAAO,MAAMA,QAAN,GAAiBA,QAAxB,CAAzK,CADnD;AEWJ,AFXI,ADUC,ADNG,ADWNzE,ADJE,UIVgQ,CHczPI,ADJA,EEPEoB,GFOT,GEPI,CDWN,ECXoB,CDWCtB,CCXf,GDWN;AKHF,AFVI2E,ADSH,ADNO,ADWN,ADJC,SCIM7E,ICXIuB,KDWKlB,CGdC,EFGX,GAAgBkB,CDWf,CAAiBjB,MCXlB,IDWN,QGhBE;AEaJ,AFbI,ADYG,ADNC,ADWP,ADJC,CCDF,QEAgBwC,AHCP,CIXqCgC,GFIjCrD,AFOX,EGDK,CAAgBtD,GAAhB,ADNC,ECMoB,CDNNW,GEJuC,MFI9BC,cAAT,CAA2BwC,QAA3B,QENlB,KFMI;AIQR,AFdI,ADaA,ADNI,AFOP,CANM,SIN6FwD,CDWzF,EDNErD,IAAL,ECMWvD,CDNCW,ECMT,CCXsG,EDWxF,GAArB,CDNyBG,WEL0F4F,KFKnG,OEL6F,AFK/DtD,EELmFuD,MFKjH,MEL6F,CAF7G,UFOI;AIQR,AFfI,ADcH,ADNO,ADWR,UGjBoJE,GFMvIrD,SENmJyC,IFMxJ,GAAqBtF,CEN2I,QFMlIC,cAAT,CAA2BwC,QAA3B,eAArB,+BENwJ,GAAwF,IAFpP;AEgBJ,AFhBI,ADeG,ADNC,AFQR,SGFgBwB,CCb8O,GFOjPnB,ECMN,CAAgB0B,CAAhB,ADNC,ECMkB,CDNNxE,SAASC,cAAT,CAA2BwC,QAA3B,WAAZ;AIQR,AFdI0D,ADaA,ADNI,WCMG3B,EDNE7B,IEPI2C,ADaAb,EDNT,CAAY1B,KEPK,CDad,GAAkB,ODNrB,CAA6B,GCM1B,GAAiCyB,CCb3B,AFOT,EAAsC,CEPC,EDaG,EChB9C,AFU+CxB,ECMP,GAAa,IDNX,CAAeC,CCMjB,GAAsByB,ADNpB,CAAoB,IAApB,CAAtC,CCMiEC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,CAA/B,EAAkCM,KAAlC,CAAwC,GAAxC,EAA6CC,GAA7C,GAAmDD,KAAnD,CAAyD,GAAzD,EAA8DE,KAA9D,GAAsEC,WAAtE,EAA9D;AGEJ,AFlBI,ADiBH,ADNO,ADWD,IAAMxD,MGnBwC,GFQxCyB,YAAL,GAAoB,KAAKA,GDWR,SCXG,ADWfzB,CCXiCwB,IAAlB,CAAuB,GDW1B,CCXG,ADWFvB,CCXlB,QDWiB,EAAYC,IAAZ,EAAkC;AKH3D,AFfIyE,ADcG,ADNC,ADUmD,MAAhBxE,GEJ3BpC,GFI2C,CCV9C2D,MERM,CDcZ,CAAqB9D,CDNpB,ECMD,CDNkB,CCMQ,IDNH8D,MERLoC,GFQA,CAAetC,GERrB,CFQM,CERSwC,AFQW,IAApB,CAAjB,EERW,EAAwB,gBAAxB,EAA0CS,SAA1C,CAJf,CHsB8C,IAAS;AKF3D,AFpBI,ADmBA,ADNC,AFQE,IAAMrG,MIjB4DwG,CDe9DhH,IAAIG,KCfoE,MDexE,EAAP,UCfsF+F,UAAU,EJiBpE,SAAnB1F,MIjB6F0F,OAAN,EAAeE,CJiBnF,CAAC3F,KIjBmE,EAAwB,CJiB5F,EAAc,UIjBsD,CAAV,GAAmD,GAA1D,CAJ/E;AEqBJ,AFrBI,ADoBH,AFGC,ADDA,MCCI+B,ADDA9B,IIlB6IuG,KJkBpItG,KCCK4B,EGnB2I,EJkBvI3B,KCCK,SDDd,CAAwBH,CIlB+H,KHmBlJ,EDDL,CCCiC,ADD9C,ECCA,QGnB2KgG,eAAe,GAAf,GAAqB,iBAAMM,YAAN,EAAoBJ,YAApB,EAAkC,OAAlC,CAA5B,IAA0E,GAAjF,CAJ3J;AEsBJ,AFtBI,ADqBG,AFGL,ADDA,MCCMlE,ADDF5B,GGFUgE,CCjBsOqC,MDiB/O,CAAiBrB,EHELlF,CGFZ,EAAsB,CCjBsO,KJmBvOG,aInB8O,GJmBvP,OAA8BL,QInBgO,AJmB9P,SInBuP,GJmBxQ,CInB4R,AHoBxN+B,GGpBoM,GAA0B,KHoB5R,WAA+EF,EGpBoN,EHoBnS,SGpB8S8D,EHoBpT,KGpBkS,CAA1B,GAAuD,GAAvD,GAA6D,kBAAO,MAAMA,OAAN,GAAgBA,OAAvB,CAA7D,GAA+F,GAA/F,GAAqG,kBAAO,UAAUA,OAAjB,CAArG,GAAiI,GAAjI,GAAuIA,OAA9I,CAJ/P;AEuBJ,AFvBI,ADsBA,AFGF,ADDAvF,MCCM6B,IGrBmZyE,CDkBhZtB,EHEE9E,KCCOJ,CEHDyE,CHEjB,CAAoB,IIpBoZ,EHqB7YxE,CEHlB,GHEYI,CGFS6E,MHEV,EGFkB,AHEL,CCCf,CAAwBxD,CGrBqY6E,CDkBta,GAAqCrB,IFG5B,CAAlB,IGrB4b,KAAb,CDkBlXC,EClBuYoB,GDkBtZ,GAAuBrB,GAAvB,CClBiY,EDkBnW,CClBqY,KAAlC,CDkB5VA,EClBsYqB,EDkBlY3G,MAAX,EClBmW,GAAuD,ADkBpY,KClB6U,GAA+D2G,ADkBla,IAAkCrB,IAAIJ,EClBsT,CAJta,EDsB0E,IAA+CI,IAAIE,WAAnD,IAAkEF,IAAIL,IAAtE,GAA6E,CAACK,GAAD,CAA7E,GAAqFC,MAAMR,SAAN,CAAgBP,KAAhB,CAAsBS,IAAtB,CAA2BK,GAA3B,CAAxJ,GAA4L,EAAnM;AGEJ,AFxBI,ADuBH,AHEGnF,UIrByf0G,CJqBlfnG,MIrByf,KJqBhgB,CAAmBD,OAAnB,KIrBugBsF,IFWxf,OEXmgB,OAAlB,CAJhgB;AEyBJ,AFzBI,ADwBJ,ADRQ,ADWN5D,ADDC,GAFD,OIpB8hB2E,EHuBphB1E,ICXAoB,EEZ4hB,OFYnhB,EAAb,MDWN,CAAgC,EGvB6gB,QHuB7iB,EAA4CnC,QGvBwgBwF,OAAO,GHuB7f3E,EGvBsf,GAAe2E,IAAtB,IAA8B,AHuB/hB,CAA5C,EGvB6iB,GAAoCD,YAA3C,CAJpiB;AE0BJ,AF1BI,AH4BFzE,ADDD,CANM,SIjB2lB4E,EHwBtlB1E,SAAV,CAAoBC,GAApB,CGxBgnB,AHwBxlB,gBAAxB,EGxBunB,kBAAOuE,OAAO,KAAd,IAAuB,KAAvB,GAA+BC,KAAtC,CAJ9mB;AE2BJ,AF3BI,AFkBI,ADWP,CAPM,SGlBypB,OFcnpB9D,IAAL,CAAUxC,OAAV,CAAkB,UAACC,OAAD,EAAa;AIUvC,AFvBIuG,AFcQxD,AFUZ,oBIxBoB,GFcD,eEdQ,WAAW,CFcN/C,QAAQgD,OAAR,CAAgBC,CEdHmD,EFc1B,CAAP,IEdwC,AFcIpG,KEdlB,CAAX,EFcqCV,CEdH,IFcjD,CEde,GAA0C+G,KAAjD,CALhB;AE6BJ,AF7BI,AFoBQrG,ADWZ,UG1B6E,cFezDV,KAAR,GAAgB,EAAhB;AIUZ,AFxBIkH,AFeK,aAHD,OEZY,kBAAO,kBAAOJ,IAAP,IAAe,SAAf,GAA2B,kBAAOA,OAAO,KAAd,CAA3B,GAAkD,KAAlD,GAA0DC,KAAjE,CANhB;AE+BJ,AF/BI,UAMyF;AE0B7F,AFzBII,AFgBI,ADWD,ADDA,ICCM3E,ADDA5B,YEVDgD,IEhBQ,OFgBGvD,SAASmB,AFUP,EI1BE,EH2BA,KDDdZ,IEVU,ADWV4B,CCXiC,IAAvB,AFUE,CEVjB,AFUkB3B,CI1BQ,IH2BP,CAAC4B,ADDH,EAAY,KCCV,EAAUC,IG3BIoE,GH2Bd,EAAsB,EG3BD,KAAd,IAAuB,OAAvB,GAAiCA,IAAxC,IAAgD,SAAhD,GAA4D,kBAAOA,OAAO,KAAd,CAA5D,GAAmF,KAAnF,GAA2FC,KAAlG,CAPhB;AEiCJ,AFjCI,AFwBI,ADWN,ADDA,MCCMpE,ADDF7B,II3BwH,MFiBlH+C,CFUKxD,ECCIA,ICXFA,GFUOG,ECCIF,ICXFkB,UDWP,ADDJ,CCC4BiB,ECX1B,CAAuB,GFUK5B,CCC1B,CAAnB,CCXiB,CAAX,EFUS,iBAAgDA,MAAhD,aAAf;AMAF,AF1BIuG,AFiBI,ADWN,ADDAtG,MCCMsB,KDDG3B,KEVC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QDgZQC,OChZDgB,UAAP,CDgZQhB;AOtZhB,ANOK,AITL,ADCA,KHDe,CGCTgH,EJ2ZU/G,KI3ZH,KFAE,UF2ZCA,sBI3ZhB;AGEA,ANOIN,ACRA0B,AEAJ,MAAM/F,MFAM,GDQG,ICTA,EECM,IHQI0F,UAAV,EAAsBc,OAAtB,AGRf,EHQ8C;AMN9C,ADJA,ALWQ,ACRJU,ACDJ,AEDA,ADEA,AJ+BA,MKjCM+E,ADEAN,OCFO,GHEG,AEAA,eFAKzE,UAFN,8BGAf,YDEA;AGEA,ANOQ,ACRJ/C,AGFJ,ADEA,MAAMyH,KFAK,CDQClG,CGRC,UHQUkB,CGRC5G,EFARmE,CDQJ,ICXG,EDWkBkB,GGRpB,GAA0B,CHQCK,EGR3B,GAAgCiG,MHQM5F,CGRtC,GAA0C,EHQtB,EAA0B5G,CGR3D,UHQiC,OAA4C,OAA5C,GAAsD,EAAtD,GAA2D,GAAhF,KAAwFuG,WAAWkB,IAAX,KAAoB,EAAhH,EAAoH;AMN5H,ADKA,ALEYlB,ACRRrB,AEAJ,MAAMwH,SFAS,GGFA,CDEI,IHQIjF,AGRAvD,IHQX,EGRO,CHQW1E,ACRV0F,AEAU,SHQlB,IGR+BqH,IAAb,GAAoB,IAA/B,CAAnB;AGEA,ADIA,ALGS,ACbM,AGGX3F,ADEJ,MAAM+F,MCFM,KDEK,IAAIzI,CCHN,KDGE,CAAW,OAAOqI,IAAP,GAAc,OAAd,GAAwBE,IAAxB,GAA+B,IAA1C,CAAjB;AGEA,ADGA,ALIQ,ACRR,ACJA,AEEIzH,ADEJ,AJ4BA,MGhCM6E,ACIA+C,IDJI,CEEC,CFFX,MCIkB,GCFGrG,UAAV,EAAsBc,EDEjC,KCFW,EAA+B;AEI1C,ADEA,ALKQ,AEZR,AEEQ,ADER,MDJMhH,ACIAwM,MHQM,AIVA,CJUCtG,AIVAc,CFFC,IAAd,GEEqBiC,ADEA,GHQGvC,IAAhB,CIVI,CJUkB,IIVI,CAACR,WAAWQ,IAAZ,IAAoB,CAACR,WAAWQ,IAAX,ADEvD,CCFuEJ,KAAhB,CAAsBmG,IAAtB,CAA3C,CAAJ,EAA6E;AEIrF,ADCA,ALMYvG,AEZZ,AEEYA,ADEZ,uBHQuBQ,AIVAa,IJUX,CIVA,EJUkB,CIVCrB,EJUnB,SIV8BqB,KAAX,IAAoB,oBAAvC;AEIZ,ADAA,ALOS,AEZT,AEES,MFFHzG,YCIS,GDJM,4BAA4Bd,QAAQ,2EAAR,GAAsF,EAAlH,IAAwH,GAA7I;AIMA,ADDA,ALQQ,AEZR,AEEQ,ADEJuG,AJyBJ,MG7BMlG,MCIM,GCFG6F,EFFE,ACGF,QCDP,KFFR,EAAgC;AIMhC,ADFA,ALSQ,AEZR,AEEK,ADEDvB,KCTW,CFKTnE,KCIK,UDJU,ACIA0F,UAAV,EAAsBc,MDJL,CCIjB,EAA+B,eDJP,YAAY3G,QAAZ,GAAuB,GAAvB,GAA6BA,QAA7B,GAAwCA,QAAxC,GAAmD,GAAnD,GAAyDA,QAAzD,GAAoEA,QAA3E,IAAuF,GAAvF,GAA6F,kBAAO,gBAAgBA,QAAhB,GAA2B,GAA3B,GAAiCA,QAAjC,GAA4CA,QAAnD,CAA7F,GAA4J,GAA5J,GAAkK,kBAAO,MAAMA,QAAN,GAAiBA,QAAxB,CAAzK,CAArB,EAAkO;AIMlO,ADHA,ALUQ,AEZR,AEEIwE,ADEI,cAAMsC,CCFC,SDESjB,CCFCA,UAAV,ADEoBQ,ECFEM,EDEb,IAAmBd,CCF5B,EAA+B,QDEQQ,IAAX,CAAgBJ,KAAhB,CAAsBiG,SAAtB,CAAnC;AGER,ANOQ,AEZR,AEEQ,ADEA,YAAIpF,GHQGjB,IGRP,EAAa,IHQb;AMNR,ADfA,ALsBK,AEZL,AEEQ,ADEI,AJsBZ,YKxBY,CAACc,KDEKT,GCFG0C,MDEM,ECFf,KAAsB,CAAC/C,CDECiB,QAAQ,CAAR,CCFUT,CDEC/G,GCFb,IAAoB,CAACuG,GDEnB,EAAxB,MCFsDQ,IAAX,CAAgBJ,KAAhB,CAAsBmG,IAAtB,CAA3C,CAAJ,EAA6E;AEIrF,ANjBe,AEYf,AEEY,ADEA,gBAAIjF,gBAAgB,aAAQjB,MAAR,CAApB;AGEZ,ANOA,AEZA,AEEYL,ADEA,uBCFWK,MAAX,GAAoBpH,SAApB;AEIZ,AJLA,AEES,ADEG,SCLJ,MAIK;AEGb,ADjBA,AHYA,AEGY,ADCA,AJnBZ,gBImBgB,CAACqI,aAAL,EAAoB;AGEhC,AJLA,AEGYtB,ADCI,uBCDOQ,IAAX,GAAkB,CAACR,WAAWQ,IAAX,IAAmB,EAApB,EAAwB/G,WAAxB,EAAlB;AEGZ,AJLA,AEGS,ADCO6H,gCAAgB,aAAQjB,MAAR,IAAkB;AGElD,AJLA,AEGQ,ADCYA,eCDL,aAAQ,ADCKA,KCDb,CDAmC,CCApB1B,SAAf,CAAyBqB,UAAzB,EAAqCc,OAArC,CAAP;AEGR,ADnBA,AHcA,AEGK,ADCerC,2BAAO,UAAUuB,UAAV,EAAsBc,OAAtB,EAA+B;AGE1D,AJLA,AEjBe,ADqBS,MDJlByC,UAAU,eCIevD,UAAP,8BDJxB;AIMA,AJLA,AEGA,ADCqB,MDJfwD,UAAU,KCAkC,uDDAlD;AIMA,AJLA,ACIoB7E,AJnBpB,MGeM8E,UAAU,eCIe,EDJTD,OAAN,EAAe,ECIQ,KAAR,EAAe7E,GDJ9B,CAAhB;AIMA,ADrBA,AHgBA,ACFkD,MDE5C+E,WCFU,MDEO,kBAAOH,UAAU,GAAV,GAAgB,kBAAO,QAAQA,OAAR,GAAkB,GAAzB,CAAhB,GAAgD,GAAvD,CAAvB;AIMA,AJLA,ACIa,MDJPI,eAAe,kBAAO,SAASF,OAAhB,CAArB;AIMA,AJLA,ACIYzD,MDJN4D,YAAY,KCIKvD,MAAX,GAAoBA,IDJPmD,ECIb,QDJuB,GAAV,GAAgBG,YAAvB,CAAlB;AIMA,AJLA,ACIY3D,MDJN6D,iBAAiB,ACIArD,IAAX,GAAkBS,QAAQ,CAAR,CAAlB,CDJkB,QAAQ2C,SAAR,GAAoB,GAApB,GAA0B,KAAjC,CAAvB;AIMA,ADvBA,AHkBA,ACIY5D,yBAAasB,cAAc7C,KAAd,CAAoBuB,UAApB,EAAgCc,OAAhC,CAAb;AGEZ,AJLA,ACIS,MDJHgD,GCdE,MAmBK,QDLU,0BAAvB,EAAmD;AIMnD,AJLA,ACKY9D,MDLN+D,gBAAgB,CCKC1C,KAAX,GAAmBrB,WAAWqB,KAAX,IAAoB,QDLnD,gBCKY;AGCZ,AJLA,ACKS,MDLH2C,SAAS,kBAAOpJ,eAAe,GAAf,GAAqBN,YAArB,GAAoC,GAApC,GAA0CyJ,aAAjD,CAAf;AIMA,AJLA,ACKQ,MDLFE,SCKSjE,CDLC,SCKR,SDLe0D,iBAAiB,GAAjB,GAAuB,KAAvB,GAA+BI,cAA/B,GAAgD,GAAhD,GAAsD,KAA7D,CAAhB;AIMA,AJLA,ACKK,KA3BU,CDsBTI,cAAc,kBAAOR,iBAAiB,GAAjB,GAAuBG,cAA9B,CAApB;AIMA,ADpCA,AH+BA,ACKIlF,MDLEwF,OG/BE,EFoCO,IEpCf,AH+BmB,MCKMnE,UAAV,EDLWkE,ACKWpD,OAAtB,EAA+B,KDLN,KAAd,GAAsBmD,OAA7B,CAAnB;AIMA,AJLA,ACKQ,MDLFG,MAAM,ECKE/D,SAASL,ODLJmE,ICKe9D,MAAX,GDLS,CCKYS,QAAQT,MAA5C,GDL+B,QAAQ8D,UAAf,CAAb,GAA0C,GAAjD,CAAZ;AIMA,ADpCA,AH+BA,ACKQ,MDLFE,MCKMhE,CEpCJ,GH+BQ,IG/BhB,EFoCsBA,WAAW,CDLV2D,ICKf,EAAgC,GDLR,GAAhB,CAAhB;AIMA,AJLA,ACKY,MDLNM,WAAWD,CCKCpD,MDLlB,ICK4BZ,OAAOD,KAAP,CAAa+F,UAAb,KAA4B,CAAC,SAAS9F,MAAV,EAAkBA,MAAlB,CAA5C;AGCZ,ADpCA,AH+BA,ACKYL,MDLNuE,OG/BE,GH+BQ,KG/BhB,EFoCuBlE,MAAX,GAAoB,EDLTgE,GCKX,ODLqB,KAAV,GAAkBC,QAAzB,CAAhB;AIMA,AJLA,ACKYtE,MDLNwE,YAAY,KCKKhE,IAAX,GAAkBS,MDLLsD,ECKa,CAAR,IAAa,GDLR,ACKL,IAAoBvE,WAAWQ,GDLnB,CCKQ,GAAkBR,IDLlBuE,OAAf,ACK4C/D,CDLtD,GAAoC,ACKO,CAAgB1M,EDLlE,CAAlB,ICKoE,CAAwBwS,YAAxB,kBAAlB,GAAsE,EAA1F,CAAlB;AGCZ,ADpCA,AH+BA,ACKS,MDLH7B,OG/BE,IH+BS,CG/BjB,iBH+BwB,QAAQD,SAAf,CAAjB;AIMA,AJLA,ACKQ,MDLFE,SCKS1E,IDLI,IAAIrC,ECKf,IDLW,CAAW,eAAeyG,GAAf,GAAqB,GAArB,GAA2BK,QAA3B,GAAsC,IAAjD,CAAnB;AIMA,ADlCA,AH6BA,ACKK,MDLCtG,aAAa,IAAIR,MAAJ,CAAW/C,YAAX,EAAyB,GAAzB,CAAnB;AIMA,ADrCA,AHgCA,AChCe,MDgCTyD,OGhCE,OHgCY,GGhCpB,CHgCwBV,MAAJ,CAAWrD,YAAX,EAAyB,GAAzB,CAApB;AIMA,AJLA,ACKA,MDLMqK,iBAAiB,IAAIhH,MAAJ,CAAW,iBAAM,KAAN,EAAa4F,OAAb,EAAsB,OAAtB,EAA+B,OAA/B,EAAwCE,OAAxC,CAAX,EAA6D,GAA7D,CAAvB;AIMA,AJLA,MAAMmB,aAAa,IAAIjH,MAAJ,CAAW,iBAAM,KAAN,EAAa4F,OAAb,EAAsB,OAAtB,EAA+B,OAA/B,EAAwCO,cAAxC,EAAwD,OAAxD,CAAX,EAA6E,GAA7E,CAAnB;AIMA,AJLA,MAAMe,aAAa,IAAIlH,MAAJ,CAAW,iBAAM,KAAN,EAAa/C,YAAb,EAA2BmJ,aAA3B,CAAX,EAAsD,GAAtD,CAAnB;AIMA,AJLA,MAAMe,cAAcD,UAApB;AIMA,AJLA,MAAME,KAAK,IAAIpH,MAAJ,CAAW,MAAMyG,GAAN,GAAY,GAAvB,CAAX;AIMA,AJLA,MAAMY,UAAU,IAAIrH,MAAJ,CAAW,MAAM6G,SAAN,GAAkB,GAA7B,CAAhB;AIMA,AJLA,AHXO,MAAMtF,GGWJgB,gBAAT,CAA0BrM,GAA1B,EAA+B,GHXR,EAAhB;AOiBP,AJLI,AHXG,SAAS0K,CGWN4B,SAAS,AHXZ,CAAoBhB,GAApB,EAAyB,gBGWDtL,GAAZ,CAAf;AACA,AHXA,UAAMuL,CGWE,CAACe,EHXChB,IAAIE,CGWEe,KAAP,CAAajC,GHXZ,CAAe,CAAf,CAAV,IGWS,CAAD,GAA4BtK,GAA5B,GAAkCsM,MAA1C;AKnDJ,ALoDC,AHXG,QAAIb,CAAJ;AQxCJ,ARyCI,QAAIF,IAAI,EAAR,EACIE,EGUO,EHVH,OAAOF,EAAEhG,QAAF,CAAW,EAAX,EAAepF,WAAf,EAAX,CADJ,KAEK,IAAIoL,IAAI,GAAR,EACDE,IAAI,MAAMF,EAAEhG,QAAF,CAAW,EAAX,EAAepF,WAAf,EAAV,CADC,KAEA,IAAIoL,IAAI,IAAR,EACDE,IAAI,MAAM,CAAEF,KAAK,CAAN,GAAW,GAAZ,EAAiBhG,QAAjB,CAA0B,EAA1B,EAA8BpF,WAA9B,EAAN,GAAoD,GAApD,GAA0D,CAAEoL,IAAI,EAAL,GAAW,GAAZ,EAAiBhG,QAAjB,CAA0B,EAA1B,EAA8BpF,WAA9B,EAA9D,CADC,KAGDsL,IAAI,MAAM,CAAEF,KAAK,EAAN,GAAY,GAAb,EAAkBhG,QAAlB,CAA2B,EAA3B,EAA+BpF,WAA/B,EAAN,GAAqD,GAArD,GAA2D,CAAGoL,KAAK,CAAN,GAAW,EAAZ,GAAkB,GAAnB,EAAwBhG,QAAxB,CAAiC,EAAjC,EAAqCpF,WAArC,EAA3D,GAAgH,GAAhH,GAAsH,CAAEoL,IAAI,EAAL,GAAW,GAAZ,EAAiBhG,QAAjB,CAA0B,EAA1B,EAA8BpF,WAA9B,EAA1H;AQ/CR,ALoDIqM,AHJA,WAAOf,CGIC,AHJR,QGGW;AKlDf,ALoDIb,AHJH,WGIU,UAAUuB,UAAV,EAAsBc,OAAtB,EAA+B;AKnD1C,ALoDQ,AHJD,SAAStC,KGIFyG,KAAKjF,CHJZ,CAAqBnM,GAArB,EAA0B,IGIHoR,EAAX,GAAiBjF,WAAWQ,IAAX,GAAkBR,WAAWQ,IAAX,CAAgBlH,KAAhB,CAAsB,GAAtB,CAAlB,GAA+C,EAA3E;AKnDR,ALoDQ0G,AHJJ,QAAIT,SAAS,EGIEiB,AHJf,IGII,GAAkBvH,SAAlB;AKnDR,ALoDQ,AHJJ,QAAIhB,IGII+H,AHJA,CAAR,UGImBS,KAAf,EAAsB;AKnD9B,ALoDY,AHJR,UAAMjB,KAAK3L,CGICqR,GHJG9Q,MAAf,QGI6B,KAArB;AKnDZ,ALoDY,AHJR,WAAO6D,IAAIuH,EAAX,CGIc2F,CHJC,SGIS,EAAhB;AKnDZ,ALoDY,AHJJ,cAAM/F,IGIIgG,AHJA3F,SAAS5L,CGICmM,GHJGN,MAAJ,CAAWzH,CGICwI,GHJG,CAAf,CGIC,CAAiBnH,AHJA,CAAlB,CAAT,EAA+B,CGIrB,CAAuB,AHJjC,CAAV,EGIoB,CAAhB;AKnDZ,ALoDY,AHJJ,YAAI8F,IAAI,CGIC,EHJT,EGIatG,AHJA,IGII,CAAR,EAAWD,KAAKuM,QAAQhR,MAA7B,EAAqC0E,IAAID,EAAzC,EAA6C,EAAEC,CAA/C,EAAkD;AKnD9D,ALoDgB,AHJJyG,sBGIU8F,AHJA1F,OAAOC,EGIEwF,QAAQtM,CAAR,CHJT,CGIoBQ,AHJA8F,CAApB,CAAV,GGImB,CAAiB,GAAjB,CAAf;AKnDhB,ALoDgB,AHJJnH,iBAAK,CAAL,MGIYoN,OAAO,CAAP,CAAR;AKnDhB,ALoDoB,AHJX,SAHD,MAIK,IAAIjG,KAAK,CGGG,EHHR,EGGG,EHHSA,IAAI,GAApB,EAAyB;AQhDtC,ALoDwB,AHHZ,gBAAKI,KAAKvH,CAAN,IAAY,CAAhB,EAAmB,CGGDqN,UAAUD,OAAO,CAAP,EAAU/L,KAAV,CAAgB,GAAhB,CAAhB;AKnDxB,ALoDwB,AHHR,sBAAMuG,KAAKJ,EGGE,IAAI3G,GHHGjF,CGGC,CAAR,EAAWgF,AHHA6G,KGGK4F,CHHT,CAAWrN,IAAI,CAAf,CGGiB7D,CHHC,CAAlB,CAAT,EAA+B,CGGlC,CHHG,CGGkC0E,AHH7C,IGGiDD,EAAzC,EAA6C,EAAEC,CAA/C,EAAkD;AKnD1E,ALoD4BmM,AHHZ1F,0BAAUI,KGGKxH,EHHEyH,EGGL,CAAQ0F,QAAQxM,CAAR,AHHV,CGGE,AHHmB,CAACsG,IAAI,EAAL,KAAY,CAAb,GAAmBS,KAAK,EAA5C,CAAV;AQhDhB,ALoDyB,AHHZ,aAHD,MAIK;AQjDjB,ALoDwB,AHFRN,0BAAU1L,IAAI6L,MAAJ,CAAWzH,CAAX,EAAc,CAAd,CAAV;AQjDhB,ALoDoB,AHFP,yBGEY,SAAL;AKnDpB,ALoDwB+H,AHFZ/H,iBAAK,CAAL,iBGEuBsN,OAAX,GAAqB,4BAAkBF,OAAO,CAAP,CAAlB,EAA6BvE,OAA7B,CAArB;AACA,AHFf,SATI,MAUA,IAAI1B,KAAK,GAAT,EAAc;ASxE3B,AN0EoB,AHDR,gBAAKI,KAAKvH,CAAN,GGCS,CHDG,CAAhB,EAAmB,EGCX;AMzEpB,AN0EwB+H,AHDR,sBAAMH,KAAKJ,QGCQ+F,CHDC3R,GGCZ,CHDgB6L,EGCE,IHDN,CAAWzH,IAAI,CAAf,EAAkB,CAAlB,CAAT,EAA+B,EAA/B,CAAX,SGC4CoN,OAAO,CAAP,CAAlB,EAA6BvE,OAA7B,CAAlB;AMzExB,AN0EwB,AHDR,sBAAMhB,KAAKL,SAAS5L,IAAI6L,MAAJ,CAAWzH,IAAI,CAAf,EAAkB,CAAlB,CAAT,EAA+B,EAA/B,CAAX;ASxEhB,AN0EoB,AHDJsH,0BAAUI,OAAOC,YAAP,CAAqB,CAACR,IAAI,EAAL,KAAY,EAAb,GAAoB,CAACS,KAAK,EAAN,KAAa,CAAjC,GAAuCC,KAAK,EAAhE,CAAV;ASxEhB,AN0EwBoF,AHDX,aAJD,MAKK,sBGAwB,IAAjB;AMzExB,AN0EwBC,AHAR5F,0BAAU1L,IAAI6L,EGAE,IHAN,CAAWzH,CAAX,EAAc,CAAd,CAAV,kBGAkCoN,OAAO,CAAP,CAAlB,EAA6BvE,OAA7B,CAAR,IAAiD,4BAAkBuE,OAAO,CAAP,CAAlB,EAA6BvE,OAA7B,CAAjD;AMzExB,AN0EwB,AHAX;ASzEb,ANyDgB,AHiBJ7I,iBAAK,CAAL;ASzEZ,AN0Ea,AHAJ,SAVI,MAWA;AS1Eb,AN0EY,AHCAsH,gBGDI2F,MHCMrR,IAAI6L,IGDd,EACIM,AHAM,CAAW/H,CAAX,EAAc,CAAd,CAAV,KGAekN,OAAX,GAAqBA,OAArB;AM1EhB,AN2ES,AHAGlN,iBAAK,CAAL;AS1EZ,AN2EQ+H,AHAC,mBGAUS,KAAX,GAAmBxH,SAAnB;AM1ER,AN2EQ,AHAH,aGAQ,IAAIH,IAAI,CAAR,EAAWD,KAAKoM,GAAG7Q,MAAxB,EAAgC0E,IAAID,EAApC,EAAwC,EAAEC,CAA1C,EAA6C;AM1ErD,AN2EY,AHAR,WAAOyG,MAAP,CGAckG,OAAOR,GAAGnM,CAAH,EAAMQ,KAAN,CAAY,GAAZ,CAAb;AM1EZ,AN2EYmM,AHAX,iBGAgB,CAAL,IAAU,4BAAkBA,KAAK,CAAL,CAAlB,CAAV;AM1EZ,AN2EY,AHAZ,SAAS1F,OGAO,CAACe,QAAQS,WHAzB,CAAqCvB,EGAzB,EAA6B,MHAzC,EAAiDC,QAAjD,EAA2D;AS1E3D,AN2EgB,AHAZ,aAASC,gBAAT,CAA0BrM,GAA1B,EAA+B;AS1EnC,AN2EgB,AHAR,cAAMsM,MGAM,GHAG3B,YAAY3K,GAAZ,CAAf;AS1ER,AN2EoB4R,AHAZ,eAAQ,CAACtF,OAAOC,EGAC,CAAL,EHAH,CAAaH,CGAA,QHAS9B,UAAtB,CGAsBsD,AHAvB,GAAqC5N,GAArC,CGAc,CAAiB,CHAYsM,MAAnD,qBGAyDsF,KAAK,CAAL,CAAlB,EAA2B3E,OAA3B,EAAoCrH,WAApC,EAAjB,CAAV;AM1EpB,AN2EiB,AHAZ,iBGFW,CAGA,OAAO6F,CAAP,EAAU;AM3E1B,AN4EoBU,AHDhB,QAAIA,WAAWK,MAAf,EACIL,IGAuBqB,KAAX,EHADhB,CGAoBL,KHA/B,GAAoBL,GGAsB0B,IHAfrB,CGAI,IAAoB,MHAbK,MAAlB,EAA0BvM,OAA1B,CAAkCmM,SAAS5B,WAA3C,EAAwD6B,gBAAxD,EAA0EzG,WAA1E,GAAwF3F,CGAoBwL,CAApH,KHAQ,CAAgGW,SAASvC,UAAzG,EAAqH,EAArH,CAApB;AS3ER,AN4EiB,AHAb,QAAIsC,WAAWM,QAAX,KAAwBrH,SAA5B,EACI+G,WAAWM,QAAX,GAAsBX,OAAOK,WAAWM,QAAlB,EAA4BxM,OAA5B,CAAoCmM,SAAS5B,WAA7C,EAA0D6B,gBAA1D,EAA4EpM,OAA5E,CAAoFmM,SAASrC,YAA7F,EAA2GW,UAA3G,EAAuHzK,OAAvH,CAA+HmM,SAAS5B,WAAxI,oBAAtB;AS5ER,AN4Ea,AHCT,QAAI2B,KGTI,MASK,AHAEO,IAAX,KAAoBtH,SAAxB,EACI+G,WAAWO,IAAX,GAAkBZ,OAAOK,WAAWO,IAAlB,EAAwBzM,OAAxB,CAAgCmM,SAAS5B,WAAzC,EAAsD6B,gBAAtD,EAAwEzG,WAAxE,GAAsF3F,OAAtF,CAA8FmM,SAASpC,QAAvG,EAAiHU,UAAjH,EAA6HzK,OAA7H,CAAqImM,SAAS5B,WAA9I,oBAAlB;AS7ER,AN6EgBoH,AHCZ,QAAIzF,WAAWQ,EGDE,CAAL,CHCR,GGDkB,EHCEvH,SAAxB,EACI+G,WAAWQ,IGFyBiF,AHEpC,GAAkB9F,EGFuB,CAAL,CAAlB,EAA2BmB,CHEpBd,MGFP,EAAoCvG,GHElB+G,IAAlB,EAAwB1M,EGFxB,EAAV,GHEU,CAAgCmM,SAAS5B,WAAzC,EAAsD6B,gBAAtD,EAAwEpM,OAAxE,CAAiFkM,WAAWK,MAAX,GAAoBJ,SAASnC,QAA7B,GAAwCmC,SAASlC,iBAAlI,EAAsJQ,UAAtJ,EAAkKzK,OAAlK,CAA0KmM,SAAS5B,WAAnL,oBAAlB;AS9ER,AN6Ea,AHET,QAAI2B,WAAWS,KAAX,KAAqBxH,SAAzB,EACI+G,WAAWS,KAAX,GAAmBd,OAAOK,WAAWS,KAAlB,EAAyB3M,OAAzB,CAAiCmM,SAAS5B,WAA1C,EAAuD6B,gBAAvD,EAAyEpM,OAAzE,CAAiFmM,SAASjC,SAA1F,EAAqGO,UAArG,EAAiHzK,OAAjH,CAAyHmM,SAAS5B,WAAlI,oBAAnB;AS/ER,AN6EY4G,AHGR,QAAIjF,OGHOlH,CAAH,GHGO4H,CGHC+E,KAAK1M,EHGjB,EGHY,CAAU,EHGEE,CGHZ,CAAR,OHGR,EACI+G,WAAWU,QAAX,GAAsBf,OAAOK,WAAWU,QAAlB,EAA4B5M,OAA5B,CAAoCmM,SAAS5B,WAA7C,EAA0D6B,gBAA1D,EAA4EpM,OAA5E,CAAoFmM,SAAShC,YAA7F,EAA2GM,UAA3G,EAAuHzK,OAAvH,CAA+HmM,SAAS5B,WAAxI,oBAAtB;AShFR,AN6ES,AHIL,WAAO2B,UAAP;AShFJ,AN6EQ,AHIP,eGJcA,UAAP;AM5ER,AN6EK,AHIL,KGxDe;AMxBf,AN6EIrB,AHIJ,MAAMgC,SGJS,GHIG,OGJOX,UAAV,EAAsBc,OAAtB,EAA+B,qGHI9C;AShFA,AN6EQ,AHIR,MAAMF,QGJQqE,KAAK,WHIY,EAAD,CAAK7E,KGJRJ,AHIG,CAAW,OAAX,EAAoB,CGJZiF,AHIR,EGJX,CAAX,GHIiDhM,SAAzD;AShFA,AN6EQ,AHID,SAASwF,GGJJwG,EAAJ,AHID,CAAepE,CGJN,QHIT,EAA0BC,UAAU,EAApC,EAAwC;AShF/C,AN6EY,AHIR,UAAMd,OGJO,IAAIlH,EHIE,EGJE,AHIrB,CGJa,EAAWD,KAAKoM,GAAG7Q,MAAxB,EAAgC0E,IAAID,EAApC,EAAwC,EAAEC,CAA1C,EAA6C;AM5EzD,AN6EgB,AHIZ,UAAMmH,WAAYa,CGJA4E,OHIQ3E,EGJCpB,CHIT,KAAgB,CGJAsF,GAAGnM,CAAH,AHIhB,CGJS,CAAf,4CHIZ;AShFJ,AN6EgB,AHIZ,QAAIgI,QAAQE,MGJM2E,GHId,KGJsBD,AHIA,OGJO1C,CHIjC,EACInC,QGLsB,CAAmB,GAAnB,AHKV,CGLJ,AHKKC,QAAQT,MAAR,GAAiBS,QAAQT,MAAR,GAAiB,GAAlC,GAAwC,EAAzC,IAA+C,IAA/C,GAAsDQ,SAAlE;ASjFR,AN6EgB,AHKZ,UAAMI,UAAUJ,EGLE+E,QHKQxF,IGLKsF,CHKf,CAAgB/E,KGLM/H,IHKtB,CGLe,AHK/B,CGL4C,CAAb,EAAgB+M,KAAhB,CAAD,CAAyB7R,OAAzB,CAAiCuK,WAAjC,EAA8C6B,gBAA9C,EAAgEpM,OAAhE,CAAwEuK,WAAxE,qBAAkGvK,OAAlG,CAA0G6Q,cAA1G,kBAAlB;AM5EhB,AN6EgB,AHKZ,QAAI1D,OAAJ,EAAa,GGLG4E,SAASH,OAAO9M,KAAP,CAAa+M,QAAQ,CAArB,CAAb;AM5EhB,AN6EgB,AHKR,YAAI/E,qBAAJ,EAA2B;ASjFnC,AN6EgB,AHKJ,oBGLQ;AM5EpB,AN6EoBiF,AHKR7F,uBAAWK,MGLO,AHKlB,CGLmBS,EHKCG,MGLOF,EHKC,CGLV,AHKE,CAApB,EGLiC,mBAASU,OAAT,CAAiB,4BAAkBoE,MAAlB,EAA0B/E,OAA1B,EAAmCrH,WAAnC,EAAjB,CAAf,GAAoF,mBAAS8I,SAAT,CAAmBsD,MAAnB,CAA9F;AM5EpB,AN6EiB,AHKL7F,iBGPI,CAGA,KHIOM,EGJAhB,CAAP,EAAU,GHId,GAAsB2B,QAAQ,CAAR,CAAtB;ASjFZ,AN8EoBjB,AHIRA,uBAAWO,IAAX,GAAkBU,CGJCI,KAAX,EHIkB,CGJCrB,AHIT,CAAlB,UGJsCqB,KAAX,IAAoB,0DAA0D,CAACP,QAAQC,GAAT,GAAe,OAAf,GAAyB,SAAnF,IAAgG,iBAAhG,GAAoHzB,CAA3J;AM7EpB,AN8EiB,AHILU,uBAAWkB,IAAX,GAAkBzB,SAASwB,QAAQ,CAAR,CAAT,EAAqB,EAArB,CAAlB;ASjFZ,AN8EgBgE,AHIJjF,mBGJOlH,CAAH,GHIO0H,CGJCoF,GHIZ,GAAkB3E,MGJM,EHIE,CGJd,AHIM,GGJY4E,EHIE,EAAhC,EGJI;AM7EhB,AN8Ea,AHID7F,uBAAWS,KAAX,GAAmBQ,QAAQ,CAAR,CAAnB;ASjFZ,AN8EYjB,AHIAA,uBGJWQ,AHIAE,IGJX,GAAkBuE,CHIlB,EGJqBlM,CHICkI,GGJJ,CAAQ,GAAR,CAAlB,AHI8B,CAAR,CAAtB;ASjFZ,AN8ES,AHIG;ASjFZ,AN8EQ,AHII,cGJEkE,EHIEhE,MAAMnB,EGJEA,SHISkB,EGJEiE,EHInB,CAAJ,EAA4B,EGJhB,GAAqBnF,WAAWmF,OAAX,IAAsB,EAA3D;AM7ER,AN8EQ,AHIQnF,YGJJA,WAAWuF,IHIIrE,GGJnB,CHIQ,CGHJiE,EHGsBlE,MGHd,EHGsB,CAAR,CAAlB,KGHJ,IAAqBjB,WAAWuF,OAAhC;AM9EZ,AN+EQ,AHGK,YGHDvF,WAAWwF,IAAf,EACIL,QAAQ,MAAR,IAAkBnF,WAAWwF,IAA7B;AM/EZ,ANgFQ,AHEC,SAbD,KGWMM,CHGD,QGHU,EAAf;AM/ER,ANgFQ,AHGI,aGHC,MAAMC,IAAX,IAAmBZ,OAAnB,EAA4B;AM/EpC,ANgFY,AHGAnF,gBGHImF,OHGO9E,CGHC0F,IAAR,CHGJ,GAAoB9E,EGHEqC,EAAEyC,IAAF,AHGM,CGH5B,AHGoB,EGHW,GHGG9M,SAAlC;ASlFZ,ANgFgB6M,AHGJ9F,uBGHW7H,AHGAmI,IGHP,CAAYyF,GHGhB,EGHqBjS,CHGE+M,MGHP,CAAaxC,GHGI+C,OAAV,CGHP,AHGyB,EGHClB,CHGnB,MAA2B,CAAC,CAA5B,GAAgCe,IGHvC,EAA4CnN,EHGG,CAAR,CAAhC,GGHP,AHGoDmF,CGHAoF,QHGpE,GGHgB,qBAA8EvK,OAA9E,CAAsF+Q,UAAtF,qBACR,GADQ,GAERM,QAAQY,IAAR,EAAcjS,OAAd,CAAsBuK,WAAtB,EAAmC6B,gBAAnC,EAAqDpM,OAArD,CAA6DuK,WAA7D,qBAAuFvK,OAAvF,CAA+FgR,WAA/F,kBAFJ;AM/EhB,ANkFa,AHCD9E,uBAAWO,IAAX,GAAmBM,UAAUO,OAAV,CAAkB,IAAlB,MAA4B,CAAC,CAA7B,GAAiCH,QAAQ,CAAR,CAAjC,GAA8ChI,SAAjE;ASlFZ,ANkFS,AHCG+G,uBAAWkB,IAAX,GAAkBzB,SAASwB,QAAQ,CAAR,CAAT,EAAqB,EAArB,CAAlB;ASlFZ,ANkFQ,AHCIjB,YGDA8F,OAAO1R,IHCIoM,EGDf,EAAmB,AHCf,GAAkBS,QAAQ,CAAR,KAAc,EAAhC;ASlFZ,ANkFYjB,AHCAA,uBGDWS,AHCAA,KGDX,AHCA,GGDmBqF,AHCCjF,OGDM9H,GHCIqI,CGDX,CAAY,GAAZ,CAAnB,CHCoB,CAAkB,GAAlB,MAA2B,CAAC,CAA5B,GAAgCH,QAAQ,CAAR,CAAhC,GAA6ChI,SAAjE;ASlFZ,ANkFS,AHCG+G,uBAAWU,QAAX,GAAuBG,UAAUO,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAA5B,GAAgCH,QAAQ,CAAR,CAAhC,GAA6ChI,SAApE;ASlFZ,ANkFQ,AHCI,eGDG+G,UAAP;AMjFR,ANkFK,AHCO,gBAAImB,MAAMnB,WAAWkB,IAAjB,CAAJ,EAA4B;ASlFxC,ANRe,AH2FClB,2BAAWkB,IAAX,GAAmBL,UAAUT,KAAV,CAAgB,+BAAhB,IAAmDa,QAAQ,CAAR,CAAnD,GAAgEhI,SAAnF;ASlFhB,ANkFA,AHCa;ASlFb,ATmFS;ASlFT,ATmFQ;ASlFR,ATmFQ,YAAI+G,WAAWO,IAAf,EAAqB;ASlF7B,ATmFYP,uBAAWO,IAAX,GAAkBP,WAAWO,IAAX,CAAgBzM,OAAhB,CAAwBmM,SAAS3B,WAAjC,EAA8C,IAA9C,CAAlB;ASlFZ,ATmFS;ASlFT,ATmFQ;ASlFR,ATmFQ,YAAI0B,WAAWK,MAAX,KAAsBpH,SAAtB,IAAmC+G,WAAWM,QAAX,KAAwBrH,SAA3D,IAAwE+G,WAAWO,IAAX,KAAoBtH,SAA5F,IAAyG+G,WAAWkB,IAAX,KAAoBjI,SAA7H,IAA0I,CAAC+G,WAAWQ,IAAtJ,IAA8JR,WAAWS,KAAX,KAAqBxH,SAAvL,EAAkM;ASlF1M,ATmFY+G,uBAAWgB,SAAX,GAAuB,eAAvB;ASlFZ,ATmFS,SAFD,MAGK,IAAIhB,WAAWK,MAAX,KAAsBpH,SAA1B,EAAqC;ASnFlD,AToFY+G,uBAAWgB,SAAX,GAAuB,UAAvB;ASnFZ,AToFS,SAFI,MAGA,IAAIhB,WAAWU,QAAX,KAAwBzH,SAA5B,EAAuC;ASpFpD,ATqFY+G,uBAAWgB,SAAX,GAAuB,UAAvB;ASpFZ,ATqFS,SAFI,MAGA;ASrFb,ATsFYhB,uBAAWgB,SAAX,GAAuB,KAAvB;ASrFZ,ATsFS;ASrFT,ATsFQ;ASrFR,ATsFQ,YAAIF,QAAQE,SAAR,IAAqBF,QAAQE,SAAR,KAAsB,QAA3C,IAAuDF,QAAQE,SAAR,KAAsBhB,WAAWgB,SAA5F,EAAuG;ASrF/G,ATsFYhB,uBAAWqB,KAAX,GAAmBrB,WAAWqB,KAAX,IAAoB,kBAAkBP,QAAQE,SAA1B,GAAsC,aAA7E;ASrFZ,ATsFS;ASrFT,ATsFQ;ASrFR,ATsFQ,cAAMM,gBAAgBpC,QAAQ,CAAC4B,QAAQT,MAAR,IAAkBL,WAAWK,MAA7B,IAAuC,EAAxC,EAA4C5G,WAA5C,EAAR,CAAtB;ASrFR,ATsFQ;ASrFR,ATsFQ,YAAI,CAACqH,QAAQS,cAAT,KAA4B,CAACD,aAAD,IAAkB,CAACA,cAAcC,cAA7D,CAAJ,EAAkF;ASrF1F,ATsFY;ASrFZ,ATsFY,gBAAIvB,WAAWO,IAAX,KAAoBO,QAAQU,UAAR,IAAuBF,iBAAiBA,cAAcE,UAA1E,CAAJ,EAA4F;ASrFxG,ATsFgB;ASrFhB,ATsFgB,oBAAI;ASrFpB,ATsFoBxB,+BAAWO,IAAX,GAAkB,mBAASkB,OAAT,CAAiBzB,WAAWO,IAAX,CAAgBzM,OAAhB,CAAwBmM,SAAS5B,WAAjC,EAA8CG,WAA9C,EAA2D/E,WAA3D,EAAjB,CAAlB;ASrFpB,ATsFiB,iBAFD,CAGA,OAAO6F,CAAP,EAAU;AStF1B,ATuFoBU,+BAAWqB,KAAX,GAAmBrB,WAAWqB,KAAX,IAAoB,oEAAoE/B,CAA3G;AStFpB,ATuFiB;AStFjB,ATuFa;AStFb,ATuFY;AStFZ,ATuFYS,wCAA4BC,UAA5B;AStFZ,ATuFS,SAbD,MAcK;ASvFb,ATwFY;ASvFZ,ATwFYD,wCAA4BC,UAA5B,EAAwCC,QAAxC;ASvFZ,ATwFS;ASvFT,ATwFQ;ASvFR,ATwFQ,YAAIqB,iBAAiBA,cAAc7C,KAAnC,EAA0C;ASvFlD,ATwFY6C,0BAAc7C,KAAd,CAAoBuB,UAApB,EAAgCc,OAAhC;ASvFZ,ATwFS;ASvFT,ATwFK,KA3ED,MA4EK;ASxFT,ATyFQd,mBAAWqB,KAAX,GAAmBrB,WAAWqB,KAAX,IAAoB,wBAAvC;ASxFR,ATyFK;ASxFL,ATyFI,WAAOrB,UAAP;ASxFJ,ATyFC;ASxFD,ATyFA;ASxFA,ATyFA,SAAS0B,mBAAT,CAA6B1B,UAA7B,EAAyCc,OAAzC,EAAkD;ASxFlD,ATyFI,UAAMb,WAAYa,QAAQC,GAAR,KAAgB,KAAhB,8CAAlB;ASxFJ,ATyFI,UAAMY,YAAY,EAAlB;ASxFJ,ATyFI,QAAI3B,WAAWM,QAAX,KAAwBrH,SAA5B,EAAuC;ASxF3C,ATyFQ0I,kBAAUxJ,IAAV,CAAe6H,WAAWM,QAA1B;ASxFR,ATyFQqB,kBAAUxJ,IAAV,CAAe,GAAf;ASxFR,ATyFK;ASxFL,ATyFI,QAAI6H,WAAWO,IAAX,KAAoBtH,SAAxB,EAAmC;ASxFvC,ATyFQ;ASxFR,ATyFQ0I,kBAAUxJ,IAAV,CAAewH,OAAOK,WAAWO,IAAlB,EAAwBzM,OAAxB,CAAgCmM,SAAS3B,WAAzC,EAAsD,MAAtD,CAAf;ASxFR,ATyFK;ASxFL,ATyFI,QAAI,OAAO0B,WAAWkB,IAAlB,KAA2B,QAA/B,EAAyC;ASxF7C,ATyFQS,kBAAUxJ,IAAV,CAAe,GAAf;ASxFR,ATyFQwJ,kBAAUxJ,IAAV,CAAe6H,WAAWkB,IAAX,CAAgB9H,QAAhB,CAAyB,EAAzB,CAAf;ASxFR,ATyFK;ASxFL,ATyFI,WAAOuI,UAAUvN,MAAV,GAAmBuN,UAAU5I,IAAV,CAAe,EAAf,CAAnB,GAAwCE,SAA/C;ASxFJ,ATyFC;ASxFD,ATyFA;ASxFA,ATyFA,MAAM2I,OAAO,UAAb;ASxFA,ATyFA,MAAMC,OAAO,aAAb;ASxFA,ATyFA,MAAMC,OAAO,eAAb;ASxFA,ATyFA,MAAMC,OAAO,SAAb;ASxFA,ATyFA,MAAMC,OAAO,wBAAb;ASxFA,ATyFO,SAAStD,iBAAT,CAA2BuD,KAA3B,EAAkC;ASxFzC,ATyFI,UAAMC,SAAS,EAAf;ASxFJ,ATyFI,WAAOD,MAAM7N,MAAb,EAAqB;ASxFzB,ATyFQ,YAAI6N,MAAM7B,KAAN,CAAYwB,IAAZ,CAAJ,EAAuB;ASxF/B,ATyFYK,oBAAQA,MAAMnO,OAAN,CAAc8N,IAAd,EAAoB,EAApB,CAAR;ASxFZ,ATyFS,SAFD,MAGK,IAAIK,MAAM7B,KAAN,CAAYyB,IAAZ,CAAJ,EAAuB;ASzFpC,AT0FYI,oBAAQA,MAAMnO,OAAN,CAAc+N,IAAd,EAAoB,GAApB,CAAR;ASzFZ,AT0FS,SAFI,MAGA,IAAII,MAAM7B,KAAN,CAAY0B,IAAZ,CAAJ,EAAuB;AS1FpC,AT2FYG,oBAAQA,MAAMnO,OAAN,CAAcgO,IAAd,EAAoB,GAApB,CAAR;AS1FZ,AT2FYI,mBAAO3I,GAAP;AS1FZ,AT2FS,SAHI,MAIA,IAAI0I,UAAU,GAAV,IAAiBA,UAAU,IAA/B,EAAqC;AS3FlD,AT4FYA,oBAAQ,EAAR;AS3FZ,AT4FS,SAFI,MAGA;AS5Fb,AT6FY,kBAAME,KAAKF,MAAM7B,KAAN,CAAY4B,IAAZ,CAAX;AS5FZ,AT6FY,gBAAIG,EAAJ,EAAQ;AS5FpB,AT6FgB,sBAAMC,IAAID,GAAG,CAAH,CAAV;AS5FhB,AT6FgBF,wBAAQA,MAAMrJ,KAAN,CAAYwJ,EAAEhO,MAAd,CAAR;AS5FhB,AT6FgB8N,uBAAO/J,IAAP,CAAYiK,CAAZ;AS5FhB,AT6Fa,aAJD,MAKK;AS7FjB,AT8FgB,sBAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AS7FhB,AT8Fa;AS7Fb,AT8FS;AS7FT,AT8FK;AS7FL,AT8FI,WAAOH,OAAOnJ,IAAP,CAAY,EAAZ,CAAP;AS7FJ,AT8FC;AS7FD,AT8FA;AS7FA,AT8FO,SAAS4F,SAAT,CAAmBqB,UAAnB,EAA+Bc,UAAU,EAAzC,EAA6C;AS7FpD,AT8FI,UAAMb,WAAYa,QAAQC,GAAR,8CAAlB;AS7FJ,AT8FI,UAAMY,YAAY,EAAlB;AS7FJ,AT8FI;AS7FJ,AT8FI,UAAML,gBAAgBpC,QAAQ,CAAC4B,QAAQT,MAAR,IAAkBL,WAAWK,MAA7B,IAAuC,EAAxC,EAA4C5G,WAA5C,EAAR,CAAtB;AS7FJ,AT8FI;AS7FJ,AT8FI,QAAI6H,iBAAiBA,cAAc3C,SAAnC,EACI2C,cAAc3C,SAAd,CAAwBqB,UAAxB,EAAoCc,OAApC;AS9FR,AT+FI,QAAId,WAAWO,IAAf,EAAqB;AS9FzB,AT+FQ;AS9FR,AT+FQ,YAAIN,SAAS3B,WAAT,CAAqBgE,IAArB,CAA0BtC,WAAWO,IAArC,CAAJ,EAAgD;AS9FxD,AT+FY;AS9FZ,AT+FS,SAFD,MAGK,IAAIO,QAAQU,UAAR,IAAuBF,iBAAiBA,cAAcE,UAA1D,EAAuE;AS/FpF,ATgGY;AS/FZ,ATgGY,gBAAI;AS/FhB,ATgGgBxB,2BAAWO,IAAX,GAAmB,CAACO,QAAQC,GAAT,GAAe,mBAASU,OAAT,CAAiBzB,WAAWO,IAAX,CAAgBzM,OAAhB,CAAwBmM,SAAS5B,WAAjC,EAA8CG,WAA9C,EAA2D/E,WAA3D,EAAjB,CAAf,GAA4G,mBAAS8I,SAAT,CAAmBvC,WAAWO,IAA9B,CAA/H;AS/FhB,ATgGa,aAFD,CAGA,OAAOjB,CAAP,EAAU;AShGtB,ATiGgBU,2BAAWqB,KAAX,GAAmBrB,WAAWqB,KAAX,IAAoB,iDAAiD,CAACP,QAAQC,GAAT,GAAe,OAAf,GAAyB,SAA1E,IAAuF,iBAAvF,GAA2GzB,CAAlJ;AShGhB,ATiGa;AShGb,ATiGS;AShGT,ATiGK;AShGL,ATiGI;AShGJ,ATiGIS,gCAA4BC,UAA5B,EAAwCC,QAAxC;AShGJ,ATiGI,QAAIa,QAAQE,SAAR,KAAsB,QAAtB,IAAkChB,WAAWK,MAAjD,EAAyD;AShG7D,ATiGQsB,kBAAUxJ,IAAV,CAAe6H,WAAWK,MAA1B;AShGR,ATiGQsB,kBAAUxJ,IAAV,CAAe,GAAf;AShGR,ATiGK;AShGL,ATiGI,UAAMqK,YAAYd,oBAAoB1B,UAApB,EAAgCc,OAAhC,CAAlB;AShGJ,ATiGI,QAAI0B,cAAcvJ,SAAlB,EAA6B;AShGjC,ATiGQ,YAAI6H,QAAQE,SAAR,KAAsB,QAA1B,EAAoC;AShG5C,ATiGYW,sBAAUxJ,IAAV,CAAe,IAAf;AShGZ,ATiGS;AShGT,ATiGQwJ,kBAAUxJ,IAAV,CAAeqK,SAAf;AShGR,ATiGQ,YAAIxC,WAAWQ,IAAX,IAAmBR,WAAWQ,IAAX,CAAgBiC,MAAhB,CAAuB,CAAvB,MAA8B,GAArD,EAA0D;AShGlE,ATiGYd,sBAAUxJ,IAAV,CAAe,GAAf;AShGZ,ATiGS;AShGT,ATiGK;AShGL,ATiGI,QAAI6H,WAAWQ,IAAX,KAAoBvH,SAAxB,EAAmC;AShGvC,ATiGQ,YAAImJ,IAAIpC,WAAWQ,IAAnB;AShGR,ATiGQ,YAAI,CAACM,QAAQ4B,YAAT,KAA0B,CAACpB,aAAD,IAAkB,CAACA,cAAcoB,YAA3D,CAAJ,EAA8E;AShGtF,ATiGYN,gBAAI1D,kBAAkB0D,CAAlB,CAAJ;AShGZ,ATiGS;AShGT,ATiGQ,YAAII,cAAcvJ,SAAlB,EAA6B;AShGrC,ATiGYmJ,gBAAIA,EAAEtO,OAAF,CAAU,OAAV,EAAmB,MAAnB,CAAJ,CADyB,CACO;AShG5C,ATiGS;AShGT,ATiGQ6N,kBAAUxJ,IAAV,CAAeiK,CAAf;AShGR,ATiGK;AShGL,ATiGI,QAAIpC,WAAWS,KAAX,KAAqBxH,SAAzB,EAAoC;AShGxC,ATiGQ0I,kBAAUxJ,IAAV,CAAe,GAAf;AShGR,ATiGQwJ,kBAAUxJ,IAAV,CAAe6H,WAAWS,KAA1B;AShGR,ATiGK;AShGL,ATiGI,QAAIT,WAAWU,QAAX,KAAwBzH,SAA5B,EAAuC;AShG3C,ATiGQ0I,kBAAUxJ,IAAV,CAAe,GAAf;AShGR,ATiGQwJ,kBAAUxJ,IAAV,CAAe6H,WAAWU,QAA1B;AShGR,ATiGK;AShGL,ATiGI,WAAOiB,UAAU5I,IAAV,CAAe,EAAf,CAAP,CAzDgD,CAyDrB;AShG/B,ATiGC;AShGD,ATiGA;AShGA,ATiGO,SAAS6F,iBAAT,CAA2B+D,IAA3B,EAAiCC,QAAjC,EAA2C9B,UAAU,EAArD,EAAyD+B,iBAAzD,EAA4E;AShGnF,ATiGI,UAAMC,SAAS,EAAf;AShGJ,ATiGI,QAAI,CAACD,iBAAL,EAAwB;AShG5B,ATiGQF,eAAOlE,MAAME,UAAUgE,IAAV,EAAgB7B,OAAhB,CAAN,EAAgCA,OAAhC,CAAP,CADoB,CAC6B;AShGzD,ATiGQ8B,mBAAWnE,MAAME,UAAUiE,QAAV,EAAoB9B,OAApB,CAAN,EAAoCA,OAApC,CAAX,CAFoB,CAEqC;AShGjE,ATiGK;AShGL,ATiGIA,cAAUA,WAAW,EAArB;AShGJ,ATiGI,QAAI,CAACA,QAAQiC,QAAT,IAAqBH,SAASvC,MAAlC,EAA0C;AShG9C,ATiGQyC,eAAOzC,MAAP,GAAgBuC,SAASvC,MAAzB;AShGR,ATiGQ;AShGR,ATiGQyC,eAAOxC,QAAP,GAAkBsC,SAAStC,QAA3B;AShGR,ATiGQwC,eAAOvC,IAAP,GAAcqC,SAASrC,IAAvB;AShGR,ATiGQuC,eAAO5B,IAAP,GAAc0B,SAAS1B,IAAvB;AShGR,ATiGQ4B,eAAOtC,IAAP,GAAc9B,kBAAkBkE,SAASpC,IAAT,IAAiB,EAAnC,CAAd;AShGR,ATiGQsC,eAAOrC,KAAP,GAAemC,SAASnC,KAAxB;AShGR,ATiGK,KARD,MASK;ASjGT,ATkGQ,YAAImC,SAAStC,QAAT,KAAsBrH,SAAtB,IAAmC2J,SAASrC,IAAT,KAAkBtH,SAArD,IAAkE2J,SAAS1B,IAAT,KAAkBjI,SAAxF,EAAmG;ASjG3G,ATkGY;ASjGZ,ATkGY6J,mBAAOxC,QAAP,GAAkBsC,SAAStC,QAA3B;ASjGZ,ATkGYwC,mBAAOvC,IAAP,GAAcqC,SAASrC,IAAvB;ASjGZ,ATkGYuC,mBAAO5B,IAAP,GAAc0B,SAAS1B,IAAvB;ASjGZ,ATkGY4B,mBAAOtC,IAAP,GAAc9B,kBAAkBkE,SAASpC,IAAT,IAAiB,EAAnC,CAAd;ASjGZ,ATkGYsC,mBAAOrC,KAAP,GAAemC,SAASnC,KAAxB;ASjGZ,ATkGS,SAPD,MAQK;ASlGb,ATmGY,gBAAI,CAACmC,SAASpC,IAAd,EAAoB;ASlGhC,ATmGgBsC,uBAAOtC,IAAP,GAAcmC,KAAKnC,IAAnB;ASlGhB,ATmGgB,oBAAIoC,SAASnC,KAAT,KAAmBxH,SAAvB,EAAkC;ASlGlD,ATmGoB6J,2BAAOrC,KAAP,GAAemC,SAASnC,KAAxB;ASlGpB,ATmGiB,iBAFD,MAGK;ASnGrB,AToGoBqC,2BAAOrC,KAAP,GAAekC,KAAKlC,KAApB;ASnGpB,AToGiB;ASnGjB,AToGa,aARD,MASK;ASpGjB,ATqGgB,oBAAImC,SAASpC,IAAT,CAAciC,MAAd,CAAqB,CAArB,MAA4B,GAAhC,EAAqC;ASpGrD,ATqGoBK,2BAAOtC,IAAP,GAAc9B,kBAAkBkE,SAASpC,IAA3B,CAAd;ASpGpB,ATqGiB,iBAFD,MAGK;ASrGrB,ATsGoB,wBAAI,CAACmC,KAAKrC,QAAL,KAAkBrH,SAAlB,IAA+B0J,KAAKpC,IAAL,KAActH,SAA7C,IAA0D0J,KAAKzB,IAAL,KAAcjI,SAAzE,KAAuF,CAAC0J,KAAKnC,IAAjG,EAAuG;ASrG3H,ATsGwBsC,+BAAOtC,IAAP,GAAc,MAAMoC,SAASpC,IAA7B;ASrGxB,ATsGqB,qBAFD,MAGK,IAAI,CAACmC,KAAKnC,IAAV,EAAgB;AStGzC,ATuGwBsC,+BAAOtC,IAAP,GAAcoC,SAASpC,IAAvB;AStGxB,ATuGqB,qBAFI,MAGA;ASvGzB,ATwGwBsC,+BAAOtC,IAAP,GAAcmC,KAAKnC,IAAL,CAAU5H,KAAV,CAAgB,CAAhB,EAAmB+J,KAAKnC,IAAL,CAAUwC,WAAV,CAAsB,GAAtB,IAA6B,CAAhD,IAAqDJ,SAASpC,IAA5E;ASvGxB,ATwGqB;ASvGrB,ATwGoBsC,2BAAOtC,IAAP,GAAc9B,kBAAkBoE,OAAOtC,IAAzB,CAAd;ASvGpB,ATwGiB;ASvGjB,ATwGgBsC,uBAAOrC,KAAP,GAAemC,SAASnC,KAAxB;ASvGhB,ATwGa;ASvGb,ATwGY;ASvGZ,ATwGYqC,mBAAOxC,QAAP,GAAkBqC,KAAKrC,QAAvB;ASvGZ,ATwGYwC,mBAAOvC,IAAP,GAAcoC,KAAKpC,IAAnB;ASvGZ,ATwGYuC,mBAAO5B,IAAP,GAAcyB,KAAKzB,IAAnB;ASvGZ,ATwGS;AACD4B,eAAOzC,MAAP,GAAgBsC,KAAKtC,MAArB;AUpXR,AVqXK;AUpXL,AVqXIyC,WAAOpC,QAAP,GAAkBkC,SAASlC,QAA3B;AUpXJ,AVqXI,WAAOoC,MAAP;AUpXJ,AVqXC;AUpXD,AVqXA;AUpXA,AVqXO,SAASjE,OAAT,CAAiBoE,OAAjB,EAA0BC,WAA1B,EAAuCpC,OAAvC,EAAgD;AUpXvD,AVqXI,WAAOnC,UAAUC,kBAAkBH,MAAMwE,OAAN,EAAenC,OAAf,CAAlB,EAA2CrC,MAAMyE,WAAN,EAAmBpC,OAAnB,CAA3C,EAAwEA,OAAxE,EAAiF,IAAjF,CAAV,EAAkGA,OAAlG,CAAP;AUpXJ,AVqXC;AUpXD,AVqXA;AUpXA,AVqXO,SAAShC,SAAT,CAAmBqE,GAAnB,EAAwBrC,OAAxB,EAAiC;AACpC,QAAI,OAAOqC,GAAP,KAAe,QAAnB,EAA6B;AW/XjC,AXgYQA,cAAMxE,UAAUF,MAAM0E,GAAN,EAAWrC,OAAX,CAAV,EAA+BA,OAA/B,CAAN;AW/XR,AXgYK,KAFD,MAGK,IAAI,kBAAOqC,GAAP,MAAgB,QAApB,EAA8B;AWhYvC,AXiYQA,cAAM1E,MAAME,UAAUwE,GAAV,EAAerC,OAAf,CAAN,EAA+BA,OAA/B,CAAN;AWhYR,AXiYK;AWhYL,AXiYI,WAAOqC,GAAP;AWhYJ,AXiYC;AWhYD,AXiYA;AWhYA,AXiYO,SAASpE,KAAT,CAAeqE,IAAf,EAAqBC,IAArB,EAA2BvC,OAA3B,EAAoC;AWhY3C,AXiYI,QAAI,OAAOsC,IAAP,KAAgB,QAApB,EAA8B;AWhYlC,AXiYQA,eAAOzE,UAAUF,MAAM2E,IAAN,EAAYtC,OAAZ,CAAV,EAAgCA,OAAhC,CAAP;AWhYR,AXiYK,KAFD,MAGK,IAAI,kBAAOsC,IAAP,MAAiB,QAArB,EAA+B;AWjYxC,AXkYQA,eAAOzE,UAAUyE,IAAV,EAAgBtC,OAAhB,CAAP;AWjYR,AXkYK;AWjYL,AXkYI,QAAI,OAAOuC,IAAP,KAAgB,QAApB,EAA8B;AWjYlC,AXkYQA,eAAO1E,UAAUF,MAAM4E,IAAN,EAAYvC,OAAZ,CAAV,EAAgCA,OAAhC,CAAP;AWjYR,AXkYK,KAFD,MAGK,IAAI,kBAAOuC,IAAP,MAAiB,QAArB,EAA+B;AWlYxC,AXmYQA,eAAO1E,UAAU0E,IAAV,EAAgBvC,OAAhB,CAAP;AWlYR,AXmYK;AWlYL,AXmYI,WAAOsC,SAASC,IAAhB;AWlYJ,AXmYC;AWlYD,AXmYA;AWlYA,AXmYO,SAASrE,eAAT,CAAyBnL,GAAzB,EAA8BiN,OAA9B,EAAuC;AWlY9C,AXmYI,WAAOjN,OAAOA,IAAIuF,QAAJ,GAAetF,OAAf,CAAwB,CAACgN,OAAD,IAAY,CAACA,QAAQC,GAArB,GAA2B,qBAAa7C,MAAxC,GAAiD,qBAAaA,MAAtF,EAA+FK,UAA/F,CAAd;AWlYJ,AXmYC;AWlYD,AXmYA;AWlYA,AXmYO,SAASU,iBAAT,CAA2BpL,GAA3B,EAAgCiN,OAAhC,EAAyC;AWlYhD,AXmYI,WAAOjN,OAAOA,IAAIuF,QAAJ,GAAetF,OAAf,CAAwB,CAACgN,OAAD,IAAY,CAACA,QAAQC,GAArB,GAA2B,qBAAa1C,WAAxC,GAAsD,qBAAaA,WAA3F,EAAyGG,WAAzG,CAAd;AWlYJ,AXmYC;AWlYD,AXmYA;AWlYA,AXmYA;AWlYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7bzrzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvjnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxxUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlvjfnSgBgI,YAAAA;QAmBAC,gBAAAA;QAeAC,ACuCAmC,eAAAA,CDvCAnC;QAQAC,AC0CAmC,YD1CAnC,CC0CAmC;QDjCAlC,AC2CAmC,YAAAA,GD3CAnC;AGvEhB;AHAA,ACAA,QCoCgB+E,YAAAA;ACnChB;ADDA,ADCA;AEEA,IAAMgB,eAAenY,SAASC,cAAT,CAAwB,UAAxB,CAArB;AHFA,ACCA,AEEA,IAAMmY,cAAcpY,SAASC,cAAT,CAAwB,SAAxB,CAApB;AACA,IAAMoY,kBAAkBrY,SAASC,cAAT,CAAwB,mBAAxB,CAAxB;ADJA,ADGA,AEEA,IFFMuU,AEEA8D,aAAatY,CFFCA,QEEQC,CFFCA,aEEV,CFFC,AEEuB,CFFC,YEEzB,CFFC,AEEpB,CFFA;AEGA,IAAMsY,kBAAkBvY,SAASC,cAAT,CAAwB,mBAAxB,CAAxB;ADLA,AFAA,ACIA,AEEA,IAAMuY,KFFG/D,YAAT,GAAwB,CEEGzU,SAASC,cAAT,CAAwB,sBAAxB,CAA3B;AFDE,AEEF,IAAMwY,cAAczY,SAASC,MFFXoT,IAAhB,CAAqB,GEEH,CAAwB,eFFV,GEEd,CAApB;AFDImB,gBAAYlT,SAAZ,GAAwBoT,QAAQ9U,MAAhC;AACD,AEEHuY,GFJE,UEIWpV,gBAAb,CAA8B,OAA9B,EAAuC,YAAM;ADP7C,ADMC,AEEC0V,SDROrB,KCQKnV,GDRd,CAAmByS,KCQjB,CAAsBnS,CDRxB,EAA4B,GCQ1B,CAA6B,UAA7B;ADPE,ACQH,CAFD,ODNQ8U,kBAAkB,GAAtB;AACA,AFFJ,ACQA,IDRIhF,IEEIiF,CDMC3C,OAAT,GAAmB,GDRG,EEEE,EFFxB,EEEI;AACA,AFFJ,ACQE,AEEFyD,IHVI9F,IEEIiF,CDMC3C,CDRC,EGUE7R,KDRK,EAAb,KDMoB8R,IEExB,CHVA,AGU6B,EFFpB,CAAuB,IEEhC,EAAsC,IFF7B,EAAmCvV,MEEA,CFFnC,CAA2C,GAA3C,EAAgD,GAAhD,CAAP;ACLE,AFFJ,ACQC,AEECmZ,IHVElG,IEEIiF,MCQMvV,MHVMqQ,GEEG,ACQrB,CHVsBE,AGUAtQ,GDRpB,ACQF,CAA0B,GHVR,OGUlB,WHVF;AEGI,ACQH,CAFD,ODNQuV,SAAJ;AFDJ,ACQA,SDRShF,ACQAqC,eDRT,CAAyBpC,MCQzB,GDRA,ACQkC,EDRE;AEGhC,AFFFC,ACQA,AEEF0F,MFFMtD,ECNEL,EFFE9B,GAAR,ACQW,CDRC,EGUE7P,CFFCiS,ECNE,EDMN,CAASA,CCNd,IAAmB,ADMAC,CCNCP,EDMN,EAAT,AEEb,CFFE,AEE+B,EHV/B,CEEkC9U,ICQpC,EDRI,EAAwC;AACpC,AFFN,ACQA,AEEF0Y,MHVM,ACQA/G,CDRCmB,IGUI3P,EFFE4R,ECNE,EFFE9B,EEET,GDMN,KEEF,CAA4B,KHVrB,CAA2BC,CGUlC,OHVO,CAAoC,SAApC,CAAL,EAAqD;AEGlD,AFFDJ,ACQFC,AEEF4F,UFFU3F,GAAR,CDRYG,ACQAxB,EEEExO,EFFd,aDRE,CAA4B,AGUhC,CAAiC,OAAjC,CHVI,CGUsC,CHVC,WGUK;AHT1CiQ,ACQJ,AEEA,SFFU+B,KAAKG,CDRF,IAD4B,MCS/B,EAAV,UAAgCH,KAAKI,QAAL,KAC9B,CADF,UACOJ,KAAKK,OAAL,EADP,SACyBL,KAAKM,QAAL,EADzB,SAC4CN,KAAKO,UAAL,EAD5C,SACiEP,KAAKQ,UAAL,EADjE,SACsFhE,IADtF;ACLE,AFFE0B,ACSL,AECC,QDRMtC,UAAUjM,GFFG,IEEIgT,IAAP,mBAAd;AACAH,AFLuC,AGa1C,CAHD,IHVI,SEKU5G,QAAQpM,IAAR,CAAa8S,eAAb,IAAgCC,aAA1C;AFDD,ACSH,AECAkB,SFDShD,UAAT,AECmBzS,CFDC0S,SAApB,EAA+B,IEC/B,CAAoC,OAApC;ADPIf,AFFH,ACSC,MAAIgB,MCPMtV,OAAR,CAAgB,ADOA,EAAlB,gBCP4B;AACtBuQ,ADON,MAAIgF,SAAS3V,CCPCI,OAAR,CAAgB,ADOAD,gBAAT,ECPmB,KDOWsV,SAA9B,iBAAb;ACNU,AFFZ,ACSEE,IDTEzC,KCSK9S,OCPO,AFFA,ACSd,CCPeoX,ADOA,YCPL,CFFQrE,CEEWoE,GFFf,ACSU,CDTD,MEEgBF,cFFzB,CEEe,CFFgB,CAA/B,EAAkC5E,eAAlC,CAAhB;AEGY,ADOR,QAAIhF,MAAMmI,ECPE,EDOR,KAAe,OAAnB,EAA4B;ACNhB6B,AFFT,ACSD,SDTUzF,CCSNvE,MAAMoI,EDTT,CAAmBzC,ICSpB,EDTC,ACUCsC,EDV0B,CEENiC,KAAK,IDQb,QCRyB,kBAAWC,CDQvBnK,KCRY,CAAjB,ADQWpK,CCRvB,MDQiB,CAAcC,GAA3B,CAAZ,IAA+CmK,MAAM9N,KAArD;ACPK,AFFX,ACUG,KAHD,CDPE,CAAC4S,ICUI,ECVC,CAEE,CDQC9E,MCRM3C,AFFAsI,ACUAzT,CCRP,EAAU,EDQT,CDVR,CAAL,EAA4B,CCUC,EAApB,EAAwB;ACPnB8X,AFFZ9E,ACUE+C,YDVM7I,KAAR,CAAc0F,ACUA,UCRU,EAAZ,EFFgB7R,MAA5B,OCU2B+M,MAAMpK,OAAN,CAAcC,GAA3B,CAAZ,IAA+CmK,MAAM9N,KAArD;ACPO,AFFT,ACUC;ACPO4X,AFFT,ACUA,GAPD,mBCDqBE,cAAc,WAAd,IAA6BA,aAAa,IAA1C,GAAiD,EAAjD,GAAsDA,SAAjE;AACAD,ADQV,SAAO9B,WAAP,OCRyB,KAAf;AACH,AFFP,ACUD,SCjBO,AFOCxC,UAAUG,IAAV,CAAe,cAAM;AEGtBkE,AFFJ,QAAMjE,KAAKC,GAAGC,EEEA8D,SFFH,CAAe,GEEtB,MFFO,EAA0B,WAA1B,CAAX;AEGIE,AFFJ,ACUJ,QDVQ/D,CCUCqC,aDVaxC,CEEC,CDQvB,CDVyBG,EEEjB,ADQmB,SDVL,CAAe,SAAf,CAAlB;AEGC,AFFD,ACUF,KCrBE,CDqBEL,EDVEf,OCUO,QDVX,EAAqB;AACnBe,ACUF2C,aDVSrC,EAAP,CCUU8B,EDVEnD,SCUS,MDVrB,SCUU,CADD;ACNX,AFFC,ACUD2D,WCROuB,GDQG/B,GCRV,QDQqB,eAAX,CAFC;ACLd,AFFG/B,ACUAwC,gBDVYtC,ECUE6B,CDVd,CAAgBpC,MAAhB,EAAwBC,CCUC,GDVzB,CAA6B,cAAM,ECUrB,CAHH;ADNThB,ACUF6D,kBAAcV,MDVM9B,EAAlB,GCUuB,eAAX,CAJH;ACHR,AFFF,ACUDyC,KDZA,IEIYgB,KDQF3B,ICRP,GAAsB,IDQJ,WAAX,CALC;ACFX,AFFA,ACUAY,WDVO9C,GAAGM,MCUM4B,EDVhB,SCU2B,ICRXnC,IAAhB,CACI,QDOY,CANL,UCDI;AACP,AFHT,ACUCgD,GDpBK,CAAP,QEacrC,IAAJ,EAAU6D,ADOJrC,QCPN,EAAoBsC,CDOH,GCPjB,YDOM,CAPH;ACCH,AFHX,ACUGxB,YCPYyB,MDOEvC,MCPU4B,KDOC,ICPQ1C,OAAT,CAAhB,GDOM;AARH,GAAb;ACGU,AFHL,SAASzC,GEGA8F,UFHT,GEGsB,AFHG,IEGpB,EAAuBnB,MAAM,mBAAN;AFFjC,ACWA,MAAML,GDXC,IAAI1C,OAAJ,CAAY,ACWE,IAAI2C,GAAJ,CAAQ,CAAC,CDXVnM,OAAD,EAAUyJ,CCWA,EAAc,GDXxB,EAAqB,QCWX,EAA6B,aAA7B,EACC,WADD,EACc,WADd,EAC2B,UAD3B,CAAR,CAArB;ACPU+D,AFHR3E,cACGG,IADH,CEGmB,AFFX,YEEA,EFFM;AACV,ACWN,MAAIoD,ODXSlD,GACJC,MCUW,EAApB,GDXa,CACQ,SADR,EAEJC,WAFI,CAEQ,SAFR,EAGJM,MAHI,EAAP;AEGI,AFCL,ACQL,KDdE,EAOGV,ACOA,IDdH,ACcOqD,CCTK,AFEJ,CEFKqB,GDSf,IAAkB3E,GCTOxH,IDSAqK,CCTV,AFEG,CEFa,UDS/B,EAAuC,MCTxB,CAAL,EAA0C;AACtC8B,AFER1N,ACOJ,QAAIkM,MDPQvC,IAAR,GCOa2C,GCTO,ADSpB,CAAiBD,KAAjB,CAAJ,EAA6B,wBCT4BqB,SAA7C;AACH,AFEN,ACODtB,KDhBF,kBCgBmB,eAAjB;ACRMzC,AFET,ACOG,GDlBG,CAAP,WESiBgE,UAAUD,SAAV,CAAP;AFGX,ACOI;ACROD,ADST,eCTgB9X,SAASmB,aAAT,CAAuB,GAAvB,CAAP;AACA2W,AFEL,ACOL,OAAK,EDPS5F,ECOLwE,ECTMuB,GDSf,IAAkB7E,EDPb,GEFK,AFEoB,CEFF,CDSHgD,KCTf,EAA0BpC,IAA1B,GDSV,EAAyC;ACR/B8D,AFEV,ACOE,QAAIvB,CDPCrD,IEFQ+E,MFEE5E,ECOEsD,EDPZ,CAAe,ACOhB,CCTI,ADSaD,CCTK,IDStB,CAAJ,EAA6B,GCTrB,EAA8BmB,AFEZ,QEFlB;AACAC,AFER,ACOE,QDPIxE,ECOAmD,GCTOyB,AFEF3E,GAAGC,EEFN,KDSN,EAAmB,EDPV,CAAe,SAAf,EAA0B,WAA1B,CAAX;AEDK,AFELF,ACOImD,KC3BJ,EFoBGhD,WAAH,CAAe,MCOM,GDPrB,CCOI,CDPsBQ,KAA1B;AEAH,AFCG,ACOG,WDPIX,GAAGM,QAAV;AACD,ACOG6C,GDXG,CAAP,mBCWqB,iBAAjB;ADNL,ACOK;AACD;ADNE,ACOJ,SDPatE,SAAT,CAAmB+B,QAAnB,EAA6B;AAClC,ACOA,OAAK,EDPEhB,ECOEwD,KAAT,GDPiBrD,CCOCD,GDPX,CAAe,GCOGkD,WDPG,CCO5B,EAAuC;ADNrC,ACOA,QAAIC,GDPGhD,GACJC,OCMcmD,GAAb,CDPG,ACOcD,CDNN,ICMX,CAAJ,EAA6B,EDPtB,EAEJjD,WAFI,CAEQ,SAFR,EAGJU,GAHI,CAGAD,QAHA,CAAP;AAID,ACIG,GDTG,CAAP,MCSQuC,aAAJ,EAAmB;ADHxB,ACIOA,yBAAiB,IAAjB;AACD;ADHA,ACIDA,SDJUrE,YAAT,CAAsB8B,CCIN,ODJhB,CCID,CDJiC;AACrC,ACII,SDJGhB,UAAUG,IAAV,CAAe,cAAM;AAC1B,ACIC,QDJKC,KAAKC,GAAGC,WAAH,CAAe,SAAf,EAA0B,WAA1B,CAAX;AACAF,ACID,ODJIG,WAAH,CAAe,SAAf,EAA0BW,MAA1B,CAAiCF,QAAjC;AACA,WAAOZ,GAAGM,QAAV;AACD,ACID,GDRO,CAAP,ECQI6C,aAAJ,EAAmB;ADHpB,ACIGG,UAAM,wHAC0CH,aAD1C,kBAAN;AAED;;AAED,MAAIrD,OAAO+C,QAAP,CAAgBU,OAAhB,KAA4B,IAAhC,EAAsCzD,OAAO+C,QAAP,GAAkB,EAAEU,SAAS,IAAX,EAAlB;AACtCzD,SAAO2C,UAAP,CAAkBe,cAAlB,GAAmChC,wBAAnC;AACA1B,SAAO6C,YAAP,CAAoBvT,MAApB,GAA6B,+BAAmBS,SAAnB,EAA7B;AACAiQ,SAAOgD,cAAP,CAAsBvS,UAAtB,GAAmC,uBAAWV,SAAX,EAAnC;AACAiQ,SAAOkD,YAAP,CAAoBxS,MAApB,GAA6B,mBAAOX,SAAP,EAA7B;AACA,SAAOiQ,MAAP;AACD;;AAEM,SAASiB,YAAT,GAAwB;AAC7B,MAAM0C,eAAeC,QACnB,6JADmB,CAArB;AAGA,MAAID,YAAJ,EAAkB;AAChB,mCAAgB1D,IAAhB,CAAqB,YAAM;AACzBoB;AACD,KAFD;AAGD;AACF;;AAEM,SAASH,UAAT,GAAsB;AAC3B,SAAO,IAAIT,OAAJ,CAAY,UAACxJ,OAAD,EAAUyJ,MAAV,EAAqB;AACtC,QAAIV,SAAS0C,iBAAb;AACA,6BAAU1C,MAAV,EAAkBC,IAAlB,CAAuB,kBAAU;AAC/BoB;AACApK;AACD,KAHD;AAID,GANM,CAAP;AAOD;;AAEM,SAASkK,SAAT,GAAqB;AAC1BD,eAAajB,IAAb,CAAkB,YAAM;AACtB4D,aAASC,MAAT;AACD,GAFD;AAGD;;AAEDzC","file":"triggers.0567845a.map","sourcesContent":["export function kebabToCamel(str) {\n    return str.replace(/(\\-[A-Za-z])/g, function (m) {\n        return m.toUpperCase().replace('-','')\n    })\n}\n\n/**\n * Checks if the input is filled in\n * @param {string} value\n */\nexport const validateName = value => {\n  const cleanValue = value.replace(/\\s+/g, \"\");\n  if (cleanValue.length === 0) {\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Removes any children style elements of a given parent node\n * @param {parentId string}\n */\nexport const removeStyleNodes = (parentId) => {\n  var parent = document.getElementById(parentId)\n  var styleNodes = document.querySelectorAll(`#${parentId} style`);\n  styleNodes.forEach( (element) => {\n    parent.removeChild(element);\n  })\n}\n\n/**\n * Reset all the input and select elements to default and remove styles of the given form\n * @param {formId}\n */\nexport const resetForm = (formId) => {\n  var elements = document.querySelectorAll(`#${formId} input, #${formId} select`);\n  elements.forEach((element) => {\n    element.value = ''\n  })\n  removeStyleNodes(formId);\n}","const errors = {\n  introIvalidUsername: \"Remember to fill in a valid username\",\n  longFormNoUserName: \"You have to enter your Name before entering data\",\n  addPersonNoVerbatim: \"You must enter a Verbatim Name before adding a Person\",\n  noPlacesFound: \"No details about the place you searched for\",\n  googleMapsError: \"Error Status in Google Maps search: \",\n  noTaxnomoniesFound:\n    \"Worms couldn't find that taxonomy, try searching it by hand \"\n};\n\n/**\n * Converts a valid html string representation into an html element\n * @param {html string representation} html\n */\nconst htmlTextToElement = html => {\n  const template = document.createElement(\"template\");\n  html = html.trim();\n  template.innerHTML = html;\n  return template.content.firstChild;\n};\n\n/**\n * Displays an error message and adds the error class to the input field\n */\nexport const showError = (elementId, text, center=true) => {\n  var centerClass = center ? 'u-align-center' : ''\n  const errorTemplate = `<div id=\"Error\" class='c-form__error-label ${centerClass}' >${text}</div>`;\n  const nameInput = document.getElementById(elementId);\n\n  nameInput.insertAdjacentElement(\"afterend\", htmlTextToElement(errorTemplate));\n  nameInput.classList.add(\"c-input--error\");\n};\n\n/**\n * Removes the error classes and html elements\n */\nexport const cleanErrors = (labelId, inputId) => {\n  const errorLabel = document.getElementById(labelId);\n  const nameInput = document.getElementById(inputId);\n\n  if (errorLabel) {\n    errorLabel.remove();\n    nameInput.classList.remove(\"c-input--error\");\n  }\n};\n\nexport default errors;\n","import errorsList from \"./errors\";\nimport { showError, cleanErrors } from \"./errors\";\nimport { kebabToCamel, validateName } from './helpers.js'\n\nclass PeopleList {\n    constructor(idPrefix) {\n        this.people = []\n        this.idPrefix = idPrefix;\n        this.button = document.getElementById(`${idPrefix}-button`)\n        this.form = document.querySelectorAll(`#${idPrefix}-form input`)\n        this.verbatimField = document.getElementById(`${idPrefix}-verbatim`)\n        this.list = document.getElementById(`${idPrefix}-list`)\n        this.button.addEventListener('click', this.addToList.bind(this))\n        this.createPerson = this.createPerson.bind(this)\n        this.getPeople = this.getPeople.bind(this)\n    }\n\n    createPerson() {\n        let person = {};\n\n        this.form.forEach((element) => {\n            person[kebabToCamel(element.dataset.key)] = element.value\n            element.value = ''\n        })\n\n        let listItem = document.createElement('li')\n        let span = document.createElement('span')\n        let i = document.createElement('i')\n\n        i.classList.add(\"fas\", \"fa-user\")\n        span.appendChild(i)\n        listItem.appendChild(span)\n        this.list.appendChild(listItem)\n\n        listItem.innerHTML += person['verbatim']\n        return person\n    }\n\n    addToList() {\n        if (validateName(this.verbatimField.value)) {\n            cleanErrors(\"Error\", `${this.idPrefix}-verbatim`)\n            this.people.push(this.createPerson())\n        } else {\n          showError(`${this.idPrefix}-verbatim`, errorsList.addPersonNoVerbatim, false)\n        }\n    }\n\n    getPeople() {\n        return this.people\n    }\n}\n\nexport const determinedByPeople = new PeopleList('determined-by')\nexport const collectors = new PeopleList('collected-by')\nexport const donors = new PeopleList('donated-by')","export function merge(...sets) {\r\n    if (sets.length > 1) {\r\n        sets[0] = sets[0].slice(0, -1);\r\n        const xl = sets.length - 1;\r\n        for (let x = 1; x < xl; ++x) {\r\n            sets[x] = sets[x].slice(1, -1);\r\n        }\r\n        sets[xl] = sets[xl].slice(1);\r\n        return sets.join('');\r\n    }\r\n    else {\r\n        return sets[0];\r\n    }\r\n}\r\nexport function subexp(str) {\r\n    return \"(?:\" + str + \")\";\r\n}\r\nexport function typeOf(o) {\r\n    return o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\r\n}\r\nexport function toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nexport function toArray(obj) {\r\n    return obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\r\n}\r\n//# sourceMappingURL=util.js.map","import { merge, subexp } from \"./util\";\r\nexport function buildExps(isIRI) {\r\n    const ALPHA$$ = \"[A-Za-z]\", CR$ = \"[\\\\x0D]\", DIGIT$$ = \"[0-9]\", DQUOTE$$ = \"[\\\\x22]\", HEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"), //case-insensitive\r\n    LF$$ = \"[\\\\x0A]\", SP$$ = \"[\\\\x20]\", PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)), //expanded\r\n    GEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\", SUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\", RESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$), UCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\", //subset, excludes bidi control characters\r\n    IPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\", //subset\r\n    UNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$), SCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"), USERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"), DEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$), IPV4ADDRESS$ = subexp(DEC_OCTET$ + \"\\\\.\" + DEC_OCTET$ + \"\\\\.\" + DEC_OCTET$ + \"\\\\.\" + DEC_OCTET$), H16$ = subexp(HEXDIG$$ + \"{1,4}\"), LS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$), IPV6ADDRESS1$ = subexp(subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\r\n    IPV6ADDRESS2$ = subexp(\"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\r\n    IPV6ADDRESS3$ = subexp(subexp(H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\r\n    IPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\r\n    IPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\r\n    IPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" + H16$ + \"\\\\:\" + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\r\n    IPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\" + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\r\n    IPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\" + H16$), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\r\n    IPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"), //[ *6( h16 \":\" ) h16 ] \"::\"\r\n    IPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")), IPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"), IP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"), REG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"), HOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$), PORT$ = subexp(DIGIT$$ + \"*\"), AUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"), PCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")), SEGMENT$ = subexp(PCHAR$ + \"*\"), SEGMENT_NZ$ = subexp(PCHAR$ + \"+\"), SEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"), PATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"), PATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"), //simplified\r\n    PATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$), //simplified\r\n    PATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$), //simplified\r\n    PATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\", PATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$), QUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"), FRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"), HIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$), URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"), RELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$), RELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"), URI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$), ABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"), GENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\", RELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\", ABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\", SAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\", AUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\";\r\n    return {\r\n        NOT_SCHEME: new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\r\n        NOT_USERINFO: new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\r\n        NOT_HOST: new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\r\n        NOT_PATH: new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\r\n        NOT_PATH_NOSCHEME: new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\r\n        NOT_QUERY: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\r\n        NOT_FRAGMENT: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\r\n        ESCAPE: new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\r\n        UNRESERVED: new RegExp(UNRESERVED$$, \"g\"),\r\n        OTHER_CHARS: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\r\n        PCT_ENCODED: new RegExp(PCT_ENCODED$, \"g\"),\r\n        IPV6ADDRESS: new RegExp(\"\\\\[?(\" + IPV6ADDRESS$ + \")\\\\]?\", \"g\")\r\n    };\r\n}\r\nexport default buildExps(false);\r\n//# sourceMappingURL=regexps-uri.js.map","import { buildExps } from \"./regexps-uri\";\r\nexport default buildExps(true);\r\n//# sourceMappingURL=regexps-iri.js.map","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","/**\r\n * URI.js\r\n *\r\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\r\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\r\n * @see http://github.com/garycourt/uri-js\r\n */\r\n/**\r\n * Copyright 2011 Gary Court. All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification, are\r\n * permitted provided that the following conditions are met:\r\n *\r\n *    1. Redistributions of source code must retain the above copyright notice, this list of\r\n *       conditions and the following disclaimer.\r\n *\r\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\r\n *       of conditions and the following disclaimer in the documentation and/or other materials\r\n *       provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\r\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\r\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\r\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * The views and conclusions contained in the software and documentation are those of the\r\n * authors and should not be interpreted as representing official policies, either expressed\r\n * or implied, of Gary Court.\r\n */\r\nimport URI_PROTOCOL from \"./regexps-uri\";\r\nimport IRI_PROTOCOL from \"./regexps-iri\";\r\nimport punycode from \"punycode\";\r\nimport { toUpperCase, typeOf } from \"./util\";\r\nexport const SCHEMES = {};\r\nexport function pctEncChar(chr) {\r\n    const c = chr.charCodeAt(0);\r\n    let e;\r\n    if (c < 16)\r\n        e = \"%0\" + c.toString(16).toUpperCase();\r\n    else if (c < 128)\r\n        e = \"%\" + c.toString(16).toUpperCase();\r\n    else if (c < 2048)\r\n        e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\r\n    else\r\n        e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\r\n    return e;\r\n}\r\nexport function pctDecChars(str) {\r\n    let newStr = \"\";\r\n    let i = 0;\r\n    const il = str.length;\r\n    while (i < il) {\r\n        const c = parseInt(str.substr(i + 1, 2), 16);\r\n        if (c < 128) {\r\n            newStr += String.fromCharCode(c);\r\n            i += 3;\r\n        }\r\n        else if (c >= 194 && c < 224) {\r\n            if ((il - i) >= 6) {\r\n                const c2 = parseInt(str.substr(i + 4, 2), 16);\r\n                newStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n            }\r\n            else {\r\n                newStr += str.substr(i, 6);\r\n            }\r\n            i += 6;\r\n        }\r\n        else if (c >= 224) {\r\n            if ((il - i) >= 9) {\r\n                const c2 = parseInt(str.substr(i + 4, 2), 16);\r\n                const c3 = parseInt(str.substr(i + 7, 2), 16);\r\n                newStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n            }\r\n            else {\r\n                newStr += str.substr(i, 9);\r\n            }\r\n            i += 9;\r\n        }\r\n        else {\r\n            newStr += str.substr(i, 3);\r\n            i += 3;\r\n        }\r\n    }\r\n    return newStr;\r\n}\r\nfunction _normalizeComponentEncoding(components, protocol) {\r\n    function decodeUnreserved(str) {\r\n        const decStr = pctDecChars(str);\r\n        return (!decStr.match(protocol.UNRESERVED) ? str : decStr);\r\n    }\r\n    if (components.scheme)\r\n        components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\r\n    if (components.userinfo !== undefined)\r\n        components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\r\n    if (components.host !== undefined)\r\n        components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\r\n    if (components.path !== undefined)\r\n        components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\r\n    if (components.query !== undefined)\r\n        components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\r\n    if (components.fragment !== undefined)\r\n        components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\r\n    return components;\r\n}\r\n;\r\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[\\dA-F:.]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\r\nconst NO_MATCH_IS_UNDEFINED = (\"\").match(/(){0}/)[1] === undefined;\r\nexport function parse(uriString, options = {}) {\r\n    const components = {};\r\n    const protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\r\n    if (options.reference === \"suffix\")\r\n        uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\r\n    const matches = uriString.match(URI_PARSE);\r\n    if (matches) {\r\n        if (NO_MATCH_IS_UNDEFINED) {\r\n            //store each component\r\n            components.scheme = matches[1];\r\n            components.userinfo = matches[3];\r\n            components.host = matches[4];\r\n            components.port = parseInt(matches[5], 10);\r\n            components.path = matches[6] || \"\";\r\n            components.query = matches[7];\r\n            components.fragment = matches[8];\r\n            //fix port number\r\n            if (isNaN(components.port)) {\r\n                components.port = matches[5];\r\n            }\r\n        }\r\n        else {\r\n            //store each component\r\n            components.scheme = matches[1] || undefined;\r\n            components.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\r\n            components.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\r\n            components.port = parseInt(matches[5], 10);\r\n            components.path = matches[6] || \"\";\r\n            components.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\r\n            components.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\r\n            //fix port number\r\n            if (isNaN(components.port)) {\r\n                components.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\r\n            }\r\n        }\r\n        //strip brackets from IPv6 hosts\r\n        if (components.host) {\r\n            components.host = components.host.replace(protocol.IPV6ADDRESS, \"$1\");\r\n        }\r\n        //determine reference type\r\n        if (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\r\n            components.reference = \"same-document\";\r\n        }\r\n        else if (components.scheme === undefined) {\r\n            components.reference = \"relative\";\r\n        }\r\n        else if (components.fragment === undefined) {\r\n            components.reference = \"absolute\";\r\n        }\r\n        else {\r\n            components.reference = \"uri\";\r\n        }\r\n        //check for reference errors\r\n        if (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\r\n            components.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\r\n        }\r\n        //find scheme handler\r\n        const schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\r\n        //check if scheme can't handle IRIs\r\n        if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\r\n            //if host component is a domain name\r\n            if (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\r\n                //convert Unicode IDN -> ASCII IDN\r\n                try {\r\n                    components.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\r\n                }\r\n                catch (e) {\r\n                    components.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\r\n                }\r\n            }\r\n            //convert IRI -> URI\r\n            _normalizeComponentEncoding(components, URI_PROTOCOL);\r\n        }\r\n        else {\r\n            //normalize encodings\r\n            _normalizeComponentEncoding(components, protocol);\r\n        }\r\n        //perform scheme specific parsing\r\n        if (schemeHandler && schemeHandler.parse) {\r\n            schemeHandler.parse(components, options);\r\n        }\r\n    }\r\n    else {\r\n        components.error = components.error || \"URI can not be parsed.\";\r\n    }\r\n    return components;\r\n}\r\n;\r\nfunction _recomposeAuthority(components, options) {\r\n    const protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\r\n    const uriTokens = [];\r\n    if (components.userinfo !== undefined) {\r\n        uriTokens.push(components.userinfo);\r\n        uriTokens.push(\"@\");\r\n    }\r\n    if (components.host !== undefined) {\r\n        //ensure IPv6 addresses are bracketed\r\n        uriTokens.push(String(components.host).replace(protocol.IPV6ADDRESS, \"[$1]\"));\r\n    }\r\n    if (typeof components.port === \"number\") {\r\n        uriTokens.push(\":\");\r\n        uriTokens.push(components.port.toString(10));\r\n    }\r\n    return uriTokens.length ? uriTokens.join(\"\") : undefined;\r\n}\r\n;\r\nconst RDS1 = /^\\.\\.?\\//;\r\nconst RDS2 = /^\\/\\.(\\/|$)/;\r\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\r\nconst RDS4 = /^\\.\\.?$/;\r\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\r\nexport function removeDotSegments(input) {\r\n    const output = [];\r\n    while (input.length) {\r\n        if (input.match(RDS1)) {\r\n            input = input.replace(RDS1, \"\");\r\n        }\r\n        else if (input.match(RDS2)) {\r\n            input = input.replace(RDS2, \"/\");\r\n        }\r\n        else if (input.match(RDS3)) {\r\n            input = input.replace(RDS3, \"/\");\r\n            output.pop();\r\n        }\r\n        else if (input === \".\" || input === \"..\") {\r\n            input = \"\";\r\n        }\r\n        else {\r\n            const im = input.match(RDS5);\r\n            if (im) {\r\n                const s = im[0];\r\n                input = input.slice(s.length);\r\n                output.push(s);\r\n            }\r\n            else {\r\n                throw new Error(\"Unexpected dot segment condition\");\r\n            }\r\n        }\r\n    }\r\n    return output.join(\"\");\r\n}\r\n;\r\nexport function serialize(components, options = {}) {\r\n    const protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\r\n    const uriTokens = [];\r\n    //find scheme handler\r\n    const schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\r\n    //perform scheme specific serialization\r\n    if (schemeHandler && schemeHandler.serialize)\r\n        schemeHandler.serialize(components, options);\r\n    if (components.host) {\r\n        //if host component is an IPv6 address\r\n        if (protocol.IPV6ADDRESS.test(components.host)) {\r\n            //TODO: normalize IPv6 address as per RFC 5952\r\n        }\r\n        else if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\r\n            //convert IDN via punycode\r\n            try {\r\n                components.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\r\n            }\r\n            catch (e) {\r\n                components.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\r\n            }\r\n        }\r\n    }\r\n    //normalize encoding\r\n    _normalizeComponentEncoding(components, protocol);\r\n    if (options.reference !== \"suffix\" && components.scheme) {\r\n        uriTokens.push(components.scheme);\r\n        uriTokens.push(\":\");\r\n    }\r\n    const authority = _recomposeAuthority(components, options);\r\n    if (authority !== undefined) {\r\n        if (options.reference !== \"suffix\") {\r\n            uriTokens.push(\"//\");\r\n        }\r\n        uriTokens.push(authority);\r\n        if (components.path && components.path.charAt(0) !== \"/\") {\r\n            uriTokens.push(\"/\");\r\n        }\r\n    }\r\n    if (components.path !== undefined) {\r\n        let s = components.path;\r\n        if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\r\n            s = removeDotSegments(s);\r\n        }\r\n        if (authority === undefined) {\r\n            s = s.replace(/^\\/\\//, \"/%2F\"); //don't allow the path to start with \"//\"\r\n        }\r\n        uriTokens.push(s);\r\n    }\r\n    if (components.query !== undefined) {\r\n        uriTokens.push(\"?\");\r\n        uriTokens.push(components.query);\r\n    }\r\n    if (components.fragment !== undefined) {\r\n        uriTokens.push(\"#\");\r\n        uriTokens.push(components.fragment);\r\n    }\r\n    return uriTokens.join(\"\"); //merge tokens into a string\r\n}\r\n;\r\nexport function resolveComponents(base, relative, options = {}, skipNormalization) {\r\n    const target = {};\r\n    if (!skipNormalization) {\r\n        base = parse(serialize(base, options), options); //normalize base components\r\n        relative = parse(serialize(relative, options), options); //normalize relative components\r\n    }\r\n    options = options || {};\r\n    if (!options.tolerant && relative.scheme) {\r\n        target.scheme = relative.scheme;\r\n        //target.authority = relative.authority;\r\n        target.userinfo = relative.userinfo;\r\n        target.host = relative.host;\r\n        target.port = relative.port;\r\n        target.path = removeDotSegments(relative.path || \"\");\r\n        target.query = relative.query;\r\n    }\r\n    else {\r\n        if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\r\n            //target.authority = relative.authority;\r\n            target.userinfo = relative.userinfo;\r\n            target.host = relative.host;\r\n            target.port = relative.port;\r\n            target.path = removeDotSegments(relative.path || \"\");\r\n            target.query = relative.query;\r\n        }\r\n        else {\r\n            if (!relative.path) {\r\n                target.path = base.path;\r\n                if (relative.query !== undefined) {\r\n                    target.query = relative.query;\r\n                }\r\n                else {\r\n                    target.query = base.query;\r\n                }\r\n            }\r\n            else {\r\n                if (relative.path.charAt(0) === \"/\") {\r\n                    target.path = removeDotSegments(relative.path);\r\n                }\r\n                else {\r\n                    if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\r\n                        target.path = \"/\" + relative.path;\r\n                    }\r\n                    else if (!base.path) {\r\n                        target.path = relative.path;\r\n                    }\r\n                    else {\r\n                        target.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\r\n                    }\r\n                    target.path = removeDotSegments(target.path);\r\n                }\r\n                target.query = relative.query;\r\n            }\r\n            //target.authority = base.authority;\r\n            target.userinfo = base.userinfo;\r\n            target.host = base.host;\r\n            target.port = base.port;\r\n        }\r\n        target.scheme = base.scheme;\r\n    }\r\n    target.fragment = relative.fragment;\r\n    return target;\r\n}\r\n;\r\nexport function resolve(baseURI, relativeURI, options) {\r\n    return serialize(resolveComponents(parse(baseURI, options), parse(relativeURI, options), options, true), options);\r\n}\r\n;\r\nexport function normalize(uri, options) {\r\n    if (typeof uri === \"string\") {\r\n        uri = serialize(parse(uri, options), options);\r\n    }\r\n    else if (typeOf(uri) === \"object\") {\r\n        uri = parse(serialize(uri, options), options);\r\n    }\r\n    return uri;\r\n}\r\n;\r\nexport function equal(uriA, uriB, options) {\r\n    if (typeof uriA === \"string\") {\r\n        uriA = serialize(parse(uriA, options), options);\r\n    }\r\n    else if (typeOf(uriA) === \"object\") {\r\n        uriA = serialize(uriA, options);\r\n    }\r\n    if (typeof uriB === \"string\") {\r\n        uriB = serialize(parse(uriB, options), options);\r\n    }\r\n    else if (typeOf(uriB) === \"object\") {\r\n        uriB = serialize(uriB, options);\r\n    }\r\n    return uriA === uriB;\r\n}\r\n;\r\nexport function escapeComponent(str, options) {\r\n    return str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\r\n}\r\n;\r\nexport function unescapeComponent(str, options) {\r\n    return str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\r\n}\r\n;\r\n//# sourceMappingURL=uri.js.map","export default {\r\n    scheme: \"http\",\r\n    domainHost: true,\r\n    parse: function (components, options) {\r\n        //report missing host\r\n        if (!components.host) {\r\n            components.error = components.error || \"HTTP URIs must have a host.\";\r\n        }\r\n        return components;\r\n    },\r\n    serialize: function (components, options) {\r\n        //normalize the default port\r\n        if (components.port === (String(components.scheme).toLowerCase() !== \"https\" ? 80 : 443) || components.port === \"\") {\r\n            components.port = undefined;\r\n        }\r\n        //normalize the empty path\r\n        if (!components.path) {\r\n            components.path = \"/\";\r\n        }\r\n        //NOTE: We do not parse query strings for HTTP URIs\r\n        //as WWW Form Url Encoded query strings are part of the HTML4+ spec,\r\n        //and not the HTTP spec.\r\n        return components;\r\n    }\r\n};\r\n//# sourceMappingURL=http.js.map","import http from \"./http\";\r\nexport default {\r\n    scheme: \"https\",\r\n    domainHost: http.domainHost,\r\n    parse: http.parse,\r\n    serialize: http.serialize\r\n};\r\n//# sourceMappingURL=https.js.map","import { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\r\nimport punycode from \"punycode\";\r\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\r\nconst O = {};\r\nconst isIRI = true;\r\n//RFC 3986\r\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\r\nconst HEXDIG$$ = \"[0-9A-Fa-f]\"; //case-insensitive\r\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)); //expanded\r\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\r\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\r\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\r\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\r\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\r\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\r\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\r\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\r\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\r\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\r\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\r\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\r\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\r\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\r\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\r\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\r\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\r\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\r\n//RFC 6068\r\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\"; //%d33-90 / %d94-126\r\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\r\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\r\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\r\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\r\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\r\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\r\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\r\nconst HFVALUE$ = HFNAME$;\r\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\r\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\r\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\r\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\r\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\r\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\r\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\r\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\r\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\r\nconst NOT_HFVALUE = NOT_HFNAME;\r\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\r\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\r\nfunction decodeUnreserved(str) {\r\n    const decStr = pctDecChars(str);\r\n    return (!decStr.match(UNRESERVED) ? str : decStr);\r\n}\r\nexport default {\r\n    scheme: \"mailto\",\r\n    parse: function (components, options) {\r\n        const to = components.to = (components.path ? components.path.split(\",\") : []);\r\n        components.path = undefined;\r\n        if (components.query) {\r\n            let unknownHeaders = false;\r\n            const headers = {};\r\n            const hfields = components.query.split(\"&\");\r\n            for (let x = 0, xl = hfields.length; x < xl; ++x) {\r\n                const hfield = hfields[x].split(\"=\");\r\n                switch (hfield[0]) {\r\n                    case \"to\":\r\n                        const toAddrs = hfield[1].split(\",\");\r\n                        for (let x = 0, xl = toAddrs.length; x < xl; ++x) {\r\n                            to.push(toAddrs[x]);\r\n                        }\r\n                        break;\r\n                    case \"subject\":\r\n                        components.subject = unescapeComponent(hfield[1], options);\r\n                        break;\r\n                    case \"body\":\r\n                        components.body = unescapeComponent(hfield[1], options);\r\n                        break;\r\n                    default:\r\n                        unknownHeaders = true;\r\n                        headers[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\r\n                        break;\r\n                }\r\n            }\r\n            if (unknownHeaders)\r\n                components.headers = headers;\r\n        }\r\n        components.query = undefined;\r\n        for (let x = 0, xl = to.length; x < xl; ++x) {\r\n            const addr = to[x].split(\"@\");\r\n            addr[0] = unescapeComponent(addr[0]);\r\n            if (!options.unicodeSupport) {\r\n                //convert Unicode IDN -> ASCII IDN\r\n                try {\r\n                    addr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\r\n                }\r\n                catch (e) {\r\n                    components.error = components.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\r\n                }\r\n            }\r\n            else {\r\n                addr[1] = unescapeComponent(addr[1], options).toLowerCase();\r\n            }\r\n            to[x] = addr.join(\"@\");\r\n        }\r\n        return components;\r\n    },\r\n    serialize: function (components, options) {\r\n        const to = toArray(components.to);\r\n        if (to) {\r\n            for (let x = 0, xl = to.length; x < xl; ++x) {\r\n                const toAddr = String(to[x]);\r\n                const atIdx = toAddr.lastIndexOf(\"@\");\r\n                const localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\r\n                let domain = toAddr.slice(atIdx + 1);\r\n                //convert IDN via punycode\r\n                try {\r\n                    domain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\r\n                }\r\n                catch (e) {\r\n                    components.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\r\n                }\r\n                to[x] = localPart + \"@\" + domain;\r\n            }\r\n            components.path = to.join(\",\");\r\n        }\r\n        const headers = components.headers = components.headers || {};\r\n        if (components.subject)\r\n            headers[\"subject\"] = components.subject;\r\n        if (components.body)\r\n            headers[\"body\"] = components.body;\r\n        const fields = [];\r\n        for (const name in headers) {\r\n            if (headers[name] !== O[name]) {\r\n                fields.push(name.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\r\n                    \"=\" +\r\n                    headers[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar));\r\n            }\r\n        }\r\n        if (fields.length) {\r\n            components.query = fields.join(\"&\");\r\n        }\r\n        return components;\r\n    }\r\n};\r\n//# sourceMappingURL=mailto.js.map","import { pctEncChar, SCHEMES } from \"../uri\";\r\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\r\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\r\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\r\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\r\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\r\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\r\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\r\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\r\n//RFC 2141\r\nexport default {\r\n    scheme: \"urn\",\r\n    parse: function (components, options) {\r\n        const matches = components.path && components.path.match(URN_PARSE);\r\n        if (matches) {\r\n            const scheme = \"urn:\" + matches[1].toLowerCase();\r\n            let schemeHandler = SCHEMES[scheme];\r\n            //in order to serialize properly,\r\n            //every URN must have a serializer that calls the URN serializer\r\n            if (!schemeHandler) {\r\n                //create fake scheme handler\r\n                schemeHandler = SCHEMES[scheme] = {\r\n                    scheme: scheme,\r\n                    parse: function (components, options) {\r\n                        return components;\r\n                    },\r\n                    serialize: SCHEMES[\"urn\"].serialize\r\n                };\r\n            }\r\n            components.scheme = scheme;\r\n            components.path = matches[2];\r\n            components = schemeHandler.parse(components, options);\r\n        }\r\n        else {\r\n            components.error = components.error || \"URN can not be parsed.\";\r\n        }\r\n        return components;\r\n    },\r\n    serialize: function (components, options) {\r\n        const scheme = components.scheme || options.scheme;\r\n        if (scheme && scheme !== \"urn\") {\r\n            const matches = scheme.match(URN_SCHEME) || [\"urn:\" + scheme, scheme];\r\n            components.scheme = \"urn\";\r\n            components.path = matches[1] + \":\" + (components.path ? components.path.replace(URN_EXCLUDED, pctEncChar) : \"\");\r\n        }\r\n        return components;\r\n    }\r\n};\r\n//# sourceMappingURL=urn.js.map","import { SCHEMES } from \"../uri\";\r\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\r\n//RFC 4122\r\nexport default {\r\n    scheme: \"urn:uuid\",\r\n    parse: function (components, options) {\r\n        if (!options.tolerant && (!components.path || !components.path.match(UUID))) {\r\n            components.error = components.error || \"UUID is not valid.\";\r\n        }\r\n        return components;\r\n    },\r\n    serialize: function (components, options) {\r\n        //ensure UUID is valid\r\n        if (!options.tolerant && (!components.path || !components.path.match(UUID))) {\r\n            //invalid UUIDs can not have this scheme\r\n            components.scheme = undefined;\r\n        }\r\n        else {\r\n            //normalize UUID\r\n            components.path = (components.path || \"\").toLowerCase();\r\n        }\r\n        return SCHEMES[\"urn\"].serialize(components, options);\r\n    }\r\n};\r\n//# sourceMappingURL=urn-uuid.js.map","import { SCHEMES } from \"./uri\";\r\nimport http from \"./schemes/http\";\r\nSCHEMES[\"http\"] = http;\r\nimport https from \"./schemes/https\";\r\nSCHEMES[\"https\"] = https;\r\nimport mailto from \"./schemes/mailto\";\r\nSCHEMES[\"mailto\"] = mailto;\r\nimport urn from \"./schemes/urn\";\r\nSCHEMES[\"urn\"] = urn;\r\nimport uuid from \"./schemes/urn-uuid\";\r\nSCHEMES[\"urn:uuid\"] = uuid;\r\nexport * from \"./uri\";\r\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  var arrA = isArray(a)\n    , arrB = isArray(b)\n    , i\n    , length\n    , key;\n\n  if (arrA && arrB) {\n    length = a.length;\n    if (length != b.length) return false;\n    for (i = 0; i < length; i++)\n      if (!equal(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  var dateA = a instanceof Date\n    , dateB = b instanceof Date;\n  if (dateA != dateB) return false;\n  if (dateA && dateB) return a.getTime() == b.getTime();\n\n  var regexpA = a instanceof RegExp\n    , regexpB = b instanceof RegExp;\n  if (regexpA != regexpB) return false;\n  if (regexpA && regexpB) return a.toString() == b.toString();\n\n  if (a instanceof Object && b instanceof Object) {\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = 0; i < length; i++)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n","'use strict';\n\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nmodule.exports = function ucs2length(str) {\n  var length = 0\n    , len = str.length\n    , pos = 0\n    , value;\n  while (pos < len) {\n    length++;\n    value = str.charCodeAt(pos++);\n    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos);\n      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate\n    }\n  }\n  return length;\n};\n","'use strict';\n\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: require('fast-deep-equal'),\n  ucs2length: require('./ucs2length'),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  cleanUpCode: cleanUpCode,\n  finalCleanUpCode: finalCleanUpCode,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  unescapeJsonPointer: unescapeJsonPointer,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\n\nfunction copy(o, to) {\n  to = to || {};\n  for (var key in o) to[key] = o[key];\n  return to;\n}\n\n\nfunction checkDataType(dataType, data, negate) {\n  var EQUAL = negate ? ' !== ' : ' === '\n    , AND = negate ? ' || ' : ' && '\n    , OK = negate ? '!' : ''\n    , NOT = negate ? '' : '!';\n  switch (dataType) {\n    case 'null': return data + EQUAL + 'null';\n    case 'array': return OK + 'Array.isArray(' + data + ')';\n    case 'object': return '(' + OK + data + AND +\n                          'typeof ' + data + EQUAL + '\"object\"' + AND +\n                          NOT + 'Array.isArray(' + data + '))';\n    case 'integer': return '(typeof ' + data + EQUAL + '\"number\"' + AND +\n                           NOT + '(' + data + ' % 1)' +\n                           AND + data + EQUAL + data + ')';\n    default: return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\n\nfunction checkDataTypes(dataTypes, data) {\n  switch (dataTypes.length) {\n    case 1: return checkDataType(dataTypes[0], data, true);\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n      if (types.array && types.object) {\n        code = types.null ? '(': '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n      if (types.number) delete types.integer;\n      for (var t in types)\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, true);\n\n      return code;\n  }\n}\n\n\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n    for (var i=0; i<dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\n\nfunction toHash(arr) {\n  var hash = {};\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\n  return hash;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return typeof key == 'number'\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + escapeQuotes(key) + \"']\";\n}\n\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\t/g, '\\\\t');\n}\n\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\n\nvar EMPTY_ELSE = /else\\s*{\\s*}/g\n  , EMPTY_IF_NO_ELSE = /if\\s*\\([^)]+\\)\\s*\\{\\s*\\}(?!\\s*else)/g\n  , EMPTY_IF_WITH_ELSE = /if\\s*\\(([^)]+)\\)\\s*\\{\\s*\\}\\s*else(?!\\s*if)/g;\nfunction cleanUpCode(out) {\n  return out.replace(EMPTY_ELSE, '')\n            .replace(EMPTY_IF_NO_ELSE, '')\n            .replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');\n}\n\n\nvar ERRORS_REGEXP = /[^v.]errors/g\n  , REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g\n  , REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g\n  , RETURN_VALID = 'return errors === 0;'\n  , RETURN_TRUE = 'validate.errors = null; return true;'\n  , RETURN_ASYNC = /if \\(errors === 0\\) return data;\\s*else throw new ValidationError\\(vErrors\\);/\n  , RETURN_DATA_ASYNC = 'return data;'\n  , ROOTDATA_REGEXP = /[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g\n  , REMOVE_ROOTDATA = /if \\(rootData === undefined\\) rootData = data;/;\n\nfunction finalCleanUpCode(out, async) {\n  var matches = out.match(ERRORS_REGEXP);\n  if (matches && matches.length == 2) {\n    out = async\n          ? out.replace(REMOVE_ERRORS_ASYNC, '')\n               .replace(RETURN_ASYNC, RETURN_DATA_ASYNC)\n          : out.replace(REMOVE_ERRORS, '')\n               .replace(RETURN_VALID, RETURN_TRUE);\n  }\n\n  matches = out.match(ROOTDATA_REGEXP);\n  if (!matches || matches.length !== 3) return out;\n  return out.replace(REMOVE_ROOTDATA, '');\n}\n\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n  for (var key in schema) if (rules[key]) return true;\n}\n\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n              ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')')\n              : (isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'');\n  return joinPaths(currentPath, path);\n}\n\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n              ? toQuotedString('/' + escapeJsonPointer(prop))\n              : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + ((lvl - up) || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=0; i<segments.length; i++) {\n    var segment = segments[i];\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n  return expr;\n}\n\n\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/' \\+ '/g, '');\n}\n\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n","'use strict';\n\nvar util = require('./util');\n\nmodule.exports = SchemaObject;\n\nfunction SchemaObject(obj) {\n  util.copy(obj, this);\n}\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n  _traverse(opts, cb, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, cb, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    cb(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, cb, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, cb, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, cb, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","'use strict';\n\nvar URI = require('uri-js')\n  , equal = require('fast-deep-equal')\n  , util = require('./util')\n  , SchemaObject = require('./schema_obj')\n  , traverse = require('json-schema-traverse');\n\nmodule.exports = resolve;\n\nresolve.normalizeId = normalizeId;\nresolve.fullPath = getFullPath;\nresolve.url = resolveUrl;\nresolve.ids = resolveIds;\nresolve.inlineRef = inlineRef;\nresolve.schema = resolveSchema;\n\n/**\n * [resolve and compile the references ($ref)]\n * @this   Ajv\n * @param  {Function} compile reference to schema compilation funciton (localCompile)\n * @param  {Object} root object with information about the root schema for the current schema\n * @param  {String} ref reference to resolve\n * @return {Object|Function} schema object (if the schema can be inlined) or validation function\n */\nfunction resolve(compile, root, ref) {\n  /* jshint validthis: true */\n  var refVal = this._refs[ref];\n  if (typeof refVal == 'string') {\n    if (this._refs[refVal]) refVal = this._refs[refVal];\n    else return resolve.call(this, compile, root, refVal);\n  }\n\n  refVal = refVal || this._schemas[ref];\n  if (refVal instanceof SchemaObject) {\n    return inlineRef(refVal.schema, this._opts.inlineRefs)\n            ? refVal.schema\n            : refVal.validate || this._compile(refVal);\n  }\n\n  var res = resolveSchema.call(this, root, ref);\n  var schema, v, baseId;\n  if (res) {\n    schema = res.schema;\n    root = res.root;\n    baseId = res.baseId;\n  }\n\n  if (schema instanceof SchemaObject) {\n    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);\n  } else if (schema !== undefined) {\n    v = inlineRef(schema, this._opts.inlineRefs)\n        ? schema\n        : compile.call(this, schema, root, undefined, baseId);\n  }\n\n  return v;\n}\n\n\n/**\n * Resolve schema, its root and baseId\n * @this Ajv\n * @param  {Object} root root object with properties schema, refVal, refs\n * @param  {String} ref  reference to resolve\n * @return {Object} object with properties schema, root, baseId\n */\nfunction resolveSchema(root, ref) {\n  /* jshint validthis: true */\n  var p = URI.parse(ref)\n    , refPath = _getFullPath(p)\n    , baseId = getFullPath(this._getId(root.schema));\n  if (refPath !== baseId) {\n    var id = normalizeId(refPath);\n    var refVal = this._refs[id];\n    if (typeof refVal == 'string') {\n      return resolveRecursive.call(this, root, refVal, p);\n    } else if (refVal instanceof SchemaObject) {\n      if (!refVal.validate) this._compile(refVal);\n      root = refVal;\n    } else {\n      refVal = this._schemas[id];\n      if (refVal instanceof SchemaObject) {\n        if (!refVal.validate) this._compile(refVal);\n        if (id == normalizeId(ref))\n          return { schema: refVal, root: root, baseId: baseId };\n        root = refVal;\n      } else {\n        return;\n      }\n    }\n    if (!root.schema) return;\n    baseId = getFullPath(this._getId(root.schema));\n  }\n  return getJsonPointer.call(this, p, baseId, root.schema, root);\n}\n\n\n/* @this Ajv */\nfunction resolveRecursive(root, ref, parsedRef) {\n  /* jshint validthis: true */\n  var res = resolveSchema.call(this, root, ref);\n  if (res) {\n    var schema = res.schema;\n    var baseId = res.baseId;\n    root = res.root;\n    var id = this._getId(schema);\n    if (id) baseId = resolveUrl(baseId, id);\n    return getJsonPointer.call(this, parsedRef, baseId, schema, root);\n  }\n}\n\n\nvar PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);\n/* @this Ajv */\nfunction getJsonPointer(parsedRef, baseId, schema, root) {\n  /* jshint validthis: true */\n  parsedRef.fragment = parsedRef.fragment || '';\n  if (parsedRef.fragment.slice(0,1) != '/') return;\n  var parts = parsedRef.fragment.split('/');\n\n  for (var i = 1; i < parts.length; i++) {\n    var part = parts[i];\n    if (part) {\n      part = util.unescapeFragment(part);\n      schema = schema[part];\n      if (schema === undefined) break;\n      var id;\n      if (!PREVENT_SCOPE_CHANGE[part]) {\n        id = this._getId(schema);\n        if (id) baseId = resolveUrl(baseId, id);\n        if (schema.$ref) {\n          var $ref = resolveUrl(baseId, schema.$ref);\n          var res = resolveSchema.call(this, root, $ref);\n          if (res) {\n            schema = res.schema;\n            root = res.root;\n            baseId = res.baseId;\n          }\n        }\n      }\n    }\n  }\n  if (schema !== undefined && schema !== root.schema)\n    return { schema: schema, root: root, baseId: baseId };\n}\n\n\nvar SIMPLE_INLINED = util.toHash([\n  'type', 'format', 'pattern',\n  'maxLength', 'minLength',\n  'maxProperties', 'minProperties',\n  'maxItems', 'minItems',\n  'maximum', 'minimum',\n  'uniqueItems', 'multipleOf',\n  'required', 'enum'\n]);\nfunction inlineRef(schema, limit) {\n  if (limit === false) return false;\n  if (limit === undefined || limit === true) return checkNoRef(schema);\n  else if (limit) return countKeys(schema) <= limit;\n}\n\n\nfunction checkNoRef(schema) {\n  var item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return false;\n      item = schema[key];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  }\n  return true;\n}\n\n\nfunction countKeys(schema) {\n  var count = 0, item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object') count += countKeys(item);\n      if (count == Infinity) return Infinity;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return Infinity;\n      if (SIMPLE_INLINED[key]) {\n        count++;\n      } else {\n        item = schema[key];\n        if (typeof item == 'object') count += countKeys(item) + 1;\n        if (count == Infinity) return Infinity;\n      }\n    }\n  }\n  return count;\n}\n\n\nfunction getFullPath(id, normalize) {\n  if (normalize !== false) id = normalizeId(id);\n  var p = URI.parse(id);\n  return _getFullPath(p);\n}\n\n\nfunction _getFullPath(p) {\n  return URI.serialize(p).split('#')[0] + '#';\n}\n\n\nvar TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';\n}\n\n\nfunction resolveUrl(baseId, id) {\n  id = normalizeId(id);\n  return URI.resolve(baseId, id);\n}\n\n\n/* @this Ajv */\nfunction resolveIds(schema) {\n  var schemaId = normalizeId(this._getId(schema));\n  var baseIds = {'': schemaId};\n  var fullPaths = {'': getFullPath(schemaId, false)};\n  var localRefs = {};\n  var self = this;\n\n  traverse(schema, {allKeys: true}, function(sch, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n    if (jsonPtr === '') return;\n    var id = self._getId(sch);\n    var baseId = baseIds[parentJsonPtr];\n    var fullPath = fullPaths[parentJsonPtr] + '/' + parentKeyword;\n    if (keyIndex !== undefined)\n      fullPath += '/' + (typeof keyIndex == 'number' ? keyIndex : util.escapeFragment(keyIndex));\n\n    if (typeof id == 'string') {\n      id = baseId = normalizeId(baseId ? URI.resolve(baseId, id) : id);\n\n      var refVal = self._refs[id];\n      if (typeof refVal == 'string') refVal = self._refs[refVal];\n      if (refVal && refVal.schema) {\n        if (!equal(sch, refVal.schema))\n          throw new Error('id \"' + id + '\" resolves to more than one schema');\n      } else if (id != normalizeId(fullPath)) {\n        if (id[0] == '#') {\n          if (localRefs[id] && !equal(sch, localRefs[id]))\n            throw new Error('id \"' + id + '\" resolves to more than one schema');\n          localRefs[id] = sch;\n        } else {\n          self._refs[id] = fullPath;\n        }\n      }\n    }\n    baseIds[jsonPtr] = baseId;\n    fullPaths[jsonPtr] = fullPath;\n  });\n\n  return localRefs;\n}\n","'use strict';\n\nvar resolve = require('./resolve');\n\nmodule.exports = {\n  Validation: errorSubclass(ValidationError),\n  MissingRef: errorSubclass(MissingRefError)\n};\n\n\nfunction ValidationError(errors) {\n  this.message = 'validation failed';\n  this.errors = errors;\n  this.ajv = this.validation = true;\n}\n\n\nMissingRefError.message = function (baseId, ref) {\n  return 'can\\'t resolve reference ' + ref + ' from id ' + baseId;\n};\n\n\nfunction MissingRefError(baseId, ref, message) {\n  this.message = message || MissingRefError.message(baseId, ref);\n  this.missingRef = resolve.url(baseId, ref);\n  this.missingSchema = resolve.normalizeId(resolve.fullPath(this.missingRef));\n}\n\n\nfunction errorSubclass(Subclass) {\n  Subclass.prototype = Object.create(Error.prototype);\n  Subclass.prototype.constructor = Subclass;\n  return Subclass;\n}\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","'use strict';\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.isTop) {\n    out += ' var validate = ';\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \\'array\\'; ';\n        }\n        out += ' var ' + ($coerced) + ' = undefined; ';\n        var $bracesCoercion = '';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($i) {\n              out += ' if (' + ($coerced) + ' === undefined) { ';\n              $bracesCoercion += '}';\n            }\n            if (it.opts.coerceTypes == 'array' && $type != 'array') {\n              out += ' if (' + ($dataType) + ' == \\'array\\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';\n            }\n            if ($type == 'string') {\n              out += ' if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';\n          }\n          if (it.opts.useDefaults && !it.compositeRule) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n  out = it.util.cleanUpCode(out);\n  if ($top) {\n    out = it.util.finalCleanUpCode(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n","'use strict';\n\nvar resolve = require('./resolve')\n  , util = require('./util')\n  , errorClasses = require('./error_classes')\n  , stableStringify = require('fast-json-stable-stringify');\n\nvar validateGenerator = require('../dotjs/validate');\n\n/**\n * Functions below are used inside compiled validations function\n */\n\nvar ucs2length = util.ucs2length;\nvar equal = require('fast-deep-equal');\n\n// this error is thrown by async schemas to return validation errors via exception\nvar ValidationError = errorClasses.Validation;\n\nmodule.exports = compile;\n\n\n/**\n * Compiles schema to validation function\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Object} root object with information about the root schema for this schema\n * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\n * @param  {String} baseId base ID for IDs in the schema\n * @return {Function} validation function\n */\nfunction compile(schema, root, localRefs, baseId) {\n  /* jshint validthis: true, evil: true */\n  /* eslint no-shadow: 0 */\n  var self = this\n    , opts = this._opts\n    , refVal = [ undefined ]\n    , refs = {}\n    , patterns = []\n    , patternsHash = {}\n    , defaults = []\n    , defaultsHash = {}\n    , customRules = [];\n\n  root = root || { schema: schema, refVal: refVal, refs: refs };\n\n  var c = checkCompiling.call(this, schema, root, baseId);\n  var compilation = this._compilations[c.index];\n  if (c.compiling) return (compilation.callValidate = callValidate);\n\n  var formats = this._formats;\n  var RULES = this.RULES;\n\n  try {\n    var v = localCompile(schema, root, localRefs, baseId);\n    compilation.validate = v;\n    var cv = compilation.callValidate;\n    if (cv) {\n      cv.schema = v.schema;\n      cv.errors = null;\n      cv.refs = v.refs;\n      cv.refVal = v.refVal;\n      cv.root = v.root;\n      cv.$async = v.$async;\n      if (opts.sourceCode) cv.source = v.source;\n    }\n    return v;\n  } finally {\n    endCompiling.call(this, schema, root, baseId);\n  }\n\n  function callValidate() {\n    var validate = compilation.validate;\n    var result = validate.apply(null, arguments);\n    callValidate.errors = validate.errors;\n    return result;\n  }\n\n  function localCompile(_schema, _root, localRefs, baseId) {\n    var isRoot = !_root || (_root && _root.schema == _schema);\n    if (_root.schema != root.schema)\n      return compile.call(self, _schema, _root, localRefs, baseId);\n\n    var $async = _schema.$async === true;\n\n    var sourceCode = validateGenerator({\n      isTop: true,\n      schema: _schema,\n      isRoot: isRoot,\n      baseId: baseId,\n      root: _root,\n      schemaPath: '',\n      errSchemaPath: '#',\n      errorPath: '\"\"',\n      MissingRefError: errorClasses.MissingRef,\n      RULES: RULES,\n      validate: validateGenerator,\n      util: util,\n      resolve: resolve,\n      resolveRef: resolveRef,\n      usePattern: usePattern,\n      useDefault: useDefault,\n      useCustomRule: useCustomRule,\n      opts: opts,\n      formats: formats,\n      logger: self.logger,\n      self: self\n    });\n\n    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\n                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\n                   + sourceCode;\n\n    if (opts.processCode) sourceCode = opts.processCode(sourceCode);\n    // console.log('\\n\\n\\n *** \\n', JSON.stringify(sourceCode));\n    var validate;\n    try {\n      var makeValidate = new Function(\n        'self',\n        'RULES',\n        'formats',\n        'root',\n        'refVal',\n        'defaults',\n        'customRules',\n        'equal',\n        'ucs2length',\n        'ValidationError',\n        sourceCode\n      );\n\n      validate = makeValidate(\n        self,\n        RULES,\n        formats,\n        root,\n        refVal,\n        defaults,\n        customRules,\n        equal,\n        ucs2length,\n        ValidationError\n      );\n\n      refVal[0] = validate;\n    } catch(e) {\n      self.logger.error('Error compiling schema, function code:', sourceCode);\n      throw e;\n    }\n\n    validate.schema = _schema;\n    validate.errors = null;\n    validate.refs = refs;\n    validate.refVal = refVal;\n    validate.root = isRoot ? validate : _root;\n    if ($async) validate.$async = true;\n    if (opts.sourceCode === true) {\n      validate.source = {\n        code: sourceCode,\n        patterns: patterns,\n        defaults: defaults\n      };\n    }\n\n    return validate;\n  }\n\n  function resolveRef(baseId, ref, isRoot) {\n    ref = resolve.url(baseId, ref);\n    var refIndex = refs[ref];\n    var _refVal, refCode;\n    if (refIndex !== undefined) {\n      _refVal = refVal[refIndex];\n      refCode = 'refVal[' + refIndex + ']';\n      return resolvedRef(_refVal, refCode);\n    }\n    if (!isRoot && root.refs) {\n      var rootRefId = root.refs[ref];\n      if (rootRefId !== undefined) {\n        _refVal = root.refVal[rootRefId];\n        refCode = addLocalRef(ref, _refVal);\n        return resolvedRef(_refVal, refCode);\n      }\n    }\n\n    refCode = addLocalRef(ref);\n    var v = resolve.call(self, localCompile, root, ref);\n    if (v === undefined) {\n      var localSchema = localRefs && localRefs[ref];\n      if (localSchema) {\n        v = resolve.inlineRef(localSchema, opts.inlineRefs)\n            ? localSchema\n            : compile.call(self, localSchema, root, localRefs, baseId);\n      }\n    }\n\n    if (v === undefined) {\n      removeLocalRef(ref);\n    } else {\n      replaceLocalRef(ref, v);\n      return resolvedRef(v, refCode);\n    }\n  }\n\n  function addLocalRef(ref, v) {\n    var refId = refVal.length;\n    refVal[refId] = v;\n    refs[ref] = refId;\n    return 'refVal' + refId;\n  }\n\n  function removeLocalRef(ref) {\n    delete refs[ref];\n  }\n\n  function replaceLocalRef(ref, v) {\n    var refId = refs[ref];\n    refVal[refId] = v;\n  }\n\n  function resolvedRef(refVal, code) {\n    return typeof refVal == 'object' || typeof refVal == 'boolean'\n            ? { code: code, schema: refVal, inline: true }\n            : { code: code, $async: refVal && !!refVal.$async };\n  }\n\n  function usePattern(regexStr) {\n    var index = patternsHash[regexStr];\n    if (index === undefined) {\n      index = patternsHash[regexStr] = patterns.length;\n      patterns[index] = regexStr;\n    }\n    return 'pattern' + index;\n  }\n\n  function useDefault(value) {\n    switch (typeof value) {\n      case 'boolean':\n      case 'number':\n        return '' + value;\n      case 'string':\n        return util.toQuotedString(value);\n      case 'object':\n        if (value === null) return 'null';\n        var valueStr = stableStringify(value);\n        var index = defaultsHash[valueStr];\n        if (index === undefined) {\n          index = defaultsHash[valueStr] = defaults.length;\n          defaults[index] = value;\n        }\n        return 'default' + index;\n    }\n  }\n\n  function useCustomRule(rule, schema, parentSchema, it) {\n    var validateSchema = rule.definition.validateSchema;\n    if (validateSchema && self._opts.validateSchema !== false) {\n      var valid = validateSchema(schema);\n      if (!valid) {\n        var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\n        if (self._opts.validateSchema == 'log') self.logger.error(message);\n        else throw new Error(message);\n      }\n    }\n\n    var compile = rule.definition.compile\n      , inline = rule.definition.inline\n      , macro = rule.definition.macro;\n\n    var validate;\n    if (compile) {\n      validate = compile.call(self, schema, parentSchema, it);\n    } else if (macro) {\n      validate = macro.call(self, schema, parentSchema, it);\n      if (opts.validateSchema !== false) self.validateSchema(validate, true);\n    } else if (inline) {\n      validate = inline.call(self, it, rule.keyword, schema, parentSchema);\n    } else {\n      validate = rule.definition.validate;\n      if (!validate) return;\n    }\n\n    if (validate === undefined)\n      throw new Error('custom keyword \"' + rule.keyword + '\"failed to compile');\n\n    var index = customRules.length;\n    customRules[index] = validate;\n\n    return {\n      code: 'customRule' + index,\n      validate: validate\n    };\n  }\n}\n\n\n/**\n * Checks if the schema is currently compiled\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Object} object with properties \"index\" (compilation index) and \"compiling\" (boolean)\n */\nfunction checkCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var index = compIndex.call(this, schema, root, baseId);\n  if (index >= 0) return { index: index, compiling: true };\n  index = this._compilations.length;\n  this._compilations[index] = {\n    schema: schema,\n    root: root,\n    baseId: baseId\n  };\n  return { index: index, compiling: false };\n}\n\n\n/**\n * Removes the schema from the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n */\nfunction endCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var i = compIndex.call(this, schema, root, baseId);\n  if (i >= 0) this._compilations.splice(i, 1);\n}\n\n\n/**\n * Index of schema compilation in the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Integer} compilation index\n */\nfunction compIndex(schema, root, baseId) {\n  /* jshint validthis: true */\n  for (var i=0; i<this._compilations.length; i++) {\n    var c = this._compilations[i];\n    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\n  }\n  return -1;\n}\n\n\nfunction patternCode(i, patterns) {\n  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\n}\n\n\nfunction defaultCode(i) {\n  return 'var default' + i + ' = defaults[' + i + '];';\n}\n\n\nfunction refValCode(i, refVal) {\n  return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';\n}\n\n\nfunction customRuleCode(i) {\n  return 'var customRule' + i + ' = customRules[' + i + '];';\n}\n\n\nfunction vars(arr, statement) {\n  if (!arr.length) return '';\n  var code = '';\n  for (var i=0; i<arr.length; i++)\n    code += statement(i, arr);\n  return code;\n}\n","'use strict';\n\n\nvar Cache = module.exports = function Cache() {\n  this._cache = {};\n};\n\n\nCache.prototype.put = function Cache_put(key, value) {\n  this._cache[key] = value;\n};\n\n\nCache.prototype.get = function Cache_get(key) {\n  return this._cache[key];\n};\n\n\nCache.prototype.del = function Cache_del(key) {\n  delete this._cache[key];\n};\n\n\nCache.prototype.clear = function Cache_clear() {\n  this._cache = {};\n};\n","'use strict';\n\nvar util = require('./util');\n\nvar DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nvar DAYS = [0,31,28,31,30,31,30,31,31,30,31,30,31];\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d:\\d\\d)?$/i;\nvar HOSTNAME = /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i;\nvar URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nvar URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nvar URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\n// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.\n// var URL = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nvar URL = /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i;\nvar UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nvar JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nvar JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nvar RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\n\n\nmodule.exports = formats;\n\nfunction formats(mode) {\n  mode = mode == 'full' ? 'full' : 'fast';\n  return util.copy(formats[mode]);\n}\n\n\nformats.fast = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)$/i,\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n  hostname: HOSTNAME,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: UUID,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nformats.full = {\n  date: date,\n  time: time,\n  'date-time': date_time,\n  uri: uri,\n  'uri-reference': URIREF,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&''*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: hostname,\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  uuid: UUID,\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nfunction isLeapYear(year) {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\n\nfunction date(str) {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  var matches = str.match(DATE);\n  if (!matches) return false;\n\n  var year = +matches[1];\n  var month = +matches[2];\n  var day = +matches[3];\n\n  return month >= 1 && month <= 12 && day >= 1 &&\n          day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]);\n}\n\n\nfunction time(str, full) {\n  var matches = str.match(TIME);\n  if (!matches) return false;\n\n  var hour = matches[1];\n  var minute = matches[2];\n  var second = matches[3];\n  var timeZone = matches[5];\n  return ((hour <= 23 && minute <= 59 && second <= 59) ||\n          (hour == 23 && minute == 59 && second == 60)) &&\n         (!full || timeZone);\n}\n\n\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n  // http://tools.ietf.org/html/rfc3339#section-5.6\n  var dateTime = str.split(DATE_TIME_SEPARATOR);\n  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);\n}\n\n\nfunction hostname(str) {\n  // https://tools.ietf.org/html/rfc1034#section-3.5\n  // https://tools.ietf.org/html/rfc1123#section-2\n  return str.length <= 255 && HOSTNAME.test(str);\n}\n\n\nvar NOT_URI_FRAGMENT = /\\/|:/;\nfunction uri(str) {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\n\n\nvar Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return false;\n  try {\n    new RegExp(str);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n","'use strict';\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + ($valid) + '; ';\n      }\n      out += ' try { await ' + (__callValidate) + '; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_allOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_anyOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $noEmptySchema = $schema.every(function($sch) {\n    return it.util.schemaHasRules($sch, it.RULES.all);\n  });\n  if ($noEmptySchema) {\n    var $currentBaseId = $it.baseId;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('anyOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match some schema in anyOf\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n    out = it.util.cleanUpCode(out);\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_comment(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $comment = it.util.toQuotedString($schema);\n  if (it.opts.$comment === true) {\n    out += ' console.log(' + ($comment) + ');';\n  } else if (typeof it.opts.$comment == 'function') {\n    out += ' self._opts.$comment(' + ($comment) + ', ' + (it.util.toQuotedString($errSchemaPath)) + ', validate.root.schema);';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_const(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!$isData) {\n    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('const') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValue: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to constant\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_contains(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId,\n    $nonEmptySchema = it.util.schemaHasRules($schema, it.RULES.all);\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($nonEmptySchema) {\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    out += ' if (' + ($nextValid) + ') break; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';\n  } else {\n    out += ' if (' + ($data) + '.length == 0) {';\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('contains') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should contain a valid item\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } else { ';\n  if ($nonEmptySchema) {\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n  }\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_dependencies(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $schemaDeps = {},\n    $propertyDeps = {},\n    $ownProperties = it.opts.ownProperties;\n  for ($property in $schema) {\n    var $sch = $schema[$property];\n    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;\n    $deps[$property] = $sch;\n  }\n  out += 'var ' + ($errs) + ' = errors;';\n  var $currentErrorPath = it.errorPath;\n  out += 'var missing' + ($lvl) + ';';\n  for (var $property in $propertyDeps) {\n    $deps = $propertyDeps[$property];\n    if ($deps.length) {\n      out += ' if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      if ($breakOnError) {\n        out += ' && ( ';\n        var arr1 = $deps;\n        if (arr1) {\n          var $propertyKey, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $propertyKey = arr1[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ')) {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should have ';\n            if ($deps.length == 1) {\n              out += 'property ' + (it.util.escapeQuotes($deps[0]));\n            } else {\n              out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n            }\n            out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      } else {\n        out += ' ) { ';\n        var arr2 = $deps;\n        if (arr2) {\n          var $propertyKey, i2 = -1,\n            l2 = arr2.length - 1;\n          while (i2 < l2) {\n            $propertyKey = arr2[i2 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should have ';\n                if ($deps.length == 1) {\n                  out += 'property ' + (it.util.escapeQuotes($deps[0]));\n                } else {\n                  out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n                }\n                out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n      out += ' }   ';\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n  it.errorPath = $currentErrorPath;\n  var $currentBaseId = $it.baseId;\n  for (var $property in $schemaDeps) {\n    var $sch = $schemaDeps[$property];\n    if (it.util.schemaHasRules($sch, it.RULES.all)) {\n      out += ' ' + ($nextValid) + ' = true; if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      out += ') { ';\n      $it.schema = $sch;\n      $it.schemaPath = $schemaPath + it.util.getProperty($property);\n      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_enum(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $i = 'i' + $lvl,\n    $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ';';\n  if ($isData) {\n    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n  }\n  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';\n  if ($isData) {\n    out += '  }  ';\n  }\n  out += ' if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('enum') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to one of the allowed values\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_format(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.opts.format === false) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n    return out;\n  }\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $unknownFormats = it.opts.unknownFormats,\n    $allowUnknown = Array.isArray($unknownFormats);\n  if ($isData) {\n    var $format = 'format' + $lvl,\n      $isObject = 'isObject' + $lvl,\n      $formatType = 'formatType' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \\'object\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \\'string\\'; if (' + ($isObject) + ') { ';\n    if (it.async) {\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\n    }\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n    }\n    out += ' (';\n    if ($unknownFormats != 'ignore') {\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\n      if ($allowUnknown) {\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\n      }\n      out += ') || ';\n    }\n    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \\'' + ($ruleType) + '\\' && !(typeof ' + ($format) + ' == \\'function\\' ? ';\n    if (it.async) {\n      out += ' (async' + ($lvl) + ' ? await ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\n    } else {\n      out += ' ' + ($format) + '(' + ($data) + ') ';\n    }\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\n  } else {\n    var $format = it.formats[$schema];\n    if (!$format) {\n      if ($unknownFormats == 'ignore') {\n        it.logger.warn('unknown format \"' + $schema + '\" ignored in schema at path \"' + it.errSchemaPath + '\"');\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else {\n        throw new Error('unknown format \"' + $schema + '\" is used in schema at path \"' + it.errSchemaPath + '\"');\n      }\n    }\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\n    var $formatType = $isObject && $format.type || 'string';\n    if ($isObject) {\n      var $async = $format.async === true;\n      $format = $format.validate;\n    }\n    if ($formatType != $ruleType) {\n      if ($breakOnError) {\n        out += ' if (true) { ';\n      }\n      return out;\n    }\n    if ($async) {\n      if (!it.async) throw new Error('async format in sync schema');\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\n      out += ' if (!(await ' + ($formatRef) + '(' + ($data) + '))) { ';\n    } else {\n      out += ' if (! ';\n      var $formatRef = 'formats' + it.util.getProperty($schema);\n      if ($isObject) $formatRef += '.validate';\n      if (typeof $format == 'function') {\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\n      } else {\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\n      }\n      out += ') { ';\n    }\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('format') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match format \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_if(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $thenSch = it.schema['then'],\n    $elseSch = it.schema['else'],\n    $thenPresent = $thenSch !== undefined && it.util.schemaHasRules($thenSch, it.RULES.all),\n    $elsePresent = $elseSch !== undefined && it.util.schemaHasRules($elseSch, it.RULES.all),\n    $currentBaseId = $it.baseId;\n  if ($thenPresent || $elsePresent) {\n    var $ifClause;\n    $it.createErrors = false;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = true;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    out += '  ' + (it.validate($it)) + ' ';\n    $it.baseId = $currentBaseId;\n    $it.createErrors = true;\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    if ($thenPresent) {\n      out += ' if (' + ($nextValid) + ') {  ';\n      $it.schema = it.schema['then'];\n      $it.schemaPath = it.schemaPath + '.then';\n      $it.errSchemaPath = it.errSchemaPath + '/then';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'then\\'; ';\n      } else {\n        $ifClause = '\\'then\\'';\n      }\n      out += ' } ';\n      if ($elsePresent) {\n        out += ' else { ';\n      }\n    } else {\n      out += ' if (!' + ($nextValid) + ') { ';\n    }\n    if ($elsePresent) {\n      $it.schema = it.schema['else'];\n      $it.schemaPath = it.schemaPath + '.else';\n      $it.errSchemaPath = it.errSchemaPath + '/else';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'else\\'; ';\n      } else {\n        $ifClause = '\\'else\\'';\n      }\n      out += ' } ';\n    }\n    out += ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('if') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { failingKeyword: ' + ($ifClause) + ' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match \"\\' + ' + ($ifClause) + ' + \\'\" schema\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' }   ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n    out = it.util.cleanUpCode(out);\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_items(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId;\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if (Array.isArray($schema)) {\n    var $additionalItems = it.schema.additionalItems;\n    if ($additionalItems === false) {\n      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';\n      var $currErrSchemaPath = $errSchemaPath;\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += '  if (!' + ($valid) + ') {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('additionalItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should NOT have more than ' + ($schema.length) + ' items\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } ';\n      $errSchemaPath = $currErrSchemaPath;\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';\n          var $passData = $data + '[' + $i + ']';\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\n          $it.dataPathArr[$dataNxt] = $i;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n    if (typeof $additionalItems == 'object' && it.util.schemaHasRules($additionalItems, it.RULES.all)) {\n      $it.schema = $additionalItems;\n      $it.schemaPath = it.schemaPath + '.additionalItems';\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n      var $passData = $data + '[' + $idx + ']';\n      $it.dataPathArr[$dataNxt] = $idx;\n      var $code = it.validate($it);\n      $it.baseId = $currentBaseId;\n      if (it.util.varOccurences($code, $nextData) < 2) {\n        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n      } else {\n        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n      }\n      if ($breakOnError) {\n        out += ' if (!' + ($nextValid) + ') break; ';\n      }\n      out += ' } }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  } else if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    if ($breakOnError) {\n      out += ' if (!' + ($nextValid) + ') break; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<',\n    $errorKeyword = undefined;\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $exclType = 'exclType' + $lvl,\n      $exclIsNumber = 'exclIsNumber' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \\'boolean\\' && ' + ($exclType) + ' != \\'undefined\\' && ' + ($exclType) + ' != \\'number\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($exclType) + ' == \\'number\\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\'; ';\n    if ($schema === undefined) {\n      $errorKeyword = $exclusiveKeyword;\n      $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n      $schemaValue = $schemaValueExcl;\n      $isData = $isDataExcl;\n    }\n  } else {\n    var $exclIsNumber = typeof $schemaExcl == 'number',\n      $opStr = $op;\n    if ($exclIsNumber && $isData) {\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';\n    } else {\n      if ($exclIsNumber && $schema === undefined) {\n        $exclusive = true;\n        $errorKeyword = $exclusiveKeyword;\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n        $schemaValue = $schemaExcl;\n        $notOp += '=';\n      } else {\n        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\n          $exclusive = true;\n          $errorKeyword = $exclusiveKeyword;\n          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n          $notOp += '=';\n        } else {\n          $exclusive = false;\n          $opStr += '=';\n        }\n      }\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';\n    }\n  }\n  $errorKeyword = $errorKeyword || $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxItems' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxItems') {\n        out += 'more';\n      } else {\n        out += 'less';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' items\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitLength(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxLength' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  if (it.opts.unicode === false) {\n    out += ' ' + ($data) + '.length ';\n  } else {\n    out += ' ucs2length(' + ($data) + ') ';\n  }\n  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitLength') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT be ';\n      if ($keyword == 'maxLength') {\n        out += 'longer';\n      } else {\n        out += 'shorter';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' characters\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitProperties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxProperties' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxProperties') {\n        out += 'more';\n      } else {\n        out += 'less';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' properties\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_multipleOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  out += 'var division' + ($lvl) + ';if (';\n  if ($isData) {\n    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \\'number\\' || ';\n  }\n  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';\n  if (it.opts.multipleOfPrecision) {\n    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';\n  } else {\n    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';\n  }\n  out += ' ) ';\n  if ($isData) {\n    out += '  )  ';\n  }\n  out += ' ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('multipleOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be multiple of ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $prevValid = 'prevValid' + $lvl,\n    $passingSchemas = 'passingSchemas' + $lvl;\n  out += 'var ' + ($errs) + ' = errors , ' + ($prevValid) + ' = false , ' + ($valid) + ' = false , ' + ($passingSchemas) + ' = null; ';\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + ($nextValid) + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + ($nextValid) + ' && ' + ($prevValid) + ') { ' + ($valid) + ' = false; ' + ($passingSchemas) + ' = [' + ($passingSchemas) + ', ' + ($i) + ']; } else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + ($nextValid) + ') { ' + ($valid) + ' = ' + ($prevValid) + ' = true; ' + ($passingSchemas) + ' = ' + ($i) + '; }';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('oneOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { passingSchemas: ' + ($passingSchemas) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; return false; ';\n    }\n  }\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_pattern(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n  }\n  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('pattern') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match pattern \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 8) {\n          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is an invalid additional property';\n              } else {\n                out += 'should NOT have additional properties';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr3 = $schemaKeys;\n    if (arr3) {\n      var $propertyKey, i3 = -1,\n        l3 = arr3.length - 1;\n      while (i3 < l3) {\n        $propertyKey = arr3[i3 += 1];\n        var $sch = $schema[$propertyKey];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr4 = $pPropertyKeys;\n    if (arr4) {\n      var $pProperty, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $pProperty = arr4[i4 += 1];\n        var $sch = $pProperties[$pProperty];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_propertyNames(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $i = 'i' + $lvl,\n      $invalidName = '\\' + ' + $key + ' + \\'',\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\n      $nextData = 'data' + $dataNxt,\n      $dataProperties = 'dataProperties' + $lvl,\n      $ownProperties = it.opts.ownProperties,\n      $currentBaseId = it.baseId;\n    out += ' var ' + ($errs) + ' = errors; ';\n    if ($ownProperties) {\n      out += ' var ' + ($dataProperties) + ' = undefined; ';\n    }\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    out += ' var startErrs' + ($lvl) + ' = errors; ';\n    var $passData = $key;\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('propertyNames') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \\'' + ($invalidName) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'property name \\\\\\'' + ($invalidName) + '\\\\\\' is invalid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    if ($breakOnError) {\n      out += ' break; ';\n    }\n    out += ' } }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_required(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {\n      var $required = [];\n      var arr1 = $schema;\n      if (arr1) {\n        var $property, i1 = -1,\n          l1 = arr1.length - 1;\n        while (i1 < l1) {\n          $property = arr1[i1 += 1];\n          var $propertySch = it.schema.properties[$property];\n          if (!($propertySch && it.util.schemaHasRules($propertySch, it.RULES.all))) {\n            $required[$required.length] = $property;\n          }\n        }\n      }\n    } else {\n      var $required = $schema;\n    }\n  }\n  if ($isData || $required.length) {\n    var $currentErrorPath = it.errorPath,\n      $loopRequired = $isData || $required.length >= it.opts.loopRequired,\n      $ownProperties = it.opts.ownProperties;\n    if ($breakOnError) {\n      out += ' var missing' + ($lvl) + '; ';\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        out += ' var ' + ($valid) + ' = true; ';\n        if ($isData) {\n          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined ';\n        if ($ownProperties) {\n          out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += '; if (!' + ($valid) + ') break; } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n        out += '  if (!' + ($valid) + ') {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      } else {\n        out += ' if ( ';\n        var arr2 = $required;\n        if (arr2) {\n          var $propertyKey, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $propertyKey = arr2[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ') {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      }\n    } else {\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        if ($isData) {\n          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is a required property';\n              } else {\n                out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined ';\n        if ($ownProperties) {\n          out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += ') {  var err =   '; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n      } else {\n        var arr3 = $required;\n        if (arr3) {\n          var $propertyKey, i3 = -1,\n            l3 = arr3.length - 1;\n          while (i3 < l3) {\n            $propertyKey = arr3[i3 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'';\n                if (it.opts._errorDataPathProperty) {\n                  out += 'is a required property';\n                } else {\n                  out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                }\n                out += '\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n    }\n    it.errorPath = $currentErrorPath;\n  } else if ($breakOnError) {\n    out += ' if (true) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\n    if ($isData) {\n      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'boolean\\') ' + ($valid) + ' = false; else { ';\n    }\n    out += ' var i = ' + ($data) + '.length , ' + ($valid) + ' = true , j; if (i > 1) { ';\n    var $itemType = it.schema.items && it.schema.items.type,\n      $typeIsArray = Array.isArray($itemType);\n    if (!$itemType || $itemType == 'object' || $itemType == 'array' || ($typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0))) {\n      out += ' outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } ';\n    } else {\n      out += ' var itemIndices = {}, item; for (;i--;) { var item = ' + ($data) + '[i]; ';\n      var $method = 'checkDataType' + ($typeIsArray ? 's' : '');\n      out += ' if (' + (it.util[$method]($itemType, 'item', true)) + ') continue; ';\n      if ($typeIsArray) {\n        out += ' if (typeof item == \\'string\\') item = \\'\"\\' + item; ';\n      }\n      out += ' if (typeof itemIndices[item] == \\'number\\') { ' + ($valid) + ' = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ';\n    }\n    out += ' } ';\n    if ($isData) {\n      out += '  }  ';\n    }\n    out += ' if (!' + ($valid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('uniqueItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT have duplicate items (items ## \\' + j + \\' and \\' + i + \\' are identical)\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema:  ';\n        if ($isData) {\n          out += 'validate.schema' + ($schemaPath);\n        } else {\n          out += '' + ($schema);\n        }\n        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\n\n//all requires must be explicit because browserify won't work with dynamic requires\nmodule.exports = {\n  '$ref': require('./ref'),\n  allOf: require('./allOf'),\n  anyOf: require('./anyOf'),\n  '$comment': require('./comment'),\n  const: require('./const'),\n  contains: require('./contains'),\n  dependencies: require('./dependencies'),\n  'enum': require('./enum'),\n  format: require('./format'),\n  'if': require('./if'),\n  items: require('./items'),\n  maximum: require('./_limit'),\n  minimum: require('./_limit'),\n  maxItems: require('./_limitItems'),\n  minItems: require('./_limitItems'),\n  maxLength: require('./_limitLength'),\n  minLength: require('./_limitLength'),\n  maxProperties: require('./_limitProperties'),\n  minProperties: require('./_limitProperties'),\n  multipleOf: require('./multipleOf'),\n  not: require('./not'),\n  oneOf: require('./oneOf'),\n  pattern: require('./pattern'),\n  properties: require('./properties'),\n  propertyNames: require('./propertyNames'),\n  required: require('./required'),\n  uniqueItems: require('./uniqueItems'),\n  validate: require('./validate')\n};\n","'use strict';\n\nvar ruleModules = require('../dotjs')\n  , toHash = require('./util').toHash;\n\nmodule.exports = function rules() {\n  var RULES = [\n    { type: 'number',\n      rules: [ { 'maximum': ['exclusiveMaximum'] },\n               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },\n    { type: 'string',\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\n    { type: 'array',\n      rules: [ 'maxItems', 'minItems', 'items', 'contains', 'uniqueItems' ] },\n    { type: 'object',\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',\n               { 'properties': ['additionalProperties', 'patternProperties'] } ] },\n    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf', 'if' ] }\n  ];\n\n  var ALL = [ 'type', '$comment' ];\n  var KEYWORDS = [\n    '$schema', '$id', 'id', '$data', 'title',\n    'description', 'default', 'definitions',\n    'examples', 'readOnly', 'writeOnly',\n    'contentMediaType', 'contentEncoding',\n    'additionalItems', 'then', 'else'\n  ];\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\n  RULES.all = toHash(ALL);\n  RULES.types = toHash(TYPES);\n\n  RULES.forEach(function (group) {\n    group.rules = group.rules.map(function (keyword) {\n      var implKeywords;\n      if (typeof keyword == 'object') {\n        var key = Object.keys(keyword)[0];\n        implKeywords = keyword[key];\n        keyword = key;\n        implKeywords.forEach(function (k) {\n          ALL.push(k);\n          RULES.all[k] = true;\n        });\n      }\n      ALL.push(keyword);\n      var rule = RULES.all[keyword] = {\n        keyword: keyword,\n        code: ruleModules[keyword],\n        implements: implKeywords\n      };\n      return rule;\n    });\n\n    RULES.all.$comment = {\n      keyword: '$comment',\n      code: ruleModules.$comment\n    };\n\n    if (group.type) RULES.types[group.type] = group;\n  });\n\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\n  RULES.custom = {};\n\n  return RULES;\n};\n","'use strict';\n\nvar KEYWORDS = [\n  'multipleOf',\n  'maximum',\n  'exclusiveMaximum',\n  'minimum',\n  'exclusiveMinimum',\n  'maxLength',\n  'minLength',\n  'pattern',\n  'additionalItems',\n  'maxItems',\n  'minItems',\n  'uniqueItems',\n  'maxProperties',\n  'minProperties',\n  'required',\n  'additionalProperties',\n  'enum',\n  'format',\n  'const'\n];\n\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\n  for (var i=0; i<keywordsJsonPointers.length; i++) {\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\n    var segments = keywordsJsonPointers[i].split('/');\n    var keywords = metaSchema;\n    var j;\n    for (j=1; j<segments.length; j++)\n      keywords = keywords[segments[j]];\n\n    for (j=0; j<KEYWORDS.length; j++) {\n      var key = KEYWORDS[j];\n      var schema = keywords[key];\n      if (schema) {\n        keywords[key] = {\n          anyOf: [\n            schema,\n            { $ref: 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n    }\n  }\n\n  return metaSchema;\n};\n","'use strict';\n\nvar MissingRefError = require('./error_classes').MissingRef;\n\nmodule.exports = compileAsync;\n\n\n/**\n * Creates validating function for passed schema with asynchronous loading of missing schemas.\n * `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n * @this  Ajv\n * @param {Object}   schema schema object\n * @param {Boolean}  meta optional true to compile meta-schema; this parameter can be skipped\n * @param {Function} callback an optional node-style callback, it is called with 2 parameters: error (or null) and validating function.\n * @return {Promise} promise that resolves with a validating function.\n */\nfunction compileAsync(schema, meta, callback) {\n  /* eslint no-shadow: 0 */\n  /* global Promise */\n  /* jshint validthis: true */\n  var self = this;\n  if (typeof this._opts.loadSchema != 'function')\n    throw new Error('options.loadSchema should be a function');\n\n  if (typeof meta == 'function') {\n    callback = meta;\n    meta = undefined;\n  }\n\n  var p = loadMetaSchemaOf(schema).then(function () {\n    var schemaObj = self._addSchema(schema, undefined, meta);\n    return schemaObj.validate || _compileAsync(schemaObj);\n  });\n\n  if (callback) {\n    p.then(\n      function(v) { callback(null, v); },\n      callback\n    );\n  }\n\n  return p;\n\n\n  function loadMetaSchemaOf(sch) {\n    var $schema = sch.$schema;\n    return $schema && !self.getSchema($schema)\n            ? compileAsync.call(self, { $ref: $schema }, true)\n            : Promise.resolve();\n  }\n\n\n  function _compileAsync(schemaObj) {\n    try { return self._compile(schemaObj); }\n    catch(e) {\n      if (e instanceof MissingRefError) return loadMissingSchema(e);\n      throw e;\n    }\n\n\n    function loadMissingSchema(e) {\n      var ref = e.missingSchema;\n      if (added(ref)) throw new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved');\n\n      var schemaPromise = self._loadingSchemas[ref];\n      if (!schemaPromise) {\n        schemaPromise = self._loadingSchemas[ref] = self._opts.loadSchema(ref);\n        schemaPromise.then(removePromise, removePromise);\n      }\n\n      return schemaPromise.then(function (sch) {\n        if (!added(ref)) {\n          return loadMetaSchemaOf(sch).then(function () {\n            if (!added(ref)) self.addSchema(sch, ref, undefined, meta);\n          });\n        }\n      }).then(function() {\n        return _compileAsync(schemaObj);\n      });\n\n      function removePromise() {\n        delete self._loadingSchemas[ref];\n      }\n\n      function added(ref) {\n        return self._refs[ref] || self._schemas[ref];\n      }\n    }\n  }\n}\n","'use strict';\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + ($definition) + ' = RULES.custom[\\'' + ($keyword) + '\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + ($ruleErrs) + ' = null;';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + ($ruleValidate.validate) + ' ';\n    } else {\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($code);\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + ($validateCode) + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + ($data) + ' ';\n    } else {\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + ($valid) + ' = ';\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n      out += '' + (def_callRuleValidate) + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = await ' + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\n  }\n  out += '' + ($closingBraces);\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + ($nextValid);\n      } else {\n        out += '' + ($valid);\n      }\n    } else {\n      out += ' ' + (!$rDef.valid) + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + (def_customError) + ' ';\n        } else {\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + (def_customError) + ' ';\n      } else {\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n        }\n        out += ' } } else { ' + (def_customError) + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n}\n","'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword\n};\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    if (definition.macro && definition.valid !== undefined)\n      throw new Error('\"valid\" option cannot be used with macro keywords');\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      var i, len = dataType.length;\n      for (i=0; i<len; i++) checkDataType(dataType[i]);\n      for (i=0; i<len; i++) _addRule(keyword, dataType[i], definition);\n    } else {\n      if (dataType) checkDataType(dataType);\n      _addRule(keyword, dataType, definition);\n    }\n\n    var $data = definition.$data === true && this._opts.$data;\n    if ($data && !definition.validate)\n      throw new Error('$data support: \"validate\" function is not defined');\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if ($data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n\n  function checkDataType(dataType) {\n    if (!RULES.types[dataType]) throw new Error('Unknown type ' + dataType);\n  }\n\n  return this;\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n","'use strict';\n\nvar compileSchema = require('./compile')\n  , resolve = require('./compile/resolve')\n  , Cache = require('./cache')\n  , SchemaObject = require('./compile/schema_obj')\n  , stableStringify = require('fast-json-stable-stringify')\n  , formats = require('./compile/formats')\n  , rules = require('./compile/rules')\n  , $dataMetaSchema = require('./data')\n  , util = require('./compile/util');\n\nmodule.exports = Ajv;\n\nAjv.prototype.validate = validate;\nAjv.prototype.compile = compile;\nAjv.prototype.addSchema = addSchema;\nAjv.prototype.addMetaSchema = addMetaSchema;\nAjv.prototype.validateSchema = validateSchema;\nAjv.prototype.getSchema = getSchema;\nAjv.prototype.removeSchema = removeSchema;\nAjv.prototype.addFormat = addFormat;\nAjv.prototype.errorsText = errorsText;\n\nAjv.prototype._addSchema = _addSchema;\nAjv.prototype._compile = _compile;\n\nAjv.prototype.compileAsync = require('./compile/async');\nvar customKeyword = require('./keyword');\nAjv.prototype.addKeyword = customKeyword.add;\nAjv.prototype.getKeyword = customKeyword.get;\nAjv.prototype.removeKeyword = customKeyword.remove;\n\nvar errorClasses = require('./compile/error_classes');\nAjv.ValidationError = errorClasses.Validation;\nAjv.MissingRefError = errorClasses.MissingRef;\nAjv.$dataMetaSchema = $dataMetaSchema;\n\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-07/schema';\n\nvar META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes' ];\nvar META_SUPPORT_DATA = ['/properties'];\n\n/**\n * Creates validator instance.\n * Usage: `Ajv(opts)`\n * @param {Object} opts optional options\n * @return {Object} ajv instance\n */\nfunction Ajv(opts) {\n  if (!(this instanceof Ajv)) return new Ajv(opts);\n  opts = this._opts = util.copy(opts) || {};\n  setLogger(this);\n  this._schemas = {};\n  this._refs = {};\n  this._fragments = {};\n  this._formats = formats(opts.format);\n  var schemaUriFormat = this._schemaUriFormat = this._formats['uri-reference'];\n  this._schemaUriFormatFunc = function (str) { return schemaUriFormat.test(str); };\n\n  this._cache = opts.cache || new Cache;\n  this._loadingSchemas = {};\n  this._compilations = [];\n  this.RULES = rules();\n  this._getId = chooseGetId(opts);\n\n  opts.loopRequired = opts.loopRequired || Infinity;\n  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;\n  if (opts.serialize === undefined) opts.serialize = stableStringify;\n  this._metaOpts = getMetaSchemaOptions(this);\n\n  if (opts.formats) addInitialFormats(this);\n  addDraft6MetaSchema(this);\n  if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);\n  addInitialSchemas(this);\n}\n\n\n\n/**\n * Validate data using schema\n * Schema will be compiled and cached (using serialized JSON as key. [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used to serialize.\n * @this   Ajv\n * @param  {String|Object} schemaKeyRef key, ref or schema object\n * @param  {Any} data to be validated\n * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).\n */\nfunction validate(schemaKeyRef, data) {\n  var v;\n  if (typeof schemaKeyRef == 'string') {\n    v = this.getSchema(schemaKeyRef);\n    if (!v) throw new Error('no schema with key or ref \"' + schemaKeyRef + '\"');\n  } else {\n    var schemaObj = this._addSchema(schemaKeyRef);\n    v = schemaObj.validate || this._compile(schemaObj);\n  }\n\n  var valid = v(data);\n  if (v.$async !== true) this.errors = v.errors;\n  return valid;\n}\n\n\n/**\n * Create validating function for passed schema.\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.\n * @return {Function} validating function\n */\nfunction compile(schema, _meta) {\n  var schemaObj = this._addSchema(schema, undefined, _meta);\n  return schemaObj.validate || this._compile(schemaObj);\n}\n\n\n/**\n * Adds schema to the instance.\n * @this   Ajv\n * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.\n * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.\n * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n * @return {Ajv} this for method chaining\n */\nfunction addSchema(schema, key, _skipValidation, _meta) {\n  if (Array.isArray(schema)){\n    for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);\n    return this;\n  }\n  var id = this._getId(schema);\n  if (id !== undefined && typeof id != 'string')\n    throw new Error('schema id must be string');\n  key = resolve.normalizeId(key || id);\n  checkUnique(this, key);\n  this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);\n  return this;\n}\n\n\n/**\n * Add schema that will be used to validate other schemas\n * options in META_IGNORE_OPTIONS are alway set to false\n * @this   Ajv\n * @param {Object} schema schema object\n * @param {String} key optional schema key\n * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema\n * @return {Ajv} this for method chaining\n */\nfunction addMetaSchema(schema, key, skipValidation) {\n  this.addSchema(schema, key, skipValidation, true);\n  return this;\n}\n\n\n/**\n * Validate schema\n * @this   Ajv\n * @param {Object} schema schema to validate\n * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid\n * @return {Boolean} true if schema is valid\n */\nfunction validateSchema(schema, throwOrLogError) {\n  var $schema = schema.$schema;\n  if ($schema !== undefined && typeof $schema != 'string')\n    throw new Error('$schema must be a string');\n  $schema = $schema || this._opts.defaultMeta || defaultMeta(this);\n  if (!$schema) {\n    this.logger.warn('meta-schema not available');\n    this.errors = null;\n    return true;\n  }\n  var currentUriFormat = this._formats.uri;\n  this._formats.uri = typeof currentUriFormat == 'function'\n                      ? this._schemaUriFormatFunc\n                      : this._schemaUriFormat;\n  var valid;\n  try { valid = this.validate($schema, schema); }\n  finally { this._formats.uri = currentUriFormat; }\n  if (!valid && throwOrLogError) {\n    var message = 'schema is invalid: ' + this.errorsText();\n    if (this._opts.validateSchema == 'log') this.logger.error(message);\n    else throw new Error(message);\n  }\n  return valid;\n}\n\n\nfunction defaultMeta(self) {\n  var meta = self._opts.meta;\n  self._opts.defaultMeta = typeof meta == 'object'\n                            ? self._getId(meta) || meta\n                            : self.getSchema(META_SCHEMA_ID)\n                              ? META_SCHEMA_ID\n                              : undefined;\n  return self._opts.defaultMeta;\n}\n\n\n/**\n * Get compiled schema from the instance by `key` or `ref`.\n * @this   Ajv\n * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).\n * @return {Function} schema validating function (with property `schema`).\n */\nfunction getSchema(keyRef) {\n  var schemaObj = _getSchemaObj(this, keyRef);\n  switch (typeof schemaObj) {\n    case 'object': return schemaObj.validate || this._compile(schemaObj);\n    case 'string': return this.getSchema(schemaObj);\n    case 'undefined': return _getSchemaFragment(this, keyRef);\n  }\n}\n\n\nfunction _getSchemaFragment(self, ref) {\n  var res = resolve.schema.call(self, { schema: {} }, ref);\n  if (res) {\n    var schema = res.schema\n      , root = res.root\n      , baseId = res.baseId;\n    var v = compileSchema.call(self, schema, root, undefined, baseId);\n    self._fragments[ref] = new SchemaObject({\n      ref: ref,\n      fragment: true,\n      schema: schema,\n      root: root,\n      baseId: baseId,\n      validate: v\n    });\n    return v;\n  }\n}\n\n\nfunction _getSchemaObj(self, keyRef) {\n  keyRef = resolve.normalizeId(keyRef);\n  return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];\n}\n\n\n/**\n * Remove cached schema(s).\n * If no parameter is passed all schemas but meta-schemas are removed.\n * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n * @this   Ajv\n * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object\n * @return {Ajv} this for method chaining\n */\nfunction removeSchema(schemaKeyRef) {\n  if (schemaKeyRef instanceof RegExp) {\n    _removeAllSchemas(this, this._schemas, schemaKeyRef);\n    _removeAllSchemas(this, this._refs, schemaKeyRef);\n    return this;\n  }\n  switch (typeof schemaKeyRef) {\n    case 'undefined':\n      _removeAllSchemas(this, this._schemas);\n      _removeAllSchemas(this, this._refs);\n      this._cache.clear();\n      return this;\n    case 'string':\n      var schemaObj = _getSchemaObj(this, schemaKeyRef);\n      if (schemaObj) this._cache.del(schemaObj.cacheKey);\n      delete this._schemas[schemaKeyRef];\n      delete this._refs[schemaKeyRef];\n      return this;\n    case 'object':\n      var serialize = this._opts.serialize;\n      var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;\n      this._cache.del(cacheKey);\n      var id = this._getId(schemaKeyRef);\n      if (id) {\n        id = resolve.normalizeId(id);\n        delete this._schemas[id];\n        delete this._refs[id];\n      }\n  }\n  return this;\n}\n\n\nfunction _removeAllSchemas(self, schemas, regex) {\n  for (var keyRef in schemas) {\n    var schemaObj = schemas[keyRef];\n    if (!schemaObj.meta && (!regex || regex.test(keyRef))) {\n      self._cache.del(schemaObj.cacheKey);\n      delete schemas[keyRef];\n    }\n  }\n}\n\n\n/* @this   Ajv */\nfunction _addSchema(schema, skipValidation, meta, shouldAddSchema) {\n  if (typeof schema != 'object' && typeof schema != 'boolean')\n    throw new Error('schema should be object or boolean');\n  var serialize = this._opts.serialize;\n  var cacheKey = serialize ? serialize(schema) : schema;\n  var cached = this._cache.get(cacheKey);\n  if (cached) return cached;\n\n  shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;\n\n  var id = resolve.normalizeId(this._getId(schema));\n  if (id && shouldAddSchema) checkUnique(this, id);\n\n  var willValidate = this._opts.validateSchema !== false && !skipValidation;\n  var recursiveMeta;\n  if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))\n    this.validateSchema(schema, true);\n\n  var localRefs = resolve.ids.call(this, schema);\n\n  var schemaObj = new SchemaObject({\n    id: id,\n    schema: schema,\n    localRefs: localRefs,\n    cacheKey: cacheKey,\n    meta: meta\n  });\n\n  if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;\n  this._cache.put(cacheKey, schemaObj);\n\n  if (willValidate && recursiveMeta) this.validateSchema(schema, true);\n\n  return schemaObj;\n}\n\n\n/* @this   Ajv */\nfunction _compile(schemaObj, root) {\n  if (schemaObj.compiling) {\n    schemaObj.validate = callValidate;\n    callValidate.schema = schemaObj.schema;\n    callValidate.errors = null;\n    callValidate.root = root ? root : callValidate;\n    if (schemaObj.schema.$async === true)\n      callValidate.$async = true;\n    return callValidate;\n  }\n  schemaObj.compiling = true;\n\n  var currentOpts;\n  if (schemaObj.meta) {\n    currentOpts = this._opts;\n    this._opts = this._metaOpts;\n  }\n\n  var v;\n  try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }\n  finally {\n    schemaObj.compiling = false;\n    if (schemaObj.meta) this._opts = currentOpts;\n  }\n\n  schemaObj.validate = v;\n  schemaObj.refs = v.refs;\n  schemaObj.refVal = v.refVal;\n  schemaObj.root = v.root;\n  return v;\n\n\n  function callValidate() {\n    var _validate = schemaObj.validate;\n    var result = _validate.apply(null, arguments);\n    callValidate.errors = _validate.errors;\n    return result;\n  }\n}\n\n\nfunction chooseGetId(opts) {\n  switch (opts.schemaId) {\n    case 'auto': return _get$IdOrId;\n    case 'id': return _getId;\n    default: return _get$Id;\n  }\n}\n\n/* @this   Ajv */\nfunction _getId(schema) {\n  if (schema.$id) this.logger.warn('schema $id ignored', schema.$id);\n  return schema.id;\n}\n\n/* @this   Ajv */\nfunction _get$Id(schema) {\n  if (schema.id) this.logger.warn('schema id ignored', schema.id);\n  return schema.$id;\n}\n\n\nfunction _get$IdOrId(schema) {\n  if (schema.$id && schema.id && schema.$id != schema.id)\n    throw new Error('schema $id is different from id');\n  return schema.$id || schema.id;\n}\n\n\n/**\n * Convert array of error message objects to string\n * @this   Ajv\n * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.\n * @param  {Object} options optional options with properties `separator` and `dataVar`.\n * @return {String} human readable string with all errors descriptions\n */\nfunction errorsText(errors, options) {\n  errors = errors || this.errors;\n  if (!errors) return 'No errors';\n  options = options || {};\n  var separator = options.separator === undefined ? ', ' : options.separator;\n  var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;\n\n  var text = '';\n  for (var i=0; i<errors.length; i++) {\n    var e = errors[i];\n    if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;\n  }\n  return text.slice(0, -separator.length);\n}\n\n\n/**\n * Add custom format\n * @this   Ajv\n * @param {String} name format name\n * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)\n * @return {Ajv} this for method chaining\n */\nfunction addFormat(name, format) {\n  if (typeof format == 'string') format = new RegExp(format);\n  this._formats[name] = format;\n  return this;\n}\n\n\nfunction addDraft6MetaSchema(self) {\n  var $dataSchema;\n  if (self._opts.$data) {\n    $dataSchema = require('./refs/data.json');\n    self.addMetaSchema($dataSchema, $dataSchema.$id, true);\n  }\n  if (self._opts.meta === false) return;\n  var metaSchema = require('./refs/json-schema-draft-07.json');\n  if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);\n  self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);\n  self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;\n}\n\n\nfunction addInitialSchemas(self) {\n  var optsSchemas = self._opts.schemas;\n  if (!optsSchemas) return;\n  if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);\n  else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);\n}\n\n\nfunction addInitialFormats(self) {\n  for (var name in self._opts.formats) {\n    var format = self._opts.formats[name];\n    self.addFormat(name, format);\n  }\n}\n\n\nfunction checkUnique(self, id) {\n  if (self._schemas[id] || self._refs[id])\n    throw new Error('schema with key or id \"' + id + '\" already exists');\n}\n\n\nfunction getMetaSchemaOptions(self) {\n  var metaOpts = util.copy(self._opts);\n  for (var i=0; i<META_IGNORE_OPTIONS.length; i++)\n    delete metaOpts[META_IGNORE_OPTIONS[i]];\n  return metaOpts;\n}\n\n\nfunction setLogger(self) {\n  var logger = self._opts.logger;\n  if (logger === false) {\n    self.logger = {log: noop, warn: noop, error: noop};\n  } else {\n    if (logger === undefined) logger = console;\n    if (!(typeof logger == 'object' && logger.log && logger.warn && logger.error))\n      throw new Error('logger must implement log, warn and error methods');\n    self.logger = logger;\n  }\n}\n\n\nfunction noop() {}\n","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","import Ajv from \"ajv\";\nimport idb from \"idb\";\nimport jsonSchema from \"../assets/json/schema.json\";\n\nlet currentRecordId = null;\nlet ajv = new Ajv();\nlet jsonValidator = ajv.compile(jsonSchema);\n\nfunction upgradeCallback(upgradeDb) {\n  console.log(\"Upgrading IndexedDB\");\n  if (!upgradeDb.objectStoreNames.contains(\"records\")) {\n    upgradeDb.createObjectStore(\"records\", {\n      keyPath: \"id\",\n      autoIncrement: true\n    });\n  }\n}\n\nlet dbPromise = idb.open(\"AMNHMarineDatabase\", 1, upgradeCallback);\n\nexport function putRecord(record) {\n  if (!jsonValidator(record)) {\n    console.error(jsonValidator.errors);\n    return;\n  }\n\n  return dbPromise.then(db => {\n    const tx = db.transaction(\"records\", \"readwrite\");\n    let objectStore = tx.objectStore(\"records\");\n    if (currentRecordId) {\n      record.id = currentRecordId;\n    }\n    objectStore.put(record).then(id => {\n      currentRecordId = id;\n    });\n    return tx.complete;\n  });\n}\n\nexport function getAllRecords() {\n  return new Promise((resolve, reject) => {\n    dbPromise\n      .then(db => {\n        return db\n          .transaction(\"records\")\n          .objectStore(\"records\")\n          .getAll();\n      })\n      .then(data => {\n        resolve(data);\n      });\n  });\n}\n\nexport function clearDatabase() {\n  return dbPromise.then(db => {\n    const tx = db.transaction(\"records\", \"readwrite\");\n    tx.objectStore(\"records\").clear();\n    return tx.complete;\n  });\n}\n\nexport function getRecord(recordId) {\n  return dbPromise.then(db => {\n    return db\n      .transaction(\"records\")\n      .objectStore(\"records\")\n      .get(recordId);\n  });\n}\n\nexport function deleteRecord(recordId) {\n  return dbPromise.then(db => {\n    const tx = db.transaction(\"records\", \"readwrite\");\n    tx.objectStore(\"records\").delete(recordId);\n    return tx.complete;\n  });\n}\n","import { kebabToCamel } from \"./helpers.js\";\nimport { determinedByPeople, collectors, donors } from \"./add_person.js\";\nimport { getAllRecords, clearDatabase, putRecord } from \"./database.js\";\n\nconst recordTally = document.getElementById(\"num_records\");\n\nfunction countRecords() {\n  getAllRecords().then(records => {\n    recordTally.innerHTML = records.length;\n  });\n}\n\nfunction getUser() {\n  return sessionStorage.getItem(\"userName\").replace(\" \", \"-\");\n}\n\nfunction generateTrackingNumber() {\n  var date = new Date(Date.now());\n  var name = getUser();\n  console.log(name);\n  return `${date.getFullYear()}-${date.getMonth() +\n    1}-${date.getDate()}-${date.getHours()}-${date.getMinutes()}-${date.getSeconds()}-${name}`;\n}\n\nfunction getSection(sectionId) {\n  let sectionData = {};\n  let inputs = document.querySelectorAll(`#${sectionId} [data-key]`);\n  inputs.forEach(input => {\n    if (input.type === \"radio\") {\n      if (input.checked)\n        sectionData[kebabToCamel(input.dataset.key)] = input.value;\n    } else if (input.value !== \"\") {\n      sectionData[kebabToCamel(input.dataset.key)] = input.value;\n    }\n  });\n  return sectionData;\n}\n\nfunction collectFormData() {\n  let record = {\n    recordData: getSection(\"tracking-data\"),\n    taxonomy: getSection(\"taxonomy-data\"),\n    determinedBy: getSection(\"determined-by-data\"),\n    specimenData: getSection(\"specimen-data\"),\n    hostData: getSection(\"host-data\"),\n    collectionData: getSection(\"collection-data\"),\n    locationData: getSection(\"location-data\"),\n    donationData: getSection(\"donation-data\")\n  };\n\n\n  const peopleFields = new Set(['firstName', 'middleName1', 'middleName2',\n                                'lastName1', 'lastName2', 'verbatim']);\n\n  let missingPerson = '';\n  for (var field in record.determinedBy) {\n    if (peopleFields.has(field)) {\n      missingPerson += 'Determined By';\n      break;\n    }\n  }\n  for (var field in record.collectionData) {\n    if (peopleFields.has(field)) {\n      if (missingPerson) {\n        missingPerson += ', '\n      }\n      missingPerson += 'Collecting Data';\n      break;\n    }\n  }\n  for (var field in record.donationData) {\n    if (peopleFields.has(field)) {\n      if (missingPerson) {\n        missingPerson += ', '\n      }\n      missingPerson += 'Donors';\n      break;\n    }\n  }\n\n  if (missingPerson) {\n    alert(`This record cannot be saved until you click the \"ADD PERSON\" button ` +\n          `or remove the names you entered in the ${missingPerson} section(s).`);\n  }\n\n  if (record.hostData.hasHost === \"no\") record.hostData = { hasHost: \"no\" };\n  record.recordData.trackingNumber = generateTrackingNumber();\n  record.determinedBy.people = determinedByPeople.getPeople();\n  record.collectionData.collectors = collectors.getPeople();\n  record.donationData.donors = donors.getPeople();\n  return record;\n}\n\nexport function clearRecords() {\n  const clearConfirm = confirm(\n    \"This will delete all the previously added Records, make sure you have already exported them to a CSV or don't need them. Do you want to delete the records?\"\n  );\n  if (clearConfirm) {\n    clearDatabase().then(() => {\n      countRecords();\n    });\n  }\n}\n\nexport function saveRecord() {\n  return new Promise((resolve, reject) => {\n    let record = collectFormData();\n    putRecord(record).then(result => {\n      countRecords();\n      resolve();\n    })\n  });\n}\n\nexport function newRecord() {\n  saveRecord().then(() => {\n    location.reload();\n  });\n}\n\ncountRecords();\n","import csvHeaders from '../assets/json/headers.json'\nimport {kebabToCamel} from './helpers.js'\nimport {getAllRecords} from './database.js'\n\nfunction writeCSV (records) {\n    let columnDelimiter = ','\n    let lineDelimiter = '\\n'\n    let result = ''\n    let firstElement = true\n    var attribute\n\n    if (records == null || !records.length) {\n        return null;\n    }\n\n    let headers = Object.keys(csvHeaders)\n    result += headers.join(columnDelimiter) + lineDelimiter\n\n    records.forEach(record => {\n        headers.forEach(header => {\n            if (!firstElement) result += columnDelimiter\n            try {\n                attribute = eval(\"record.\" + csvHeaders[header])\n            } catch (e) {\n                attribute = ''\n            }\n            result +=  attribute === 'undefined' || attribute == null ? '' : attribute\n            firstElement = false\n        })\n        result += lineDelimiter\n        firstElement = true\n    })\n\n    return result\n}\n\nexport function exportCSV () {\n    getAllRecords().then(\n        records => {\n            var data, filename, link\n            var csvString = writeCSV(records)\n\n            if (csvString == null) alert(\"Nothing to Export\")\n\n            filename = 'export.csv'\n        \n            if (!csvString.match(/^data:text\\/csv/i)) {\n                csvString = 'data:text/csv;charset=utf-8,' + csvString\n            }\n            data = encodeURI(csvString)\n        \n            link = document.createElement('a')\n            link.setAttribute('href', data)\n            link.setAttribute('download', filename)\n            link.click()\n        }\n    )\n}\n","import { newRecord, saveRecord, clearRecords } from \"./records.js\";\nimport { exportCSV } from \"./csv.js\";\n\nconst hostYesRadio = document.getElementById(\"host-yes\");\nconst hostNoRadio = document.getElementById(\"host-no\");\nconst newRecordButton = document.getElementById(\"add-record-button\");\nconst saveButton = document.getElementById(\"save-button\");\nconst exportCSVButton = document.getElementById(\"export-csv-button\");\nconst clearRecordsButton = document.getElementById(\"clear-records-button\");\nconst hostSection = document.getElementById(\"optionalHostInfo\");\n\nhostYesRadio.addEventListener(\"click\", () => {\n  hostSection.classList.remove(\"u-hidden\");\n});\n\nhostNoRadio.addEventListener(\"click\", () => {\n  hostSection.classList.add(\"u-hidden\");\n});\n\nnewRecordButton.addEventListener(\"click\", newRecord);\nsaveButton.addEventListener(\"click\", saveRecord);\nexportCSVButton.addEventListener(\"click\", () => {\n  saveRecord();\n  exportCSV();\n});\nclearRecordsButton.addEventListener(\"click\", clearRecords);\n"]}